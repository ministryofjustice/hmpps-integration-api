version: 2.1
orbs:
  hmpps: ministryofjustice/hmpps@8
  slack: circleci/slack@4.12.1
  shellcheck: circleci/shellcheck@3
  aws-cli: circleci/aws-cli@4.0.0
  aws-ecr: circleci/aws-ecr@8.2.1

parameters:
  alerts-slack-channel:
    type: string
    default: hmpps-integration-api-alerts
  releases-slack-channel:
    type: string
    default: hmpps-integration-api-alerts

commands:
  slack-fail-notify:
    parameters:
      job_name:
        type: string
        default: "${CIRCLE_JOB}"
    steps:
      - slack/notify:
          event: fail
          branch_pattern: main
          channel: << pipeline.parameters.alerts-slack-channel >>
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":this-is-fine-fire: << parameters.job_name >> job has failed",
                    "emoji": true
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Project: *${CIRCLE_PROJECT_REPONAME}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Branch: *${CIRCLE_BRANCH}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Build: *#${CIRCLE_BUILD_NUM}*"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View job" },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

jobs:
  lint-code:
    executor:
      name: hmpps/java
      tag: "21.0"
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'gradle-{{ checksum "build.gradle.kts" }}'
            - "gradle-"
      - run:
          name: "Lint code"
          command: make lint
      - save_cache:
          paths:
            - "~/.gradle"
          key: 'gradle-{{ checksum "build.gradle.kts" }}'
    post-steps:
      - slack-fail-notify:
          job_name: "Lint code"

  unit-tests:
    executor:
      name: hmpps/java
      tag: "21.0"
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'gradle-{{ checksum "build.gradle.kts" }}'
            - "gradle-"
      - run:
          name: "Run unit tests"
          command: make unit-test
      - save_cache:
          paths:
            - "~/.gradle"
          key: 'gradle-{{ checksum "build.gradle.kts" }}'
      - store_test_results:
          path: build/test-results
    post-steps:
      - slack-fail-notify:
          job_name: "Unit tests"

  integration-tests:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'gradle-{{ checksum "build.gradle.kts" }}'
            - "gradle-"
      - run:
          name: "Install OpenJDK 21"
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-21-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-21-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-21-openjdk-amd64/bin/javac
            java -version
      - run:
          name: "Run integration tests"
          command: make integration-test
    post-steps:
      - slack-fail-notify:
          job_name: "Integration tests"

  create-and-push-image-to-ecr:
    docker:
      - image: ministryofjustice/cloud-platform-tools
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Build application Docker image"
          command: make build
      - hmpps/create_app_version
      - aws-cli/setup:
          role_arn: "$ECR_ROLE_TO_ASSUME"
          region: "AWS_DEFAULT_REGION"
      - deploy:
          name: "Push application Docker image"
          command: make publish
    post-steps:
      - slack-fail-notify:
          job_name: "Create and push image to ECR"

  heartbeat:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - run:
          name: "Run heartbeat"
          command: make heartbeat
    post-steps:
      - slack-fail-notify:
          job_name: "Heartbeat"

  smoke-tests:
    docker:
      - image: grafana/k6:1.0.0
    steps:
      - checkout
      - run:
          name: "Run smoke tests"
          command: |
            k6 run ./scripts/K6/full-access-smoke-tests.js
            k6 run ./scripts/K6/limited-access-smoke-tests.js
            k6 run ./scripts/K6/no-access-with-certs-smoke-tests.js
            k6 run ./scripts/K6/no-access-without-certs-smoke-tests.js

  notify-slack-on-smoke-test-fail:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          event: fail
          channel: "<< pipeline.parameters.alerts-slack-channel >>"
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":this-is-fine-fire: ${CIRCLE_JOB} job has failed",
                    "emoji": true
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Project: *${CIRCLE_PROJECT_REPONAME}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Branch: *${CIRCLE_BRANCH}*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Build: *#${CIRCLE_BUILD_NUM}*"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View job" },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - lint-code:
          context:
            - hmpps-common-vars
      - unit-tests:
          context:
            - hmpps-common-vars
      - integration-tests:
          context:
            - hmpps-common-vars
      - hmpps/helm_lint:
          context:
            - hmpps-common-vars
          name: lint-helm-charts
          env: dev
          post-steps:
            - slack-fail-notify:
                job_name: "Helm lint"
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - create-and-push-image-to-ecr:
          name: create-and-push-image-to-dev-ecr
          context:
            - hmpps-integration-api-dev
            - hmpps-common-vars
          requires:
            - lint-code
            - unit-tests
            - integration-tests
            - lint-helm-charts
            - build_docker
          filters:
            branches:
              only:
                - main
          post-steps:
            - slack-fail-notify:
                job_name: "Create and push image to DEV ECR"
      - hmpps/deploy_env:
          name: deploy-to-dev
          context:
            - hmpps-integration-api-dev
            - hmpps-common-vars
          requires:
            - create-and-push-image-to-dev-ecr
          filters:
            branches:
              only:
                - main
          env: dev
          helm_timeout: "5m"
          slack_channel_name: "<< pipeline.parameters.releases-slack-channel >>"
          slack_notification: false
          post-steps:
            - slack-fail-notify:
                job_name: "Deploy to DEV"
      - heartbeat:
          name: post-deploy-heartbeat-for-dev
          context:
            - hmpps-common-vars
            - hmpps-integration-api-heartbeat-dev
          requires:
            - deploy-to-dev
          post-steps:
            - slack-fail-notify:
                job_name: "Post-deploy heartbeat for DEV"
      - smoke-tests:
          name: smoke-tests-for-dev
          context:
            - hmpps-common-vars
            - hmpps-integration-api-smoke-test-dev
      #          requires:
      #            - post-deploy-heartbeat-for-dev
      - notify-slack-on-smoke-test-fail:
          name: notify-slack-on-smoke-test-fail-workflow-step
          context:
            - hmpps-common-vars
            - hmpps-integration-api-smoke-test-dev
          requires:
            - smoke-tests-for-dev
          filters:
          #            branches:
          #              only: main
          results:
            - fail
      - create-and-push-image-to-ecr:
          name: create-and-push-image-to-preprod-ecr
          context:
            - hmpps-common-vars
            - hmpps-integration-api-preprod
          requires:
            - post-deploy-heartbeat-for-dev
          filters:
            branches:
              only:
                - main
          post-steps:
            - slack-fail-notify:
                job_name: "Create and push image to PREPROD ECR"
      - hmpps/deploy_env:
          name: deploy-to-preprod
          context:
            - hmpps-integration-api-preprod
            - hmpps-common-vars
          requires:
            - create-and-push-image-to-preprod-ecr
          filters:
            branches:
              only:
                - main
          env: preprod
          helm_timeout: "5m"
          slack_channel_name: "<< pipeline.parameters.releases-slack-channel >>"
          slack_notification: false
          post-steps:
            - slack-fail-notify:
                job_name: "Deploy to PREPROD"
      - create-and-push-image-to-ecr:
          name: create-and-push-image-to-prod-ecr
          context:
            - hmpps-common-vars
            - hmpps-integration-api-prod
          requires:
            - deploy-to-preprod
          filters:
            branches:
              only:
                - main
          post-steps:
            - slack-fail-notify:
                job_name: "Create and push image to PROD ECR"
      - hmpps/deploy_env:
          name: deploy-to-prod
          context:
            - hmpps-integration-api-prod
            - hmpps-common-vars
          requires:
            - create-and-push-image-to-prod-ecr
          filters:
            branches:
              only:
                - main
          env: prod
          helm_timeout: "5m"
          slack_channel_name: "<< pipeline.parameters.releases-slack-channel >>"
          slack_notification: false
          post-steps:
            - slack-fail-notify:
                job_name: "Deploy to PROD"

  security:
    triggers:
      - schedule:
          cron: "11 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          jdk_tag: "21.0"
          slack_channel: "<< pipeline.parameters.alerts-slack-channel >>"
          context:
            - hmpps-common-vars
          post-steps:
            - slack-fail-notify:
                job_name: "OWASP Dependency Check"
      - hmpps/veracode_pipeline_scan:
          slack_channel: "<< pipeline.parameters.alerts-slack-channel >>"
          context:
            - veracode-credentials
            - hmpps-common-vars
          post-steps:
            - slack-fail-notify:
                job_name: "Veracode Pipeline Scan"
      - hmpps/trivy_latest_scan:
          slack_channel: "<< pipeline.parameters.alerts-slack-channel >>"
          context:
            - hmpps-common-vars
          post-steps:
            - slack-fail-notify:
                job_name: "Trivy Scan"

  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: "<< pipeline.parameters.alerts-slack-channel >>"
          context:
            - veracode-credentials
            - hmpps-common-vars
          post-steps:
            - slack-fail-notify:
                job_name: "Veracode Policy Scan"
