version: "3.9"
services:
  hmpps-integration-api:
    build:
      context: .
    container_name: hmpps-integration-api
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    depends_on:
      prison-api:
        condition: service_healthy
      prisoner-search:
        condition: service_healthy
      probation-offender-search:
        condition: service_healthy
      probation-integration-epf-api:
        condition: service_healthy
      manage-pom-case-api:
        condition: service_healthy
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=local-docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=TRACE

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    container_name: hmpps-auth
    ports:
      - "9090:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/health" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=TRACE

  ndelius-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-ndelius-api
    container_name: ndelius-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://127.0.0.1:4010/case/abc/supervisions -O /dev/null'
    ports:
      - '4040:4010'

  prison-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-prison-api
    container_name: prison-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://127.0.0.1:4010/api/offenders/A1234AL -O /dev/null'
    ports:
      - '4030:4010'

  prisoner-search:
    build:
      context: .
      dockerfile: Dockerfile.setup-prisoner-search
    container_name: prisoner-search
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://127.0.0.1:4010/prisoner/A1234AL -O /dev/null'
    ports:
      - "4010:4010"

  probation-offender-search:
    build:
      context: .
      dockerfile: Dockerfile.setup-probation-offender-search
    container_name: probation-offender-search
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://0.0.0.0:4010/synthetic-monitor -O /dev/null'
    ports:
      - '4020:4010'

  assess-risks-and-needs-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-assess-risks-and-needs-api
    container_name: assess-risks-and-needs-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://0.0.0.0:4010/risks/crn/abc/predictors/all -O /dev/null'
    ports:
      - '4050:4010'

  probation-integration-epf-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-probation-integration-epf-api
    container_name: probation-integration-epf-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://0.0.0.0:4010/case-details/crn/1234 -O /dev/null'
    ports:
      - '4060:4010'

  adjudications-api:
    build:
      context: .
      dockerfile: Dockerfile.adjudications-api
    container_name: adjudications-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://0.0.0.0:4010/reported-adjudications/prisoner/123 -O /dev/null'
    ports:
      - '4045:4010'

  create-and-vary-licence-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-create-and-vary-a-licence-api
    container_name: create-and-vary-licence-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://0.0.0.0:4010/public/licences/id/123 -O /dev/null'
    ports:
      - '4070:4010'

  case-notes-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-case-notes-api
    container_name: case-notes-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://0.0.0.0:4010/case-notes/1234 -O /dev/null'
    ports:
      - '4080:4010'

  manage-pom-case-api:
    build:
      context: .
      dockerfile: Dockerfile.setup-manage-pom-case-api
    container_name: manage-pom-case-api
    healthcheck:
      test: 'wget --header="Authorization: Bearer abc" http://127.0.0.1:4010/api/allocation/X1234YZ/primary_pom -O /dev/null'
    ports:
      - '4090:4010'

  local-stack-aws:
    image: localstack/localstack:3.0
    container_name: local-stack-aws
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sns,sqs
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
    volumes:
      - './localstack:/var/lib/localstack'
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  hmpps:
