name: Test

on:
  pull_request:
  workflow_call:
jobs:
  ktlint-check:
    name: KtLintCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run ktlintCheck
        run: make lint

  detekt:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Run detekt
        run: ./gradlew detekt
      - name: Upload raw test reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: detekt results
          path: |
            build/reports/detekt
  unit_test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Unit Tests
        shell: bash
        run: TEST_TYPE="UNIT" ./gradlew koverBinaryReport
      - name: Upload raw test reports on failure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_results
          path: |
            build/classes
            build/test-results
            build/kover
            build/reports/tests
      - name: Publish Test Report
        uses: ctrf-io/github-test-reporter@a63590595a9ae45cb646c55a314110f910d360d2
        with:
          report-path: './build/test-results/unitTest/*.xml'
          use-suite-name: true
          integrations-config: |
            {
              "junit-to-ctrf": {
                "enabled": true,
                "action": "convert",
                "options": {
                  "output": "./ctrf-reports/ctrf-report.json",
                  "toolname": "junit-to-ctrf",
                  "useSuiteName": true,
                  "env": {
                    "appName": "hmpps-integration-api"
                  }
                }
              }
            }
        if: always()
  integration_test:
    name: Integration Test
    runs-on: ubuntu-latest
    env:
      _JAVA_OPTIONS: "-Xmx2g"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Serve Dependencies
        run: make serve-dependencies
      - name: Run Integration Tests
        run: TEST_TYPE="INT" ./gradlew koverXmlReport
      - name: Upload raw test reports on failure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration_test_results
          path: |
            build/classes
            build/test-results
            build/reports/tests
            build/kover
      - name: Publish Test Report
        uses: ctrf-io/github-test-reporter@a63590595a9ae45cb646c55a314110f910d360d2
        with:
          report-path: './build/test-results/integrationTest/*.xml'
          use-suite-name: true
          integrations-config: |
            {
              "junit-to-ctrf": {
                "enabled": true,
                "action": "convert",
                "options": {
                  "output": "./ctrf-reports/ctrf-report.json",
                  "toolname": "junit-to-ctrf",
                  "useSuiteName": true,
                  "env": {
                    "appName": "hmpps-integration-api"
                  }
                }
              }
            }
        if: always()
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: [integration_test, unit_test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: download the unit_test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit_test_results
          path: |
            unit_test_results/
      - name: download the integration_test coverage
        uses: actions/download-artifact@v4
        with:
          name: integration_test_results
          path: |
            integration_test_results/
      - name: Copy coverage files
        shell: bash
        run: |
          mkdir ${{ github.workspace }}/lib
          mkdir ${{ github.workspace }}/build
          cp -rf ${{ github.workspace }}/unit_test_results/classes ${{ github.workspace }}/build/.
          cp ${{ github.workspace }}/unit_test_results/kover/bin-reports/unitTest.ic ${{ github.workspace }}/lib/.
          cp ${{ github.workspace }}/integration_test_results/kover/bin-reports/integrationTest.ic ${{ github.workspace }}/lib/.
      - name: Copy coverage files
        run: ./gradlew createCoverageReport
      - name: Add coverage report to PR
        id: kover
        uses: mi-kas/kover-report@v1
        with:
          path: |
            ${{ github.workspace }}/coverage/report.xml
          title: Code Coverage
          update-comment: true
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          coverage-counter-type: LINE
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage
