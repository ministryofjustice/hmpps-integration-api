{
  "openapi": "3.1.0",
  "info": {
    "title": "hmpps-manage-prison-visits-orchestration",
    "description": "Visits Orchestration service used by Visits frontend to make external API calls and collate responses",
    "contact": { "name": "Visit Someone in Prison", "email": "prisonvisitsbooking@digital.justice.gov.uk" },
    "version": "2025-02-17.10679.c3f2fa0"
  },
  "servers": [
    { "url": "https://hmpps-manage-prison-visits-orchestration.prison.service.justice.gov.uk", "description": "Prod" },
    { "url": "https://hmpps-manage-prison-visits-orchestration-preprod.prison.service.justice.gov.uk", "description": "PreProd" },
    { "url": "https://hmpps-manage-prison-visits-orchestration-staging.prison.service.justice.gov.uk", "description": "Staging" },
    { "url": "https://hmpps-manage-prison-visits-orchestration-dev.prison.service.justice.gov.uk", "description": "Development" },
    { "url": "http://localhost:8080", "description": "Local" }
  ],
  "paths": {
    "/visits/{reference}/cancel": {
      "put": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Cancel an existing booked visit",
        "operationId": "cancelVisit",
        "parameters": [{ "name": "reference", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CancelVisitOrchestrationDto" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Visit cancelled", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/VisitDto" } } } },
          "400": {
            "description": "Incorrect request to cancel a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to cancel a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Visit not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/{applicationReference}/book": {
      "put": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Book a visit (end of flow)",
        "operationId": "bookAVisit",
        "parameters": [
          {
            "name": "applicationReference",
            "in": "path",
            "description": "applicationReference",
            "required": true,
            "schema": { "type": "string", "description": "applicationReference", "example": "dfs-wjs-eqr" },
            "example": "dfs-wjs-eqr"
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BookingOrchestrationRequestDto" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Visit updated", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/VisitDto" } } } },
          "400": {
            "description": "Incorrect request to book a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to book a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Visit not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "422": {
            "description": "Application validation failed",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApplicationValidationErrorResponse" } } }
          }
        }
      }
    },
    "/visits/notification/visit/{reference}/ignore": {
      "put": {
        "tags": ["Visit notification controller /visits/notification"],
        "summary": "Do not change an existing booked visit and ignore all notifications",
        "operationId": "ignoreVisitNotifications",
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "description": "reference",
            "required": true,
            "schema": { "type": "string", "description": "reference", "example": "v9-d7-ed-7u" },
            "example": "v9-d7-ed-7u"
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IgnoreVisitNotificationsDto" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Visit notifications cleared and reason noted.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/VisitDto" } } }
          },
          "400": {
            "description": "Incorrect request to ignore visit notifications.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to ignore visit notifications.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Visit not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/application/{reference}/slot/change": {
      "put": {
        "tags": ["orchestration-applications-controller"],
        "summary": "Change an incomplete application",
        "operationId": "changeIncompleteApplication",
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "description": "reference",
            "required": true,
            "schema": { "type": "string", "description": "reference", "example": "dfs-wjs-eqr" },
            "example": "dfs-wjs-eqr"
          }
        ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ChangeApplicationDto" } } }, "required": true },
        "responses": {
          "200": { "description": "Visit slot changed", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/ApplicationDto" } } } },
          "400": {
            "description": "Incorrect request to changed a visit slot",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to changed a visit slot",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Visit slot not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/application/{bookingReference}/change": {
      "put": {
        "tags": ["orchestration-applications-controller"],
        "summary": "Create an application for an existing visit",
        "operationId": "createApplicationForAnExistingVisit",
        "parameters": [
          {
            "name": "bookingReference",
            "in": "path",
            "description": "bookingReference",
            "required": true,
            "schema": { "type": "string", "description": "bookingReference", "example": "v9-d7-ed-7u" },
            "example": "v9-d7-ed-7u"
          }
        ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateApplicationDto" } } }, "required": true },
        "responses": {
          "201": { "description": "Visit created", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/ApplicationDto" } } } },
          "400": {
            "description": "Incorrect request to change a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to change a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": ["hmpps-queue-resource"],
        "operationId": "retryDlq",
        "parameters": [{ "name": "dlqName", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/RetryDlqResult" } } } } }
      }
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": ["hmpps-queue-resource"],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/RetryDlqResult" } } } }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": ["hmpps-queue-resource"],
        "operationId": "purgeQueue",
        "parameters": [{ "name": "queueName", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/PurgeQueueResult" } } } } }
      }
    },
    "/public/booker/register/auth": {
      "put": {
        "tags": ["public-booker-controller"],
        "summary": "Authenticate one login details against pre populated bookers",
        "description": "Authenticate one login details against pre populated bookers and return BookerReference object to be used for all other api calls for booker information",
        "operationId": "bookerAuthorisation",
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthDetailDto" } } }, "required": true },
        "responses": {
          "200": {
            "description": "One login details matched with pre populated booker",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/BookerReference" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions for this action",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Booker not authorised / not found.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/sessions/session/{sessionTemplateReference}/exclude-date/remove": {
      "put": {
        "tags": ["orchestration-sessions-exclude-date-controller"],
        "summary": "Remove exclude date for a given session template",
        "description": "Remove exclude date for a given session template",
        "operationId": "removeExcludeDateForSessionTemplate",
        "parameters": [
          {
            "name": "sessionTemplateReference",
            "in": "path",
            "description": "session template reference",
            "required": true,
            "schema": { "type": "string", "description": "session template reference", "example": "aaa-bbb-ccc" },
            "example": "aaa-bbb-ccc"
          }
        ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExcludeDateDto" } } }, "required": true },
        "responses": {
          "200": {
            "description": "Exclude dates successfully removed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 EARLY_HINTS",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request to remove exclude date",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to add exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Session Template not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/sessions/session/{sessionTemplateReference}/exclude-date/add": {
      "put": {
        "tags": ["orchestration-sessions-exclude-date-controller"],
        "summary": "Add exclude date for a given session template",
        "description": "Add exclude date for a given session template",
        "operationId": "addExcludeDateForSessionTemplate",
        "parameters": [
          {
            "name": "sessionTemplateReference",
            "in": "path",
            "description": "session template reference",
            "required": true,
            "schema": { "type": "string", "description": "session template reference", "example": "aaa-bbb-ccc" },
            "example": "aaa-bbb-ccc"
          }
        ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExcludeDateDto" } } }, "required": true },
        "responses": {
          "200": {
            "description": "Exclude dates successfully added",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 EARLY_HINTS",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request to add exclude date",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to add exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Session template not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/prison/{prisonCode}/exclude-date/remove": {
      "put": {
        "tags": ["orchestration-prisons-exclude-date-controller"],
        "summary": "Remove exclude date for a given prison",
        "description": "Remove exclude date for a given prison",
        "operationId": "removeExcludeDateForPrison",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prison code",
            "required": true,
            "schema": { "type": "string", "description": "prison code", "example": "HEI" },
            "example": "HEI"
          }
        ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExcludeDateDto" } } }, "required": true },
        "responses": {
          "200": {
            "description": "Exclude dates successfully removed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 EARLY_HINTS",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request to remove exclude date",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to add exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Prison not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/prison/{prisonCode}/exclude-date/add": {
      "put": {
        "tags": ["orchestration-prisons-exclude-date-controller"],
        "summary": "Add exclude date for a given prison",
        "description": "Add exclude date for a given prison",
        "operationId": "addExcludeDateForPrison",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prison code",
            "required": true,
            "schema": { "type": "string", "description": "prison code", "example": "HEI" },
            "example": "HEI"
          }
        ],
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExcludeDateDto" } } }, "required": true },
        "responses": {
          "200": {
            "description": "Exclude dates successfully added",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 EARLY_HINTS",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Incorrect request to add exclude date",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to add exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Prison not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/application/slot/reserve": {
      "post": {
        "tags": ["orchestration-applications-controller"],
        "summary": "Create an initial application and reserve a slot",
        "operationId": "createInitialApplication",
        "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateApplicationDto" } } }, "required": true },
        "responses": {
          "201": { "description": "Visit slot reserved", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/ApplicationDto" } } } },
          "400": {
            "description": "Incorrect request to reserve a slot",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to reserve a slot",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/{reference}": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get a visit",
        "description": "Retrieve a BOOKED or CANCELLED visit by visit reference",
        "operationId": "getVisitsByReference",
        "parameters": [{ "name": "reference", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Visit Information Returned", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/VisitDto" } } } },
          "500": {
            "description": "Incorrect request to Get visits for prisoner",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions retrieve a visit",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Visit not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/{reference}/history": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get visit history",
        "description": "Retrieve visit history by visit reference",
        "operationId": "getVisitHistoryByReference",
        "parameters": [{ "name": "reference", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "Visit History Information Returned",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/VisitHistoryDetailsDto" } } }
          },
          "400": {
            "description": "Incorrect request to Get visit history",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions retrieve visit history",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Visit not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/session-template": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get visits for a session template reference and date",
        "description": "Retrieve visits for session template reference and date",
        "operationId": "getVisitsBySessionTemplate",
        "parameters": [
          {
            "name": "sessionTemplateReference",
            "in": "query",
            "description": "Session template reference",
            "required": false,
            "schema": { "type": "string", "description": "Session template reference", "example": "v9-d7-ed-7u" },
            "example": "v9-d7-ed-7u"
          },
          {
            "name": "sessionDate",
            "in": "query",
            "description": "Get visits for session date",
            "required": true,
            "schema": { "type": "string", "format": "date", "description": "Get visits for session date", "example": "2023-05-31" },
            "example": "2023-05-31"
          },
          {
            "name": "visitStatus",
            "in": "query",
            "description": "To filter visits by status",
            "required": true,
            "schema": { "$ref": "#/components/schemas/visitStatus" },
            "example": "BOOKED"
          },
          {
            "name": "visitRestrictions",
            "in": "query",
            "description": "Visit Restriction(s) - OPEN / CLOSED / UNKNOWN",
            "required": false,
            "schema": { "$ref": "#/components/schemas/visitRestrictions" },
            "example": "OPEN"
          },
          {
            "name": "prisonCode",
            "in": "query",
            "description": "Filter results by prison id/code",
            "required": true,
            "schema": { "type": "string", "description": "Filter results by prison id/code", "example": "MDI" },
            "example": "MDI"
          }
        ],
        "responses": {
          "200": {
            "description": "Visit details returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/VisitPreviewDto" } } } }
          },
          "400": {
            "description": "Incorrect request to Get visits for session template",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to retrieve visits for session template",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/search": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get visits",
        "description": "Retrieve visits with optional filters, sorted by start timestamp descending",
        "operationId": "getVisitsByFilterPageable",
        "parameters": [
          {
            "name": "prisonerId",
            "in": "query",
            "description": "Filter results by prisoner id",
            "required": false,
            "schema": { "type": "string" },
            "example": "A12345DC"
          },
          {
            "name": "prisonId",
            "in": "query",
            "description": "Filter results by prison id/code",
            "required": false,
            "schema": { "type": "string" },
            "example": "MDI"
          },
          {
            "name": "visitStartDate",
            "in": "query",
            "description": "Filter results by visits that start on or after the given date",
            "required": false,
            "schema": { "type": "string", "format": "date" },
            "example": "2021-11-03"
          },
          {
            "name": "visitEndDate",
            "in": "query",
            "description": "Filter results by visits that start on or before the given date",
            "required": false,
            "schema": { "type": "string", "format": "date" },
            "example": "2021-11-03"
          },
          {
            "name": "visitStatus",
            "in": "query",
            "description": "Filter results by visit status",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } },
            "example": "BOOKED"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination page number, starting at zero",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Pagination size per page",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 50
          }
        ],
        "responses": {
          "200": { "description": "Visit Information Returned", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/PageVisitDto" } } } },
          "400": {
            "description": "Incorrect request to Get visits for prisoner",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to retrieve visits",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/search/future/{prisonerId}": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get future visits for a prisoner",
        "description": "Get future visits for given prisoner number",
        "operationId": "getFutureVisitsForPrisoner",
        "parameters": [{ "name": "prisonerId", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "Returned future visits for a prisoner",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/VisitDto" } } } }
          },
          "400": {
            "description": "Incorrect request to get future visits for a prisoner",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to get future visits for a prisoner",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/notification/{prisonCode}/groups": {
      "get": {
        "tags": ["Visit notification controller /visits/notification"],
        "summary": "get future notification visit groups by prison code",
        "description": "Retrieve future notification visit groups by prison code",
        "operationId": "getFutureNotificationVisitGroups",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prisonCode",
            "required": true,
            "schema": { "type": "string", "description": "prisonCode", "example": "CFI" },
            "example": "CFI"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved future notification visit groups by prison code",
            "content": {
              "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/OrchestrationNotificationGroupDto" } } }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/notification/{prisonCode}/count": {
      "get": {
        "tags": ["Visit notification controller /visits/notification"],
        "summary": "Get notification count for a prison",
        "description": "Retrieve notification count by prison code",
        "operationId": "getNotificationCountForPrison",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prisonCode",
            "required": true,
            "schema": { "type": "string", "description": "prisonCode", "example": "CFI" },
            "example": "CFI"
          },
          {
            "name": "types",
            "in": "query",
            "description": "list of notificationEventTypes",
            "required": false,
            "schema": {
              "type": "array",
              "description": "list of notificationEventTypes",
              "items": {
                "type": "string",
                "description": "list of notificationEventTypes",
                "enum": [
                  "NON_ASSOCIATION_EVENT",
                  "PRISONER_RELEASED_EVENT",
                  "PRISONER_RESTRICTION_CHANGE_EVENT",
                  "PRISON_VISITS_BLOCKED_FOR_DATE",
                  "SESSION_VISITS_BLOCKED_FOR_DATE",
                  "PRISONER_RECEIVED_EVENT",
                  "PRISONER_ALERTS_UPDATED_EVENT",
                  "PERSON_RESTRICTION_UPSERTED_EVENT",
                  "VISITOR_RESTRICTION_UPSERTED_EVENT",
                  "VISITOR_UNAPPROVED_EVENT"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve notification count for a prison",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotificationCountDto" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visits/notification/visit/{reference}/types": {
      "get": {
        "tags": ["Visit notification controller /visits/notification"],
        "summary": "get visit notification types by booking reference",
        "description": "Retrieve visit  notification types by booking reference",
        "operationId": "getNotificationTypesForBookingReference",
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "description": "bookingReference",
            "required": true,
            "schema": { "type": "string", "description": "bookingReference", "example": "v9*d7*ed*7u" },
            "example": "v9*d7*ed*7u"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved visit  notification types by booking reference",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "NON_ASSOCIATION_EVENT",
                      "PRISONER_RELEASED_EVENT",
                      "PRISONER_RESTRICTION_CHANGE_EVENT",
                      "PRISON_VISITS_BLOCKED_FOR_DATE",
                      "SESSION_VISITS_BLOCKED_FOR_DATE",
                      "PRISONER_RECEIVED_EVENT",
                      "PRISONER_ALERTS_UPDATED_EVENT",
                      "PERSON_RESTRICTION_UPSERTED_EVENT",
                      "VISITOR_RESTRICTION_UPSERTED_EVENT",
                      "VISITOR_UNAPPROVED_EVENT"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visit-sessions": {
      "get": {
        "tags": ["orchestration-sessions-controller"],
        "summary": "Returns all visit sessions which are within the reservable time period - whether or not they are full",
        "description": "Retrieve all visits for a specified prisoner",
        "operationId": "getVisitSessions",
        "parameters": [
          {
            "name": "prisonId",
            "in": "query",
            "description": "Query by NOMIS Prison Identifier",
            "required": true,
            "schema": { "type": "string" },
            "example": "MDI"
          },
          {
            "name": "prisonerId",
            "in": "query",
            "description": "Filter results by prisoner id",
            "required": false,
            "schema": { "type": "string" },
            "example": "A12345DC"
          },
          {
            "name": "min",
            "in": "query",
            "description": "Override the default minimum number of days notice from the current date",
            "required": false,
            "schema": { "type": "integer", "format": "int32" },
            "example": 2
          },
          {
            "name": "max",
            "in": "query",
            "description": "Override the default maximum number of days to book-ahead from the current date",
            "required": false,
            "schema": { "type": "integer", "format": "int32" },
            "example": 28
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username for the user making the request. Used to exclude user's pending applications from session capacity count. Optional, ignored if not passed in.",
            "required": false,
            "schema": { "type": "string" },
            "example": "user-1"
          }
        ],
        "responses": {
          "200": {
            "description": "Visit session information returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/VisitSessionDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "400": {
            "description": "Incorrect request to Get visit sessions ",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visit-sessions/session": {
      "get": {
        "tags": ["orchestration-sessions-controller"],
        "summary": "Returns a single VSIP session",
        "description": "Returns a single VSIP session",
        "operationId": "getVisitSession",
        "parameters": [
          { "name": "prisonCode", "in": "query", "description": "Prison code", "required": true, "schema": { "type": "string" }, "example": "MDI" },
          {
            "name": "sessionDate",
            "in": "query",
            "description": "Session date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "example": "2020-11-01"
          },
          {
            "name": "sessionTemplateReference",
            "in": "query",
            "description": "Session template reference",
            "required": true,
            "schema": { "type": "string" },
            "example": "xye-fjc-abc"
          }
        ],
        "responses": {
          "200": {
            "description": "the session was found and returned",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/VisitSessionDto" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "400": {
            "description": "Incorrect request",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Session not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visit-sessions/schedule": {
      "get": {
        "tags": ["orchestration-sessions-controller"],
        "summary": "Returns session scheduled for given prison and date",
        "description": "Returns session scheduled for given prison and date",
        "operationId": "getSessionSchedule",
        "parameters": [
          {
            "name": "prisonId",
            "in": "query",
            "description": "Query by NOMIS Prison Identifier",
            "required": true,
            "schema": { "type": "string" },
            "example": "CLI"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Session date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "example": "2023-01-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Session templates returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/SessionScheduleDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to view session templates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visit-sessions/capacity": {
      "get": {
        "tags": ["orchestration-sessions-controller"],
        "summary": "Returns the VSIP session capacity for the given sessions",
        "description": "Returns the VSIP session capacity for the given sessions",
        "operationId": "getSessionCapacity",
        "parameters": [
          {
            "name": "prisonId",
            "in": "query",
            "description": "Query by NOMIS Prison Identifier",
            "required": true,
            "schema": { "type": "string" },
            "example": "CLI"
          },
          {
            "name": "sessionDate",
            "in": "query",
            "description": "Session date",
            "required": true,
            "schema": { "type": "string", "format": "date" },
            "example": "2020-11-01"
          },
          {
            "name": "sessionStartTime",
            "in": "query",
            "description": "Session start time",
            "required": true,
            "schema": { "type": "string", "format": "date-time" },
            "example": "13:30:00"
          },
          {
            "name": "sessionEndTime",
            "in": "query",
            "description": "Session end time",
            "required": true,
            "schema": { "type": "string", "format": "date-time" },
            "example": "14:30:00"
          }
        ],
        "responses": {
          "200": {
            "description": "the session capacity for the given sessions",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/SessionCapacityDto" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "400": {
            "description": "Incorrect request ",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Capacity not found ",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visit-sessions/available": {
      "get": {
        "tags": ["orchestration-sessions-controller"],
        "summary": "Returns only available visit sessions for a specified prisoner by restriction and within the reservable time period",
        "description": "Returns only available visit sessions for a specified prisoner by restriction and within the reservable time period",
        "operationId": "getAvailableVisitSessions",
        "parameters": [
          {
            "name": "prisonId",
            "in": "query",
            "description": "Query by NOMIS Prison Identifier",
            "required": true,
            "schema": { "type": "string" },
            "example": "MDI"
          },
          {
            "name": "prisonerId",
            "in": "query",
            "description": "Filter results by prisoner id",
            "required": true,
            "schema": { "type": "string" },
            "example": "A12345DC"
          },
          {
            "name": "sessionRestriction",
            "in": "query",
            "description": "Filter sessions by session restriction - OPEN or CLOSED, if prisoner has CLOSED it will use that",
            "required": false,
            "schema": { "type": "string", "enum": ["OPEN", "CLOSED"] },
            "example": "CLOSED"
          },
          {
            "name": "visitors",
            "in": "query",
            "description": "List of visitors who require visit sessions",
            "required": false,
            "schema": { "type": "array", "items": { "type": "integer", "format": "int64" } },
            "example": "4729510,4729220"
          },
          {
            "name": "withAppointmentsCheck",
            "in": "query",
            "description": "Defaults to true if not passed. If true, will not return visit times that clash with higher priority legal or medical appointments.",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "excludedApplicationReference",
            "in": "query",
            "description": "The current application reference to be excluded from capacity count and double booking",
            "required": false,
            "schema": { "type": "string" },
            "example": "dfs-wjs-eqr"
          },
          {
            "name": "pvbAdvanceFromDateByDays",
            "in": "query",
            "description": "For PVB only. Allows service to advance the opening session slot booking window by n days on top of any other overrides. Defaults to 0 if not passed.",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "fromDateOverride",
            "in": "query",
            "description": "minimum override in days for opening session slot booking window, E.g. 2 will set min booking window to today + 2 days",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "toDateOverride",
            "in": "query",
            "description": "maximum override in days for closing session slot booking window, E.g. 28 will set max booking window to today + 28 days",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username for the user making the request. Used to exclude user's pending applications from session capacity count. Optional, ignored if not passed in.",
            "required": false,
            "schema": { "type": "string" },
            "example": "user-1"
          }
        ],
        "responses": {
          "200": {
            "description": "Visit session information returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/AvailableVisitSessionDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "400": {
            "description": "Incorrect request to Get visit sessions ",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/visit-sessions/available/restriction": {
      "get": {
        "tags": ["orchestration-sessions-controller"],
        "summary": "Returns the restriction type of available sessions",
        "description": "Returns the restriction of available sessions given a prisoner and optionally a list of visitors [OPEN / CLOSED]",
        "operationId": "getSessionRestrictionType",
        "parameters": [
          {
            "name": "prisonerId",
            "in": "query",
            "description": "Filter results by prisoner id",
            "required": true,
            "schema": { "type": "string" },
            "example": "A12345DC"
          },
          {
            "name": "visitors",
            "in": "query",
            "description": "List of visitors who require visit sessions",
            "required": false,
            "schema": { "type": "array", "items": { "type": "integer", "format": "int64" } },
            "example": "4729510,4729220"
          }
        ],
        "responses": {
          "200": {
            "description": "Available visit session restriction returned",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/AvailableVisitSessionRestrictionDto" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "400": {
            "description": "Incorrect request to Get available visit session restriction",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": ["hmpps-queue-resource"],
        "operationId": "getDlqMessages",
        "parameters": [
          { "name": "dlqName", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "maxMessages", "in": "query", "required": false, "schema": { "type": "integer", "format": "int32", "default": 100 } }
        ],
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/GetDlqResult" } } } } }
      }
    },
    "/public/booker/{bookerReference}/visits/cancelled": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get public cancelled visits by booker reference",
        "description": "Get public cancelled visits by booker reference",
        "operationId": "getCancelledPublicVisitsByBookerReference",
        "parameters": [
          {
            "name": "bookerReference",
            "in": "path",
            "description": "bookerReference",
            "required": true,
            "schema": { "type": "string", "description": "bookerReference", "example": "asd-aed-vhj" },
            "example": "asd-aed-vhj"
          }
        ],
        "responses": {
          "200": {
            "description": "cancelled public visits returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/OrchestrationVisitDto" } } } }
          },
          "400": {
            "description": "Incorrect request to get cancelled public visits by booker reference",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/public/booker/{bookerReference}/visits/booked/past": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get public past visits by booker reference",
        "description": "Get public past visits by booker reference",
        "operationId": "getPastPublicBookedVisitsByBookerReference",
        "parameters": [
          {
            "name": "bookerReference",
            "in": "path",
            "description": "bookerReference",
            "required": true,
            "schema": { "type": "string", "description": "bookerReference", "example": "asd-aed-vhj" },
            "example": "asd-aed-vhj"
          }
        ],
        "responses": {
          "200": {
            "description": "past public visits returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/OrchestrationVisitDto" } } } }
          },
          "400": {
            "description": "Incorrect request to get past public visits by booker reference",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/public/booker/{bookerReference}/visits/booked/future": {
      "get": {
        "tags": ["orchestration-visits-controller"],
        "summary": "Get future public booked visits by booker reference",
        "description": "Get future public booked visits by booker reference",
        "operationId": "getFuturePublicBookedVisitsByBookerReference",
        "parameters": [
          {
            "name": "bookerReference",
            "in": "path",
            "description": "bookerReference",
            "required": true,
            "schema": { "type": "string", "description": "bookerReference", "example": "asd-aed-vhj" },
            "example": "asd-aed-vhj"
          }
        ],
        "responses": {
          "200": {
            "description": "Future public booked visits returned",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/OrchestrationVisitDto" } } } }
          },
          "400": {
            "description": "Incorrect request to get future booked visits by booker reference",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/public/booker/{bookerReference}/permitted/prisoners": {
      "get": {
        "tags": ["public-booker-controller"],
        "summary": "Get permitted prisoners associated with a booker.",
        "description": "Get permitted prisoners associated with a booker.",
        "operationId": "getPermittedPrisonersForBooker",
        "parameters": [
          {
            "name": "bookerReference",
            "in": "path",
            "description": "Booker's unique reference.",
            "required": true,
            "schema": { "type": "string" },
            "example": "A12345DC"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned prisoners associated with a booker",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/BookerPrisonerInfoDto" } } } }
          },
          "400": {
            "description": "Incorrect request to get prisoners associated with a booker",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to get prisoners associated with a booker",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/public/booker/{bookerReference}/permitted/prisoners/{prisonerId}/validate": {
      "get": {
        "tags": ["public-booker-controller"],
        "summary": "Validates prisoner associated with a booker",
        "description": "Validates prisoner associated with a booker",
        "operationId": "validatePrisoner",
        "parameters": [
          { "name": "bookerReference", "in": "path", "required": true, "schema": { "type": "string" } },
          {
            "name": "prisonerId",
            "in": "path",
            "description": "Prisoner Id for whom visitors need to be returned.",
            "required": true,
            "schema": { "type": "string" },
            "example": "A12345DC"
          }
        ],
        "responses": {
          "200": { "description": "Validation passed" },
          "400": {
            "description": "Incorrect request to validate prisoner associated with a booker",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions for this action",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "422": {
            "description": "Prisoner validation failed",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BookerPrisonerValidationErrorResponse" } } }
          }
        }
      }
    },
    "/public/booker/{bookerReference}/permitted/prisoners/{prisonerId}/permitted/visitors": {
      "get": {
        "tags": ["public-booker-controller"],
        "summary": "Get permitted visitors for a prisoner associated with that booker.",
        "description": "Get permitted visitors for a prisoner associated with that booker.",
        "operationId": "getPermittedVisitorsForPrisoner",
        "parameters": [
          { "name": "bookerReference", "in": "path", "required": true, "schema": { "type": "string" } },
          {
            "name": "prisonerId",
            "in": "path",
            "description": "Prisoner Id for whom visitors need to be returned.",
            "required": true,
            "schema": { "type": "string" },
            "example": "A12345DC"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned permitted permitted visitors for a prisoner associated with that booker",
            "content": { "*/*": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/VisitorInfoDto" } } } }
          },
          "400": {
            "description": "Incorrect request to get permitted visitors for a prisoner associated with that booker",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to get permitted visitors for a prisoner associated with that booker",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/prisoner/{prisonId}/{prisonerId}/profile": {
      "get": {
        "tags": ["prisoner-profile-controller"],
        "summary": "Get a prisoner's profile page",
        "description": "Get the prisoner's profile page",
        "operationId": "getPrisonerProfile",
        "parameters": [
          { "name": "prisonId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "prisonerId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Prisoner Profile Returned",
            "content": { "*/*": { "schema": { "$ref": "#/components/schemas/PrisonerProfileDto" } } }
          },
          "500": {
            "description": "Incorrect request to the prisoner profile page",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to retrieve a prisoner's profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Prisoner profile not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/sessions/session/{sessionTemplateReference}/exclude-date/{excludeDate}/isExcluded": {
      "get": {
        "tags": ["orchestration-sessions-exclude-date-controller"],
        "summary": "Endpoint to check if the date passed has been excluded for visits for the session template",
        "description": "Returns true if the date passed has been excluded for visits for the session template, false otherwise.",
        "operationId": "isDateExcludedForSessionTemplateVisits",
        "parameters": [
          {
            "name": "sessionTemplateReference",
            "in": "path",
            "description": "session template reference",
            "required": true,
            "schema": { "type": "string", "description": "session template reference", "example": "aaa-bbb-ccc" },
            "example": "aaa-bbb-ccc"
          },
          {
            "name": "excludeDate",
            "in": "path",
            "description": "date to be checked if excluded for session template",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "date to be checked if excluded for session template",
              "example": "2024-12-26"
            },
            "example": "2024-12-26"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response if the date is excluded for the session template",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IsExcludeDateDto" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to check if date excluded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Session template not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/sessions/session/{sessionTemplateReference}/exclude-date/past": {
      "get": {
        "tags": ["orchestration-sessions-exclude-date-controller"],
        "summary": "Get all past exclude dates for a given session template",
        "description": "Get all past exclude dates for a given session template",
        "operationId": "getPastExcludeDatesForSessionTemplate",
        "parameters": [
          {
            "name": "sessionTemplateReference",
            "in": "path",
            "description": "session template reference",
            "required": true,
            "schema": { "type": "string", "description": "session template reference", "example": "aaa-bbb-ccc" },
            "example": "aaa-bbb-ccc"
          }
        ],
        "responses": {
          "200": {
            "description": "Exclude dates successfully returned",
            "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ExcludeDateDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to view exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Session template not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/sessions/session/{sessionTemplateReference}/exclude-date/future": {
      "get": {
        "tags": ["orchestration-sessions-exclude-date-controller"],
        "summary": "Get all current or future exclude dates for a given session template",
        "description": "Get current or future exclude dates for a given session template",
        "operationId": "getFutureExcludeDatesForSessionTemplate",
        "parameters": [
          {
            "name": "sessionTemplateReference",
            "in": "path",
            "description": "session template reference",
            "required": true,
            "schema": { "type": "string", "description": "session template reference", "example": "aaa-bbb-ccc" },
            "example": "aaa-bbb-ccc"
          }
        ],
        "responses": {
          "200": {
            "description": "Exclude dates successfully returned",
            "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ExcludeDateDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to view exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Session template not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/user-type/{type}/supported": {
      "get": {
        "tags": ["orchestration-prisons-config-controller"],
        "summary": "Get supported prisons",
        "description": "Get all supported prisons id's",
        "operationId": "getSupportedPrisons",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type",
            "required": true,
            "schema": { "type": "string", "description": "type", "enum": ["STAFF", "PUBLIC", "SYSTEM"], "example": "STAFF" },
            "example": "STAFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Supported prisons returned",
            "content": { "application/json": { "schema": { "type": "array", "items": { "type": "string" } }, "example": ["HEI", "MDI"] } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to view session templates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/prison/{prisonCode}": {
      "get": {
        "tags": ["orchestration-prisons-config-controller"],
        "summary": "Gets prison by given prison id/code",
        "description": "Gets prison by given prison id/code",
        "operationId": "getPrison",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prison id",
            "required": true,
            "schema": { "type": "string", "description": "prison id", "example": "BHI" },
            "example": "BHI"
          }
        ],
        "responses": {
          "200": { "description": "prison returned", "content": { "*/*": { "schema": { "$ref": "#/components/schemas/PrisonDto" } } } },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to get prison",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/prison/{prisonCode}/exclude-date/{excludeDate}/isExcluded": {
      "get": {
        "tags": ["orchestration-prisons-exclude-date-controller"],
        "summary": "Endpoint to check if the date passed has been excluded for visits by the prison",
        "description": "Returns true if the date passed has been excluded for visits by the prison, false otherwise.",
        "operationId": "isDateExcludedForPrisonVisits",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prison code",
            "required": true,
            "schema": { "type": "string", "description": "prison code", "example": "HEI" },
            "example": "HEI"
          },
          {
            "name": "excludeDate",
            "in": "path",
            "description": "date to be checked if excluded by prison for visits",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "date to be checked if excluded by prison for visits",
              "example": "2024-12-26"
            },
            "example": "2024-12-26"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response if the date is excluded for visits at the prison",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IsExcludeDateDto" } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to check if date excluded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Prison not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/prison/{prisonCode}/exclude-date/past": {
      "get": {
        "tags": ["orchestration-prisons-exclude-date-controller"],
        "summary": "Get all past exclude dates for a given prison",
        "description": "Get all past exclude dates for a given prison",
        "operationId": "getPastExcludeDatesForPrison",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prison code",
            "required": true,
            "schema": { "type": "string", "description": "prison code", "example": "HEI" },
            "example": "HEI"
          }
        ],
        "responses": {
          "200": {
            "description": "Exclude dates successfully returned",
            "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ExcludeDateDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to view exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Prison not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    },
    "/config/prisons/prison/{prisonCode}/exclude-date/future": {
      "get": {
        "tags": ["orchestration-prisons-exclude-date-controller"],
        "summary": "Get all current or future exclude dates for a given prison",
        "description": "Get current or future exclude dates for a given prison",
        "operationId": "getFutureExcludeDatesForPrison",
        "parameters": [
          {
            "name": "prisonCode",
            "in": "path",
            "description": "prison code",
            "required": true,
            "schema": { "type": "string", "description": "prison code", "example": "HEI" },
            "example": "HEI"
          }
        ],
        "responses": {
          "200": {
            "description": "Exclude dates successfully returned",
            "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ExcludeDateDto" } } } }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Incorrect permissions to view exclude dates",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Prison not found on visit-scheduler",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CancelVisitOrchestrationDto": {
        "type": "object",
        "properties": {
          "cancelOutcome": { "$ref": "#/components/schemas/OutcomeDto", "description": "Outcome - status and text" },
          "applicationMethodType": {
            "type": "string",
            "description": "application method",
            "enum": ["PHONE", "WEBSITE", "EMAIL", "IN_PERSON", "NOT_KNOWN", "NOT_APPLICABLE", "BY_PRISONER"]
          },
          "actionedBy": { "type": "string", "description": "Username for user who actioned this request" },
          "userType": { "type": "string", "description": "User type", "enum": ["STAFF", "PUBLIC", "SYSTEM"], "example": "STAFF" }
        },
        "required": ["actionedBy", "applicationMethodType", "cancelOutcome", "userType"]
      },
      "OutcomeDto": {
        "type": "object",
        "description": "Contact Phone Number",
        "example": "01234 567890",
        "properties": {
          "outcomeStatus": {
            "type": "string",
            "description": "Outcome Status",
            "enum": [
              "ADMINISTRATIVE_CANCELLATION",
              "ADMINISTRATIVE_ERROR",
              "BATCH_CANCELLATION",
              "CANCELLATION",
              "COMPLETED_NORMALLY",
              "ESTABLISHMENT_CANCELLED",
              "NOT_RECORDED",
              "NO_VISITING_ORDER",
              "PRISONER_CANCELLED",
              "PRISONER_COMPLETED_EARLY",
              "PRISONER_REFUSED_TO_ATTEND",
              "TERMINATED_BY_STAFF",
              "VISITOR_CANCELLED",
              "VISITOR_COMPLETED_EARLY",
              "VISITOR_DECLINED_ENTRY",
              "VISITOR_DID_NOT_ARRIVE",
              "VISITOR_FAILED_SECURITY_CHECKS",
              "VISIT_ORDER_CANCELLED",
              "SUPERSEDED_CANCELLATION",
              "DETAILS_CHANGED_AFTER_BOOKING",
              "BOOKER_CANCELLED"
            ],
            "example": "VISITOR_CANCELLED"
          },
          "text": { "type": "string", "description": "Outcome text", "example": "Because he got covid" }
        },
        "required": ["outcomeStatus"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "integer", "format": "int32" },
          "errorCode": { "type": "integer", "format": "int32" },
          "userMessage": { "type": "string" },
          "developerMessage": { "type": "string" }
        },
        "required": ["status"]
      },
      "ContactDto": {
        "type": "object",
        "description": "Contact",
        "properties": {
          "name": { "type": "string", "description": "Contact Name", "example": "John Smith" },
          "telephone": { "type": "string", "description": "Contact Phone Number", "example": "01234 567890" },
          "email": { "type": "string", "description": "Contact Email Address", "example": "email@example.com" }
        },
        "required": ["name"]
      },
      "VisitDto": {
        "type": "object",
        "description": "Visit",
        "properties": {
          "applicationReference": { "type": "string", "description": "Application Reference", "example": "dfs-wjs-eqr" },
          "reference": { "type": "string", "description": "Visit Reference", "example": "v9-d7-ed-7u" },
          "prisonerId": { "type": "string", "description": "Prisoner Id", "example": "AF34567G" },
          "prisonId": { "type": "string", "description": "Prison Id", "example": "MDI" },
          "prisonName": { "type": "string", "description": "Prison Name", "example": "Moorland (HMP & YOI)" },
          "sessionTemplateReference": { "type": "string", "description": "Session Template Reference", "example": "v9d.7ed.7u" },
          "visitRoom": { "type": "string", "description": "Visit Room", "example": "Visits Main Hall" },
          "visitType": { "type": "string", "description": "Visit Type", "enum": ["SOCIAL"], "example": "SOCIAL" },
          "visitStatus": { "type": "string", "description": "Visit Status", "enum": ["BOOKED", "CANCELLED"], "example": "RESERVED" },
          "outcomeStatus": {
            "type": "string",
            "description": "Outcome Status",
            "enum": [
              "ADMINISTRATIVE_CANCELLATION",
              "ADMINISTRATIVE_ERROR",
              "BATCH_CANCELLATION",
              "CANCELLATION",
              "COMPLETED_NORMALLY",
              "ESTABLISHMENT_CANCELLED",
              "NOT_RECORDED",
              "NO_VISITING_ORDER",
              "PRISONER_CANCELLED",
              "PRISONER_COMPLETED_EARLY",
              "PRISONER_REFUSED_TO_ATTEND",
              "TERMINATED_BY_STAFF",
              "VISITOR_CANCELLED",
              "VISITOR_COMPLETED_EARLY",
              "VISITOR_DECLINED_ENTRY",
              "VISITOR_DID_NOT_ARRIVE",
              "VISITOR_FAILED_SECURITY_CHECKS",
              "VISIT_ORDER_CANCELLED",
              "SUPERSEDED_CANCELLATION",
              "DETAILS_CHANGED_AFTER_BOOKING",
              "BOOKER_CANCELLED"
            ],
            "example": "VISITOR_CANCELLED"
          },
          "visitRestriction": { "type": "string", "description": "Visit Restriction", "enum": ["OPEN", "CLOSED", "UNKNOWN"], "example": "OPEN" },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "endTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The finishing date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "visitNotes": { "type": "array", "description": "Visit Notes", "items": { "$ref": "#/components/schemas/VisitNoteDto" } },
          "visitContact": { "$ref": "#/components/schemas/ContactDto", "description": "Contact associated with the visit" },
          "visitors": {
            "type": "array",
            "description": "List of visitors associated with the visit",
            "items": { "$ref": "#/components/schemas/VisitorDto" }
          },
          "visitorSupport": { "$ref": "#/components/schemas/VisitorSupportDto", "description": "Additional support associated with the visit" },
          "createdTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The visit created date and time",
            "example": "2018-12-01T13:45:00"
          },
          "modifiedTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The visit modified date and time",
            "example": "2018-12-01T13:45:00"
          },
          "firstBookedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date the visit was first booked or migrated",
            "example": "2018-12-01T13:45:00"
          }
        },
        "required": [
          "applicationReference",
          "createdTimestamp",
          "endTimestamp",
          "modifiedTimestamp",
          "prisonId",
          "prisonerId",
          "reference",
          "startTimestamp",
          "visitRestriction",
          "visitRoom",
          "visitStatus",
          "visitType"
        ]
      },
      "VisitNoteDto": {
        "type": "object",
        "description": "VisitNote",
        "properties": {
          "type": {
            "type": "string",
            "description": "Note type",
            "enum": ["VISITOR_CONCERN", "VISIT_OUTCOMES", "VISIT_COMMENT", "STATUS_CHANGED_REASON"],
            "example": "VISITOR_CONCERN"
          },
          "text": { "type": "string", "description": "Note text", "example": "Visitor is concerned that his mother in-law is coming!" }
        },
        "required": ["text", "type"]
      },
      "VisitorDto": {
        "type": "object",
        "description": "Visitor",
        "properties": {
          "nomisPersonId": { "type": "integer", "format": "int64", "description": "Person ID (nomis) of the visitor", "example": 1234 },
          "visitContact": { "type": "boolean", "description": "true if visitor is the contact for the visit otherwise false", "example": true }
        },
        "required": ["nomisPersonId"]
      },
      "VisitorSupportDto": {
        "type": "object",
        "description": "Visitor support",
        "properties": {
          "description": {
            "type": "string",
            "description": "Support text description",
            "example": "visually impaired assistance",
            "maxLength": 512,
            "minLength": 3
          }
        },
        "required": ["description"]
      },
      "ApplicationValidationErrorResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "integer", "format": "int32" },
          "errorCode": { "type": "integer", "format": "int32" },
          "userMessage": { "type": "string" },
          "developerMessage": { "type": "string" },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPLICATION_INVALID_PRISONER_NOT_FOUND",
                "APPLICATION_INVALID_PRISON_PRISONER_MISMATCH",
                "APPLICATION_INVALID_SESSION_NOT_AVAILABLE",
                "APPLICATION_INVALID_SESSION_TEMPLATE_NOT_FOUND",
                "APPLICATION_INVALID_NON_ASSOCIATION_VISITS",
                "APPLICATION_INVALID_VISIT_ALREADY_BOOKED",
                "APPLICATION_INVALID_NO_VO_BALANCE",
                "APPLICATION_INVALID_NO_SLOT_CAPACITY"
              ]
            }
          }
        },
        "required": ["status", "validationErrors"]
      },
      "BookingOrchestrationRequestDto": {
        "type": "object",
        "properties": {
          "actionedBy": { "type": "string", "description": "Username or Identifier for user who actioned this request" },
          "applicationMethodType": {
            "type": "string",
            "description": "application method",
            "enum": ["PHONE", "WEBSITE", "EMAIL", "IN_PERSON", "NOT_KNOWN", "NOT_APPLICABLE", "BY_PRISONER"]
          },
          "allowOverBooking": { "type": "boolean", "description": "allow over booking method" },
          "userType": { "type": "string", "description": "User type for user who actioned this request", "enum": ["STAFF", "PUBLIC", "SYSTEM"] }
        },
        "required": ["actionedBy", "allowOverBooking", "applicationMethodType", "userType"]
      },
      "IgnoreVisitNotificationsDto": {
        "type": "object",
        "properties": {
          "reason": { "type": "string", "description": "Reason why the visit's notifications can be ignored" },
          "actionedBy": { "type": "string", "description": "Username for user who actioned this request" }
        },
        "required": ["actionedBy", "reason"]
      },
      "ApplicationSupportDto": {
        "type": "object",
        "description": "Visitor support",
        "properties": {
          "description": {
            "type": "string",
            "description": "Support text description, if empty is given then existing support text will be removed",
            "example": "visually impaired assistance",
            "maxLength": 512,
            "minLength": 0
          }
        },
        "required": ["description"]
      },
      "ChangeApplicationDto": {
        "type": "object",
        "properties": {
          "applicationRestriction": { "type": "string", "description": "Session Restriction", "enum": ["OPEN", "CLOSED"], "example": "OPEN" },
          "sessionTemplateReference": { "type": "string", "description": "Session template reference", "example": "v9d.7ed.7u" },
          "sessionDate": { "type": "string", "format": "date", "description": "The date for the visit", "example": "2018-12-01" },
          "visitContact": { "$ref": "#/components/schemas/ContactDto", "description": "Contact associated with the visit" },
          "visitors": {
            "type": "array",
            "description": "List of visitors associated with the visit",
            "items": { "$ref": "#/components/schemas/VisitorDto" },
            "uniqueItems": true
          },
          "visitorSupport": {
            "$ref": "#/components/schemas/ApplicationSupportDto",
            "description": "additional support associated with the visit, if null support will not be updated"
          },
          "allowOverBooking": { "type": "boolean", "description": "allow over booking" }
        },
        "required": ["allowOverBooking", "sessionDate", "sessionTemplateReference", "visitors"]
      },
      "ApplicationDto": {
        "type": "object",
        "description": "Visit",
        "properties": {
          "reference": { "type": "string", "description": "reference", "example": "v9-d7-ed-7u" },
          "sessionTemplateReference": { "type": "string", "description": "session template Reference", "example": "dfs-wjs-eqr" },
          "prisonerId": { "type": "string", "description": "Prisoner Id", "example": "AF34567G" },
          "prisonId": { "type": "string", "description": "Prison Id", "example": "MDI" },
          "visitType": { "type": "string", "description": "Visit Type", "enum": ["SOCIAL"], "example": "SOCIAL" },
          "visitRestriction": { "type": "string", "description": "Visit Restriction", "enum": ["OPEN", "CLOSED", "UNKNOWN"], "example": "OPEN" },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "endTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The finishing date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "visitNotes": { "type": "array", "description": "Visit Notes", "items": { "$ref": "#/components/schemas/VisitNoteDto" } },
          "visitContact": { "$ref": "#/components/schemas/ContactDto", "description": "Contact associated with the visit" },
          "visitors": {
            "type": "array",
            "description": "List of visitors associated with the visit",
            "items": { "$ref": "#/components/schemas/VisitorDto" }
          },
          "visitorSupport": { "$ref": "#/components/schemas/VisitorSupportDto", "description": "Additional support associated with the application" },
          "createdTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The visit created date and time",
            "example": "2018-12-01T13:45:00"
          },
          "modifiedTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The visit modified date and time",
            "example": "2018-12-01T13:45:00"
          },
          "reserved": { "type": "boolean", "description": "Is the application reserved", "example": true },
          "completed": { "type": "boolean", "description": "Is the application complete", "example": true },
          "userType": { "type": "string", "description": "User type", "enum": ["STAFF", "PUBLIC", "SYSTEM"], "example": "STAFF" }
        },
        "required": [
          "completed",
          "createdTimestamp",
          "endTimestamp",
          "modifiedTimestamp",
          "prisonId",
          "prisonerId",
          "reference",
          "reserved",
          "startTimestamp",
          "userType",
          "visitNotes",
          "visitRestriction",
          "visitType",
          "visitors"
        ]
      },
      "CreateApplicationDto": {
        "type": "object",
        "properties": {
          "prisonerId": { "type": "string", "description": "Prisoner Id", "example": "AF34567G" },
          "sessionTemplateReference": { "type": "string", "description": "Session template reference", "example": "v9d.7ed.7u" },
          "sessionDate": { "type": "string", "format": "date", "description": "The date for the visit", "example": "2018-12-01" },
          "applicationRestriction": { "type": "string", "description": "Session Restriction", "enum": ["OPEN", "CLOSED"], "example": "OPEN" },
          "visitContact": { "$ref": "#/components/schemas/ContactDto", "description": "Contact associated with the visit" },
          "visitors": {
            "type": "array",
            "description": "List of visitors associated with the visit",
            "items": { "$ref": "#/components/schemas/VisitorDto" },
            "uniqueItems": true
          },
          "visitorSupport": {
            "$ref": "#/components/schemas/ApplicationSupportDto",
            "description": "additional support associated with the visit, if null support will not be updated"
          },
          "userType": { "type": "string", "description": "User type", "enum": ["STAFF", "PUBLIC", "SYSTEM"], "example": "STAFF" },
          "actionedBy": {
            "type": "string",
            "description": "actioned by (Booker reference - if PUBLIC user type Or User Name - if staff user type)",
            "example": "asd-asd-asd or STAFF_USER"
          },
          "allowOverBooking": { "type": "boolean", "description": "allow over booking" }
        },
        "required": [
          "actionedBy",
          "allowOverBooking",
          "applicationRestriction",
          "prisonerId",
          "sessionDate",
          "sessionTemplateReference",
          "userType",
          "visitors"
        ]
      },
      "RetryDlqResult": {
        "type": "object",
        "properties": { "messagesFoundCount": { "type": "integer", "format": "int32" } },
        "required": ["messagesFoundCount"]
      },
      "PurgeQueueResult": {
        "type": "object",
        "properties": { "messagesFoundCount": { "type": "integer", "format": "int32" } },
        "required": ["messagesFoundCount"]
      },
      "AuthDetailDto": {
        "type": "object",
        "description": "Auth detail Dto",
        "properties": {
          "oneLoginSub": { "type": "string", "description": "auth reference/sub" },
          "email": { "type": "string", "description": "auth email" },
          "phoneNumber": { "type": "string", "description": "auth phone number" }
        },
        "required": ["email", "oneLoginSub"]
      },
      "BookerReference": {
        "type": "object",
        "description": "Booker reference Object, to be used with all other api call for booker information",
        "properties": {
          "value": { "type": "string", "description": "This value is the booker reference and should be used to acquire booker information" }
        },
        "required": ["value"]
      },
      "ExcludeDateDto": {
        "type": "object",
        "description": "Prison exclude date",
        "properties": {
          "excludeDate": { "type": "string", "format": "date", "description": "exclude date", "example": "2024-26-12" },
          "actionedBy": { "type": "string", "description": "full name of user who added the exclude date or username if full name is not available." }
        },
        "required": ["actionedBy", "excludeDate"]
      },
      "EventAuditOrchestrationDto": {
        "type": "object",
        "description": "Event Audit",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of event",
            "enum": [
              "RESERVED_VISIT",
              "CHANGING_VISIT",
              "MIGRATED_VISIT",
              "BOOKED_VISIT",
              "UPDATED_VISIT",
              "CANCELLED_VISIT",
              "NON_ASSOCIATION_EVENT",
              "PRISONER_RELEASED_EVENT",
              "PRISONER_RECEIVED_EVENT",
              "PRISONER_RESTRICTION_CHANGE_EVENT",
              "PRISONER_ALERTS_UPDATED_EVENT",
              "PRISON_VISITS_BLOCKED_FOR_DATE",
              "IGNORE_VISIT_NOTIFICATIONS_EVENT",
              "PERSON_RESTRICTION_UPSERTED_EVENT",
              "VISITOR_RESTRICTION_UPSERTED_EVENT",
              "VISITOR_UNAPPROVED_EVENT"
            ]
          },
          "applicationMethodType": {
            "type": "string",
            "description": "What was the application method for this event",
            "enum": ["PHONE", "WEBSITE", "EMAIL", "IN_PERSON", "NOT_KNOWN", "NOT_APPLICABLE", "BY_PRISONER"]
          },
          "actionedByFullName": { "type": "string", "description": "Actioned by full name", "example": "Aled Evans" },
          "userType": { "type": "string", "description": "User type", "enum": ["STAFF", "PUBLIC", "SYSTEM"], "example": "STAFF" },
          "sessionTemplateReference": { "type": "string", "description": "Session template used for this event " },
          "text": { "type": "string", "description": "Notes added against the event" },
          "createTimestamp": { "type": "string", "format": "date-time", "description": "event creat date and time", "example": "2018-12-01T13:45:00" }
        },
        "required": ["applicationMethodType", "createTimestamp", "type", "userType"]
      },
      "VisitHistoryDetailsDto": {
        "type": "object",
        "description": "Visit",
        "properties": {
          "eventsAudit": {
            "type": "array",
            "description": "The visit details",
            "items": { "$ref": "#/components/schemas/EventAuditOrchestrationDto" }
          },
          "visit": { "$ref": "#/components/schemas/VisitDto", "description": "The visit details" }
        },
        "required": ["eventsAudit", "visit"]
      },
      "visitStatus": {
        "type": "array",
        "description": "To filter visits by status",
        "example": "BOOKED",
        "items": { "type": "string", "description": "To filter visits by status", "enum": ["BOOKED", "CANCELLED"], "example": "BOOKED" }
      },
      "visitRestrictions": {
        "type": "array",
        "description": "Visit Restriction(s) - OPEN / CLOSED / UNKNOWN",
        "example": "OPEN",
        "items": {
          "type": "string",
          "description": "Visit Restriction(s) - OPEN / CLOSED / UNKNOWN",
          "enum": ["OPEN", "CLOSED", "UNKNOWN"],
          "example": "OPEN"
        }
      },
      "SessionTimeSlotDto": {
        "type": "object",
        "properties": {
          "startTime": { "type": "string", "format": "HH:mm", "description": "The start time of the generated visit session(s)", "example": "10:30" },
          "endTime": { "type": "string", "format": "HH:mm", "description": "The end time of the generated visit session(s)", "example": "11:30" }
        },
        "required": ["endTime", "startTime"]
      },
      "VisitPreviewDto": {
        "type": "object",
        "properties": {
          "prisonerId": { "type": "string", "description": "Prisoner Number", "example": "A1234AA" },
          "firstName": { "type": "string", "description": "First name of the prisoner", "example": "John" },
          "lastName": { "type": "string", "description": "Last name of the prisoner", "example": "Smith" },
          "visitReference": { "type": "string", "description": "Visit reference", "example": "dp-we-rs-te" },
          "visitorCount": { "type": "integer", "format": "int32", "description": "Number of visitors added to the visit", "example": 10 },
          "visitTimeSlot": { "$ref": "#/components/schemas/SessionTimeSlotDto", "description": "Timeslot for the visit" },
          "firstBookedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date the visit was first booked or migrated",
            "example": "2018-12-01T13:45:00"
          },
          "visitRestriction": { "type": "string", "description": "Visit Restriction", "enum": ["OPEN", "CLOSED", "UNKNOWN"], "example": "OPEN" }
        },
        "required": [
          "firstBookedDateTime",
          "firstName",
          "lastName",
          "prisonerId",
          "visitReference",
          "visitRestriction",
          "visitTimeSlot",
          "visitorCount"
        ]
      },
      "PageVisitDto": {
        "type": "object",
        "properties": {
          "totalElements": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" },
          "first": { "type": "boolean" },
          "last": { "type": "boolean" },
          "size": { "type": "integer", "format": "int32" },
          "content": { "type": "array", "items": { "$ref": "#/components/schemas/VisitDto" } },
          "number": { "type": "integer", "format": "int32" },
          "sort": { "$ref": "#/components/schemas/SortObject" },
          "pageable": { "$ref": "#/components/schemas/PageableObject" },
          "numberOfElements": { "type": "integer", "format": "int32" },
          "empty": { "type": "boolean" }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int64" },
          "sort": { "$ref": "#/components/schemas/SortObject" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "paged": { "type": "boolean" },
          "pageSize": { "type": "integer", "format": "int32" },
          "unpaged": { "type": "boolean" }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": { "empty": { "type": "boolean" }, "sorted": { "type": "boolean" }, "unsorted": { "type": "boolean" } }
      },
      "OrchestrationNotificationGroupDto": {
        "type": "object",
        "properties": {
          "reference": { "type": "string", "description": "notification group Reference", "example": "v9*d7*ed*7u" },
          "type": {
            "type": "string",
            "description": "notification event type",
            "enum": [
              "NON_ASSOCIATION_EVENT",
              "PRISONER_RELEASED_EVENT",
              "PRISONER_RESTRICTION_CHANGE_EVENT",
              "PRISON_VISITS_BLOCKED_FOR_DATE",
              "SESSION_VISITS_BLOCKED_FOR_DATE",
              "PRISONER_RECEIVED_EVENT",
              "PRISONER_ALERTS_UPDATED_EVENT",
              "PERSON_RESTRICTION_UPSERTED_EVENT",
              "VISITOR_RESTRICTION_UPSERTED_EVENT",
              "VISITOR_UNAPPROVED_EVENT"
            ],
            "example": "NON_ASSOCIATION_EVENT"
          },
          "affectedVisits": {
            "type": "array",
            "description": "List of details of affected visits",
            "items": { "$ref": "#/components/schemas/OrchestrationPrisonerVisitsNotificationDto" }
          }
        },
        "required": ["affectedVisits", "reference", "type"]
      },
      "OrchestrationPrisonerVisitsNotificationDto": {
        "type": "object",
        "properties": {
          "prisonerNumber": { "type": "string", "description": "Prisoner Number", "example": "AF34567G" },
          "bookedByUserName": { "type": "string", "description": "Booked by user name ", "example": "SMITH1" },
          "visitDate": { "type": "string", "format": "date", "description": "The date of the visit", "example": "2023-11-08" },
          "bookingReference": { "type": "string", "description": "Visit Booking Reference", "example": "v9-d7-ed-7u" },
          "bookedByName": { "type": "string", "description": "Booked by name", "example": "John Smith" },
          "notificationEventAttributes": {
            "type": "array",
            "description": "A list of all notification attributes for a given visit",
            "items": { "$ref": "#/components/schemas/VisitNotificationEventAttributeDto" }
          }
        },
        "required": ["bookedByName", "bookedByUserName", "bookingReference", "notificationEventAttributes", "prisonerNumber", "visitDate"]
      },
      "VisitNotificationEventAttributeDto": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "description": "Name of the attribute associated with the notification event",
            "enum": ["VISITOR_RESTRICTION", "VISITOR_ID"],
            "example": "VISITOR_RESTRICTION"
          },
          "attributeValue": { "type": "string", "description": "Value of the attribute associated with the notification event", "example": "BAN" }
        },
        "required": ["attributeName", "attributeValue"]
      },
      "NotificationCountDto": { "type": "object", "properties": { "count": { "type": "integer", "format": "int32" } }, "required": ["count"] },
      "VisitSessionDto": {
        "type": "object",
        "description": "Visit Session",
        "properties": {
          "sessionTemplateReference": { "type": "string", "description": "Session Template Reference", "example": "v9d.7ed.7u" },
          "visitRoom": { "type": "string", "description": "Visit Room", "example": "Visits Main Hall" },
          "visitType": {
            "type": "string",
            "description": "The type of visits taking place within this session",
            "enum": ["SOCIAL"],
            "example": "SOCIAL"
          },
          "prisonId": { "type": "string", "description": "The prison id", "example": "LEI" },
          "openVisitCapacity": {
            "type": "integer",
            "format": "int32",
            "description": "The number of concurrent visits which may take place within this session",
            "example": 1
          },
          "openVisitBookedCount": {
            "type": "integer",
            "format": "int32",
            "description": "The count of open visit bookings already reserved or booked for this session",
            "example": 1
          },
          "closedVisitCapacity": {
            "type": "integer",
            "format": "int32",
            "description": "The number of closed visits which may take place within this session",
            "example": 1
          },
          "closedVisitBookedCount": {
            "type": "integer",
            "format": "int32",
            "description": "The count of closed visit bookings already reserved or booked for this session",
            "example": 1
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The start timestamp for this visit session",
            "example": "2020-11-01T12:00:00"
          },
          "endTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The end timestamp for this visit session",
            "example": "2020-11-01T14:30:00"
          },
          "sessionConflicts": {
            "type": "array",
            "description": "Session conflicts",
            "items": { "type": "string", "enum": ["NON_ASSOCIATION", "DOUBLE_BOOKING_OR_RESERVATION"] },
            "uniqueItems": true
          }
        },
        "required": [
          "closedVisitCapacity",
          "endTimestamp",
          "openVisitCapacity",
          "prisonId",
          "sessionTemplateReference",
          "startTimestamp",
          "visitRoom",
          "visitType"
        ]
      },
      "SessionCapacityDto": {
        "type": "object",
        "description": "Session Capacity",
        "properties": {
          "closed": { "type": "integer", "format": "int32", "description": "closed capacity", "example": 10 },
          "open": { "type": "integer", "format": "int32", "description": "open capacity", "example": 50 }
        },
        "required": ["closed", "open"]
      },
      "SessionDateRangeDto": {
        "type": "object",
        "properties": {
          "validFromDate": {
            "type": "string",
            "format": "date",
            "description": "The start of the Validity period for the session template",
            "example": "2019-11-02"
          },
          "validToDate": {
            "type": "string",
            "format": "date",
            "description": "The end of the Validity period for the session template",
            "example": "2019-12-02"
          }
        },
        "required": ["validFromDate"]
      },
      "SessionScheduleDto": {
        "type": "object",
        "description": "Session schedule",
        "properties": {
          "sessionTemplateReference": { "type": "string", "description": "Session Template Reference", "example": "v9d.7ed.7u" },
          "sessionTimeSlot": { "$ref": "#/components/schemas/SessionTimeSlotDto", "description": "The time slot of the generated visit session(s)" },
          "sessionDateRange": { "$ref": "#/components/schemas/SessionDateRangeDto", "description": "Validity period for the session template" },
          "capacity": { "$ref": "#/components/schemas/SessionCapacityDto", "description": "The capacity for the session" },
          "visitType": { "type": "string", "description": "visit type", "enum": ["SOCIAL"], "example": "Social" },
          "areLocationGroupsInclusive": {
            "type": "boolean",
            "description": "Determines behaviour of location groups. True will mean the location groups are inclusive, false means they are exclusive."
          },
          "prisonerLocationGroupNames": {
            "type": "array",
            "description": "prisoner location group",
            "example": "Wing C",
            "items": { "type": "string" }
          },
          "prisonerCategoryGroupNames": {
            "type": "array",
            "description": "prisoner category groups",
            "example": "Category A Prisoners",
            "items": { "type": "string" }
          },
          "prisonerIncentiveLevelGroupNames": {
            "type": "array",
            "description": "prisoner incentive level groups",
            "example": "Enhanced Incentive Level Prisoners",
            "items": { "type": "string" }
          },
          "weeklyFrequency": {
            "type": "integer",
            "format": "int32",
            "description": "number of weeks until the weekly day is repeated",
            "example": 1
          },
          "visitRoom": { "type": "string", "description": "visit room name", "example": "Visits Room" }
        },
        "required": [
          "areLocationGroupsInclusive",
          "capacity",
          "prisonerCategoryGroupNames",
          "prisonerIncentiveLevelGroupNames",
          "prisonerLocationGroupNames",
          "sessionDateRange",
          "sessionTemplateReference",
          "sessionTimeSlot",
          "visitRoom",
          "visitType",
          "weeklyFrequency"
        ]
      },
      "AvailableVisitSessionDto": {
        "type": "object",
        "description": "Visit Session",
        "properties": {
          "sessionDate": { "type": "string", "format": "date", "description": "Session date", "example": "2020-11-01" },
          "sessionTemplateReference": { "type": "string", "description": "sessionTemplateReference", "example": "v9d.7ed.7u" },
          "sessionTimeSlot": { "$ref": "#/components/schemas/SessionTimeSlotDto", "description": "Session time slot" },
          "sessionRestriction": { "type": "string", "description": "Session Restriction", "enum": ["OPEN", "CLOSED"], "example": "OPEN" }
        },
        "required": ["sessionDate", "sessionRestriction", "sessionTemplateReference", "sessionTimeSlot"]
      },
      "AvailableVisitSessionRestrictionDto": {
        "type": "object",
        "description": "Visit Session restriction type",
        "properties": {
          "sessionRestriction": { "type": "string", "description": "Session Restriction", "enum": ["OPEN", "CLOSED"], "example": "OPEN" }
        },
        "required": ["sessionRestriction"]
      },
      "DlqMessage": {
        "type": "object",
        "properties": { "body": { "type": "object", "additionalProperties": { "type": "object" } }, "messageId": { "type": "string" } },
        "required": ["body", "messageId"]
      },
      "GetDlqResult": {
        "type": "object",
        "properties": {
          "messagesFoundCount": { "type": "integer", "format": "int32" },
          "messagesReturnedCount": { "type": "integer", "format": "int32" },
          "messages": { "type": "array", "items": { "$ref": "#/components/schemas/DlqMessage" } }
        },
        "required": ["messages", "messagesFoundCount", "messagesReturnedCount"]
      },
      "OrchestrationVisitDto": {
        "type": "object",
        "description": "Visit",
        "properties": {
          "reference": { "type": "string", "description": "Visit Reference", "example": "v9-d7-ed-7u" },
          "prisonerId": { "type": "string", "description": "Prisoner Id", "example": "AF34567G" },
          "prisonerFirstName": { "type": "string", "description": "Prisoner first name", "example": "James" },
          "prisonerLastName": { "type": "string", "description": "Prisoner last name", "example": "Smith" },
          "prisonId": { "type": "string", "description": "Prison Id", "example": "MDI" },
          "visitStatus": { "type": "string", "description": "Visit Status", "enum": ["BOOKED", "CANCELLED"], "example": "BOOKED" },
          "outcomeStatus": {
            "type": "string",
            "description": "Outcome Status",
            "enum": [
              "ADMINISTRATIVE_CANCELLATION",
              "ADMINISTRATIVE_ERROR",
              "BATCH_CANCELLATION",
              "CANCELLATION",
              "COMPLETED_NORMALLY",
              "ESTABLISHMENT_CANCELLED",
              "NOT_RECORDED",
              "NO_VISITING_ORDER",
              "PRISONER_CANCELLED",
              "PRISONER_COMPLETED_EARLY",
              "PRISONER_REFUSED_TO_ATTEND",
              "TERMINATED_BY_STAFF",
              "VISITOR_CANCELLED",
              "VISITOR_COMPLETED_EARLY",
              "VISITOR_DECLINED_ENTRY",
              "VISITOR_DID_NOT_ARRIVE",
              "VISITOR_FAILED_SECURITY_CHECKS",
              "VISIT_ORDER_CANCELLED",
              "SUPERSEDED_CANCELLATION",
              "DETAILS_CHANGED_AFTER_BOOKING",
              "BOOKER_CANCELLED"
            ],
            "example": "VISITOR_CANCELLED"
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "endTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The finishing date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "visitContact": { "$ref": "#/components/schemas/ContactDto", "description": "Contact associated with the visit" },
          "visitors": {
            "type": "array",
            "description": "List of visitors associated with the visit",
            "items": { "$ref": "#/components/schemas/OrchestrationVisitorDto" }
          },
          "visitorSupport": { "$ref": "#/components/schemas/VisitorSupportDto", "description": "Additional support associated with the visit" }
        },
        "required": ["endTimestamp", "prisonId", "prisonerId", "reference", "startTimestamp", "visitContact", "visitStatus", "visitors"]
      },
      "OrchestrationVisitorDto": {
        "type": "object",
        "description": "Visitor",
        "properties": {
          "nomisPersonId": { "type": "integer", "format": "int64", "description": "Person ID (nomis) of the visitor", "example": 1234 },
          "firstName": { "type": "string", "description": "Visitor's first name", "example": "James" },
          "lastName": { "type": "string", "description": "Visitor's last name", "example": "James" }
        },
        "required": ["nomisPersonId"]
      },
      "BookerPrisonerInfoDto": {
        "type": "object",
        "properties": {
          "prisoner": { "$ref": "#/components/schemas/PrisonerDto", "description": "Prisoner Details" },
          "availableVos": { "type": "integer", "format": "int32", "description": "Available VOs - a total of VOs and PVOs", "example": 0 },
          "nextAvailableVoDate": { "type": "string", "format": "date", "description": "Next available VO date", "example": "2024-08-01" },
          "registeredPrison": {
            "$ref": "#/components/schemas/RegisteredPrisonDto",
            "description": "Current prison code for the prison that the booker registered the prisoner with"
          }
        },
        "required": ["availableVos", "nextAvailableVoDate", "prisoner", "registeredPrison"]
      },
      "CurrentIncentive": {
        "type": "object",
        "properties": {
          "level": { "$ref": "#/components/schemas/IncentiveLevel", "description": "Incentive level" },
          "dateTime": { "type": "string", "format": "date-time", "description": "Date time of the incentive", "example": "2022-11-10T15:47:24" },
          "nextReviewDate": { "type": "string", "format": "date", "description": "Schedule new review date", "example": "2022-11-10" }
        },
        "required": ["dateTime", "level", "nextReviewDate"]
      },
      "IncentiveLevel": {
        "type": "object",
        "properties": {
          "code": { "type": "string", "description": "code", "example": "STD" },
          "description": { "type": "string", "description": "description", "example": "Standard" }
        },
        "required": ["description"]
      },
      "PrisonerDto": {
        "type": "object",
        "properties": {
          "prisonerNumber": { "type": "string", "description": "Prisoner Number", "example": "A1234AA" },
          "firstName": { "type": "string", "description": "First Name", "example": "Robert" },
          "lastName": { "type": "string", "description": "Last name", "example": "Larsen" },
          "dateOfBirth": { "type": "string", "format": "date", "description": "Date of Birth", "example": "1975-04-02" },
          "prisonId": { "type": "string", "description": "Prison ID", "example": "MDI" },
          "prisonName": { "type": "string", "description": "Prison Name", "example": "HMP Leeds" },
          "cellLocation": { "type": "string", "description": "In prison cell location", "example": "A-1-002" },
          "currentIncentive": { "$ref": "#/components/schemas/CurrentIncentive", "description": "Incentive level" }
        },
        "required": ["dateOfBirth", "firstName", "lastName", "prisonerNumber"]
      },
      "RegisteredPrisonDto": {
        "type": "object",
        "properties": {
          "prisonCode": { "type": "string", "description": "prison code", "example": "MDI" },
          "prisonName": { "type": "string", "description": "prison name", "example": "MDI" }
        },
        "required": ["prisonCode", "prisonName"]
      },
      "BookerPrisonerValidationErrorResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "integer", "format": "int32" },
          "errorCode": { "type": "integer", "format": "int32" },
          "userMessage": { "type": "string" },
          "developerMessage": { "type": "string" },
          "validationError": {
            "type": "string",
            "enum": [
              "PRISONER_RELEASED",
              "PRISONER_TRANSFERRED_SUPPORTED_PRISON",
              "PRISONER_TRANSFERRED_UNSUPPORTED_PRISON",
              "REGISTERED_PRISON_NOT_SUPPORTED"
            ]
          }
        },
        "required": ["status", "validationError"]
      },
      "VisitorInfoDto": {
        "type": "object",
        "description": "A visitor for a prisoner",
        "properties": {
          "visitorId": { "type": "integer", "format": "int64", "description": "Identifier for this contact (Person in NOMIS)", "example": 5871791 },
          "firstName": { "type": "string", "description": "First name", "example": "John" },
          "lastName": { "type": "string", "description": "Last name", "example": "Smith" },
          "dateOfBirth": { "type": "string", "format": "date", "description": "Date of birth", "example": "2000-01-31" },
          "visitorRestrictions": {
            "type": "array",
            "description": "Relevant visitor restrictions that impact visits or empty list if none",
            "items": { "$ref": "#/components/schemas/VisitorRestrictionDto" },
            "uniqueItems": true
          }
        },
        "required": ["firstName", "lastName", "visitorId", "visitorRestrictions"]
      },
      "VisitorRestrictionDto": {
        "type": "object",
        "description": "Visitor restriction",
        "properties": {
          "restrictionType": { "type": "string", "description": "Restriction Type", "enum": ["BAN"], "example": "BAN" },
          "expiryDate": { "type": "string", "format": "date", "description": "Restriction Expiry", "example": "2029-12-31" }
        },
        "required": ["restrictionType"]
      },
      "AlertDto": {
        "type": "object",
        "description": "AlertDto returned from orchestration, made of fields from AlertResponseDto from Alerts API call",
        "properties": {
          "alertType": { "type": "string", "description": "Alert Type", "example": "X" },
          "alertTypeDescription": { "type": "string", "description": "Alert Type Description", "example": "Security" },
          "alertCode": { "type": "string", "description": "Alert Code", "example": "XER" },
          "alertCodeDescription": { "type": "string", "description": "Alert Code Description", "example": "Escape Risk" },
          "comment": { "type": "string", "description": "Alert comments", "example": "Profession lock pick." },
          "dateCreated": {
            "type": "string",
            "format": "date",
            "description": "Date of the alert, which might differ to the date it was created",
            "example": "2019-08-20"
          },
          "dateExpires": { "type": "string", "format": "date", "description": "Date the alert expires", "example": "2020-08-20" },
          "active": { "type": "boolean", "description": "True / False based on alert status", "example": false }
        },
        "required": ["active", "alertCode", "alertCodeDescription", "alertType", "alertTypeDescription", "dateCreated"]
      },
      "PrisonerProfileDto": {
        "type": "object",
        "properties": {
          "prisonerId": { "type": "string", "description": "Prisoner Number", "example": "A1234AA" },
          "prisonId": { "type": "string", "description": "Prison ID", "example": "MDI" },
          "firstName": { "type": "string", "description": "First Name", "example": "Robert" },
          "lastName": { "type": "string", "description": "Last name", "example": "Larsen" },
          "dateOfBirth": { "type": "string", "format": "date", "description": "Date of Birth", "example": "1975-04-02" },
          "cellLocation": { "type": "string", "description": "In prison cell location", "example": "A-1-002" },
          "prisonName": { "type": "string", "description": "Prison Name", "example": "HMP Leeds" },
          "category": { "type": "string", "description": "Category description (from list of assessments)", "example": "Category C" },
          "convictedStatus": { "type": "string", "description": "Convicted Status", "enum": ["Convicted", "Remand"], "example": "Convicted" },
          "incentiveLevel": { "type": "string", "description": "Incentive level", "example": "Standard" },
          "alerts": { "type": "array", "description": "Alert", "items": { "$ref": "#/components/schemas/AlertDto" } },
          "visitBalances": { "$ref": "#/components/schemas/VisitBalancesDto", "description": "Balances of visit orders and privilege visit orders" },
          "visits": {
            "type": "array",
            "description": "Past and future visits for the prisoner based on configured duration.",
            "items": { "$ref": "#/components/schemas/VisitSummaryDto" }
          }
        },
        "required": ["dateOfBirth", "firstName", "lastName", "prisonerId", "visits"]
      },
      "VisitBalancesDto": {
        "type": "object",
        "description": "Balances of visit orders and privilege visit orders",
        "properties": {
          "remainingVo": { "type": "integer", "format": "int32", "description": "Balance of visit orders remaining" },
          "remainingPvo": { "type": "integer", "format": "int32", "description": "Balance of privilege visit orders remaining" },
          "latestIepAdjustDate": { "type": "string", "format": "date", "description": "Date of last IEP adjustment for Visit orders" },
          "latestPrivIepAdjustDate": { "type": "string", "format": "date", "description": "Date of last IEP adjustment for Privilege Visit orders" }
        },
        "required": ["remainingPvo", "remainingVo"]
      },
      "VisitSummaryDto": {
        "type": "object",
        "description": "Visit Summary",
        "properties": {
          "reference": { "type": "string", "description": "Visit Reference", "example": "v9-d7-ed-7u" },
          "prisonerId": { "type": "string", "description": "Prisoner Id", "example": "AF34567G" },
          "prisonId": { "type": "string", "description": "Prison Id", "example": "MDI" },
          "prisonName": { "type": "string", "description": "Prison name", "example": "MDI Prison" },
          "visitType": { "type": "string", "description": "Visit Type", "enum": ["SOCIAL"], "example": "SOCIAL" },
          "visitStatus": { "type": "string", "description": "Visit Status", "enum": ["BOOKED", "CANCELLED"], "example": "RESERVED" },
          "visitRestriction": { "type": "string", "description": "Visit Restriction", "enum": ["OPEN", "CLOSED", "UNKNOWN"], "example": "OPEN" },
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "endTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The finishing date and time of the visit",
            "example": "2018-12-01T13:45:00"
          },
          "visitors": {
            "type": "array",
            "description": "List of visitors associated with the visit",
            "items": { "$ref": "#/components/schemas/VisitorSummaryDto" }
          }
        },
        "required": ["endTimestamp", "prisonId", "prisonerId", "reference", "startTimestamp", "visitRestriction", "visitStatus", "visitType"]
      },
      "VisitorSummaryDto": {
        "type": "object",
        "description": "Full Visitor details",
        "properties": {
          "nomisPersonId": { "type": "integer", "format": "int64", "description": "Person ID (nomis) of the visitor", "example": 1234 },
          "firstName": { "type": "string", "description": "Visitor's first name", "example": "John" },
          "lastName": { "type": "string", "description": "Visitor's last name", "example": "Smith" }
        },
        "required": ["nomisPersonId"]
      },
      "IsExcludeDateDto": {
        "type": "object",
        "description": "Is the date passed excluded",
        "properties": {
          "isExcluded": { "type": "boolean", "description": "True if the date is excluded, false if not excluded by prison for visits." },
          "excluded": { "type": "boolean", "writeOnly": true }
        },
        "required": ["isExcluded"]
      },
      "PrisonDto": {
        "type": "object",
        "description": "Prison dto",
        "properties": {
          "code": { "type": "string", "description": "prison code", "example": "BHI" },
          "prisonName": { "type": "string", "description": "prison name", "example": "HMP Hewell" },
          "active": { "type": "boolean", "description": "is prison active", "example": true },
          "policyNoticeDaysMin": {
            "type": "integer",
            "format": "int32",
            "description": "minimum number of days notice from the current date to booked a visit",
            "example": 2
          },
          "policyNoticeDaysMax": {
            "type": "integer",
            "format": "int32",
            "description": "maximum number of days notice from the current date to booked a visit",
            "example": 28
          },
          "maxTotalVisitors": { "type": "integer", "format": "int32", "description": "Max number of total visitors", "minimum": 1 },
          "maxAdultVisitors": { "type": "integer", "format": "int32", "description": "Max number of adults", "minimum": 1 },
          "maxChildVisitors": { "type": "integer", "format": "int32", "description": "Max number of children", "minimum": 0 },
          "adultAgeYears": { "type": "integer", "format": "int32", "description": "Age of adults in years" },
          "emailAddress": { "type": "string", "description": "Contact email address of prison", "example": "example@example.com" },
          "phoneNumber": { "type": "string", "description": "Contact number of prison" },
          "webAddress": { "type": "string", "description": "Web address of prison" },
          "clients": { "type": "array", "description": "prison user client", "items": { "$ref": "#/components/schemas/PrisonUserClientDto" } }
        },
        "required": [
          "active",
          "adultAgeYears",
          "clients",
          "code",
          "maxAdultVisitors",
          "maxChildVisitors",
          "maxTotalVisitors",
          "policyNoticeDaysMax",
          "policyNoticeDaysMin",
          "prisonName"
        ]
      },
      "PrisonUserClientDto": {
        "type": "object",
        "description": "Prison user client dto",
        "properties": {
          "userType": { "type": "string", "description": "User type", "enum": ["STAFF", "PUBLIC", "SYSTEM"], "example": "STAFF" },
          "active": { "type": "boolean", "description": "is prison user client active", "example": true }
        },
        "required": ["active", "userType"]
      }
    }
  }
}
