{
  "openapi": "3.0.1",
  "info": {
    "title": "HMPPS Prison API Documentation",
    "description": "<div>\n  <h2 id=\"overview\">Overview</h2>\n  <p>A RESTful API service for accessing NOMIS data sets.</p>\n  <p>\n    All times sent to the API should be sent in local time without the timezone e.g. YYYY-MM-DDTHH:MM:SS.\n    All times returned in responses will be in Europe / London local time unless otherwise stated.\n  </p>\n  <p>\n    Some endpoints are described as using the Replica database, a read-only copy of the live database which at\n    time of writing lags by < 1 second up to approximately 2 seconds. These endpoints are not suitable for use\n    by services reacting to events or refreshing web pages where a change has just been made.\n  </p>\n  <p>\n    This service does provide searching capabilities, but can sometimes be slow to return results. A faster search\n    is available in the\n    <a href=\"https://prisoner-search-dev.prison.service.justice.gov.uk/swagger-ui/index.html\">HMPPS Prisoner Search</a>\n    service. This also augments the results from the incentives and restricted patients service. That service should\n    be used in preference, with this service only then being used if the data is not available there. Furthermore, the\n    Prisoner Search service also provides key prisoner view that could be suitable.\n  </p>\n  <h2 id=\"role-restrictions\">Access restrictions</h2>\n  <p>\n    All the API endpoints in Prison API require an access token. Clients can either use the access token from sign into\n    <a href=\"https://github.com/ministryofjustice/hmpps-auth\">HMPPS Auth</a>, or obtain a token\n    by making a client credentials request to HMPPS Auth (with or without an optional username associated with the token).\n  </p>\n  <p>Access to endpoints are then restricted in two ways:</p>\n  <ul>\n    <li>\n      Relationship based access. The username (if present) in the token is used to determine what prisons (caseloads) the user is associated with. If there is\n      no username in the token or if it doesn't correspond to a valid account in NOMIS then it will be ignored and only role based access will be used. Each\n      prisoner has a current prison location, or is determined to be out of prison or on temporary transfer. If the user also has the 'INACTIVE_BOOKINGS' role\n      then they can view prisoner details of prisoners that are out or on temporary transfer. Endpoints or services that restrict in this way will be\n      annotated with <code>@VerifyOffenderAccess</code>, <code>@VerifyBookingAccess</code>, depending on whether an offender or booking is passed into\n      the method. The <code>@VerifyAgencyAccess</code> is also used to restrict to allowing to see details in a particular prison e.g. for seeing all alerts.\n      Sometimes the annotation can be hidden deep into multiple different levels of service so is sometimes difficult to locate. The annotation can also specify\n      override roles, so even if the user doesn't have a relationship with the prisoner via a prison then they could still be allowed access via their roles.\n    </li>\n    <li>\n      Role based access. The token will include a number of roles. An endpoint or service can have a <code>@PreAuthorize</code> annotation that restricts access\n      to a list of roles.\n    </li>\n  </ul>\n  <p>New endpoints do try to document what access restrictions are in place, but for old endpoints it is often necessary to look at the source code for\n    <a href=\"https://github.com/ministryofjustice/prison-api\">Prison API</a> in github to find that out.</p>\n\n  <p>\n    Note also that the endpoints that write data back to NOMIS also often require a write scope in the token. User access tokens will automatically have a\n    write scope, but client credentials tokens will often be read scope only unless write has been specifically requested. Write scope endpoints / services\n    will either be annotated with <code>@HasWriteScope</code> or the <code>@PreAuthorize</code> will have an extra <code>hasAuthority('SCOPE_write')</code>\n    condition.\n  </p>\n\n  <p>\n    For an example suppose that information about alerts for a list of prisoners is required. The endpoint is '/booking/offenderNo/{agencyId}/alerts'.\n    Searching the codebase for that endpoint reveals that it is in <code>BookingResource</code>. The resource endpoint doesn't have any annotations\n    restricting access. However it then calls <code>InmateAlertService.getInmateAlertsByOffenderNosAtAgency</code>. This has the following annotation and\n    method signature:\n  <pre>\n      @VerifyAgencyAccess(overrideRoles = {\"GLOBAL_SEARCH\", \"VIEW_PRISONER_DATA\"})\n      public List<Alert> getInmateAlertsByOffenderNosAtAgency(final String agencyId, final List<String> offenderNos) {\n  </pre>\n  which means that either the token has one of those three roles, or the user associated with the token has <code>agencyId</code> as one of their caseloads.\n  </p>\n</div>\n",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2024-07-23.27210.21962f6"
  },
  "servers": [
    {
      "url": "https://prison-api-dev.prison.service.justice.gov.uk",
      "description": "Development"
    },
    {
      "url": "https://prison-api-preprod.prison.service.justice.gov.uk",
      "description": "PreProd"
    },
    {
      "url": "https://prison-api.prison.service.justice.gov.uk",
      "description": "Prod"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    }
  ],
  "paths": {
    "/api/offenders/{offenderNo}": {
      "get": {
        "tags": [
          "offenders"
        ],
        "summary": "Full details about the current state of an offender",
        "operationId": "getOffender_1",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "description": "The offenderNo of offender",
            "required": true,
            "schema": {
              "pattern": "^[A-Z]\\d{4}[A-Z]{2}$",
              "type": "string"
            },
            "example": "A1234AA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InmateDetail"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/offenders/{offenderNo}/addresses": {
      "get": {
        "tags": [
          "offenders"
        ],
        "summary": "Return a list of addresses for a given offender, most recent first.",
        "description": "Requires offender to be in caseload, or role GLOBAL_SEARCH or VIEW_PRISONER_DATA<p>This endpoint uses the REPLICA database.</p>",
        "operationId": "getAddressesByOffenderNo",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "description": "offenderNo",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          }
        ],
        "responses": {
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/offender-sentences": {
      "get": {
        "tags": [
          "offender-sentences"
        ],
        "summary": "List of offenders (with associated sentence detail)",
        "description": "<h3>Algorithm</h3>\n<ul>\n  <li>If there is a confirmed release date, the offender release date is the confirmed release date.</li>\n  <li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li>\n  <li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li>\n</ul>\n<p>This endpoint uses the REPLICA database.</p>",
        "operationId": "getOffenderSentences",
        "parameters": [
          {
            "name": "agencyId",
            "in": "query",
            "description": "agency/prison to restrict results, if none provided current active caseload will be used, unless offenderNo list is specified",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offenderNo",
            "in": "query",
            "description": "a list of offender numbers to search.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OffenderSentenceDetail"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/offenders/{offenderNo}/sentences": {
      "get": {
        "tags": [
          "offenders"
        ],
        "summary": "Offender Sentence Details",
        "description": "Retrieve an single offender sentence details. Requires offender to be in caseload or role GLOBAL_SEARCH or VIEW_PRISONER_DATA",
        "operationId": "getOffenderSentenceDetail",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "description": "Noms ID or Prisoner number (also called offenderNo)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OffenderSentenceDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/offenders/{offenderNo}/booking/latest/sentence-summary": {
      "get": {
        "tags": [
          "offenders"
        ],
        "summary": "Offender Sentence Details",
        "description": "Retrieve an single offender sentence details",
        "operationId": "getLatestSentenceSummary",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "description": "Noms ID or Prisoner number (also called offenderNo)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceSummary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/offender-sentences/booking/{bookingId}/sentences-and-offences": {
      "get": {
        "tags": [
          "offender-sentences"
        ],
        "summary": "Sentence and offence details  for a prisoner",
        "operationId": "getSentenceAndOffenceDetails",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "The required booking id (mandatory)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Sentence and offence details for a prisoner.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OffenderSentenceAndOffences"
                }
              }
            }
          }
        }
      }
    },
    "/api/bookings/offenderNo/{offenderNo}/offenceHistory": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Offence history.",
        "description": "All Offences recorded for this offender.<p>This endpoint uses the REPLICA database.</p>",
        "operationId": "getOffenceHistory",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "description": "The offender number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "convictionsOnly",
            "in": "query",
            "description": "include offences with convictions only",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OffenceHistoryDetail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/offenders/{offenderNo}/alerts/v2": {
      "get": {
        "tags": [
          "offenders"
        ],
        "summary": "Deprecated - Please use the alerts api for access to alerts (eg https://alerts-api-dev.hmpps.service.justice.gov.uk/swagger-ui/index.html)",
        "description": "Replace with https://alerts-api-dev.hmpps.service.justice.gov.uk/swagger-ui/index.html#/prisoner-alerts-controller/retrievePrisonerAlerts",
        "operationId": "getAlertsForAllBookingByOffenderNo",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "description": "Noms ID or Prisoner number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "alertCodes",
            "in": "query",
            "description": "Comma separated list of alertCodes to filter by",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "XA,RSS"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Comma separated list of one or more Alert fields",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC"
            },
            "example": "DESC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alert"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/images/offenders/{offenderNo}": {
      "get": {
        "tags": [
          "images"
        ],
        "summary": "Image details related to offender.",
        "description": "Requires role VIEW_PRISONER_DATA.",
        "operationId": "getImagesByOffender",
        "parameters": [
          {
            "name": "offenderNo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageDetail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/images/{imageId}/data": {
      "get": {
        "tags": [
          "images"
        ],
        "summary": "Image data (as bytes).",
        "description": "Requires role VIEW_PRISONER_DATA.",
        "operationId": "getImageData",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The image id of offender",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fullSizeImage",
            "in": "query",
            "description": "Return full size image",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/bookings/{bookingId}/reasonable-adjustments": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Reasonable Adjustment Information",
        "description": "Reasonable Adjustment Information. Requires booking access (via caseload) or GLOBAL_SEARCH or VIEW_PRISONER_DATA role.",
        "operationId": "getReasonableAdjustments",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "The offender booking id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "a list of treatment codes to search.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "PEEP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReasonableAdjustments"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reference-domains/domains/{domain}/codes": {
      "get": {
        "tags": [
          "reference-domains"
        ],
        "summary": "List of reference codes for reference domain.",
        "description": "List of reference codes for reference domain ordered by code ascending. The list is an un-paged flat list<p>This endpoint uses the REPLICA database.</p>",
        "operationId": "getReferenceCodesByDomain_1",
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "description": "The domain identifier/name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReferenceCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Requested resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unrecoverable error occurred whilst processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CaseLoad": {
        "required": [
          "caseLoadId",
          "currentlyActive",
          "description",
          "type"
        ],
        "type": "object",
        "properties": {
          "caseLoadId": {
            "type": "string",
            "description": "Case Load ID",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Full description of the case load",
            "example": "Moorland Closed (HMP & YOI)"
          },
          "type": {
            "type": "string",
            "description": "Type of case load. Note: Reference Code CSLD_TYPE",
            "example": "INST",
            "enum": [
              "COMM",
              "INST",
              "APP"
            ]
          },
          "caseloadFunction": {
            "type": "string",
            "description": "Functional Use of the case load",
            "example": "GENERAL",
            "enum": [
              "GENERAL",
              "ADMIN"
            ]
          },
          "currentlyActive": {
            "type": "boolean",
            "description": "Indicates that this caseload in the context of a staff member is the current active",
            "example": false
          }
        },
        "description": "Case Load"
      },
      "ErrorResponse": {
        "required": [
          "status",
          "userMessage"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Response status code (will typically mirror HTTP status code).",
            "format": "int32",
            "example": 404
          },
          "errorCode": {
            "type": "integer",
            "description": "An (optional) application-specific error code.",
            "format": "int32",
            "example": 20002
          },
          "userMessage": {
            "type": "string",
            "description": "Concise error reason for end-user consumption.",
            "example": "Entity Not Found"
          },
          "developerMessage": {
            "type": "string",
            "description": "Detailed description of problem with remediation hints aimed at application developer.",
            "example": "Serious error in the system"
          },
          "moreInfo": {
            "type": "string",
            "description": "Provision for further information about the problem (e.g. a link to a FAQ or knowledge base article).",
            "example": "Check out this FAQ for more information"
          }
        },
        "description": "General API Error Response"
      },
      "CaseloadUpdate": {
        "required": [
          "caseload",
          "numUsersEnabled"
        ],
        "type": "object",
        "properties": {
          "caseload": {
            "type": "string",
            "description": "Caseload",
            "example": "MDI"
          },
          "numUsersEnabled": {
            "type": "integer",
            "description": "Number of users enabled to access API",
            "format": "int32",
            "example": 5
          }
        },
        "description": "Caseload Update"
      },
      "ReferenceCodeInfo": {
        "required": [
          "activeFlag",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Reference data item description.",
            "example": "Some description"
          },
          "parentDomain": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Parent reference data item domain.",
            "example": "TASK_TYPE"
          },
          "parentCode": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Parent reference data item code.",
            "example": "MIGRATION"
          },
          "activeFlag": {
            "maxLength": 1,
            "minLength": 0,
            "pattern": "[N|Y]",
            "type": "string",
            "description": "Reference data item active indicator flag.",
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "listSeq": {
            "maximum": 999999,
            "type": "integer",
            "description": "List Sequence",
            "format": "int32",
            "example": 1
          },
          "systemDataFlag": {
            "maxLength": 1,
            "minLength": 0,
            "pattern": "[N|Y]",
            "type": "string",
            "description": "System Data Flag",
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "expiredDate": {
            "type": "string",
            "description": "Expired Date",
            "format": "date",
            "example": "2018-03-09"
          }
        },
        "description": "Reference Information"
      },
      "ReferenceCode": {
        "required": [
          "activeFlag",
          "code",
          "description",
          "domain"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Reference data item domain.",
            "example": "TASK_TYPE"
          },
          "code": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Reference data item code.",
            "example": "MISC"
          },
          "description": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Reference data item description.",
            "example": "Some description"
          },
          "parentDomain": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Parent reference data item domain.",
            "example": "TASK_TYPE"
          },
          "parentCode": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Parent reference data item code.",
            "example": "MIGRATION"
          },
          "activeFlag": {
            "maxLength": 1,
            "minLength": 0,
            "pattern": "[N|Y]",
            "type": "string",
            "description": "Reference data item active indicator flag.",
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "listSeq": {
            "maximum": 999999,
            "type": "integer",
            "description": "List Sequence",
            "format": "int32",
            "example": 1
          },
          "systemDataFlag": {
            "maxLength": 1,
            "minLength": 0,
            "pattern": "[N|Y]",
            "type": "string",
            "description": "System Data Flag",
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "expiredDate": {
            "type": "string",
            "description": "Expired Date",
            "format": "date",
            "example": "2018-03-09"
          },
          "subCodes": {
            "type": "array",
            "description": "List of subordinate reference data items associated with this reference data item. Not returned by default",
            "items": {
              "$ref": "#/components/schemas/ReferenceCode"
            }
          }
        },
        "description": "Reference Code"
      },
      "RequestToTransferOut": {
        "required": [
          "escortType",
          "movementTime",
          "toLocation",
          "transferReasonCode"
        ],
        "type": "object",
        "properties": {
          "toLocation": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The location to be moved to.",
            "example": "PVI"
          },
          "movementTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the movement occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "escortType": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The escort type of the move.",
            "example": "PECS"
          },
          "transferReasonCode": {
            "type": "string",
            "description": "Reason code for the transfer, reference domain is MOVE_RSN",
            "example": "NOTR"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments about the release",
            "example": "Prisoner was transferred to a new prison"
          }
        },
        "description": "Represents the data required for transferring a prisoner to a new location"
      },
      "Alert": {
        "type": "object",
        "properties": {
          "alertId": {
            "type": "integer",
            "description": "Alert Id",
            "format": "int64",
            "example": 1
          },
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id.",
            "format": "int64",
            "example": 14
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference",
            "example": "G3878UK"
          },
          "alertType": {
            "type": "string",
            "description": "Alert Type",
            "example": "X"
          },
          "alertTypeDescription": {
            "type": "string",
            "description": "Alert Type Description",
            "example": "Security"
          },
          "alertCode": {
            "type": "string",
            "description": "Alert Code",
            "example": "XER"
          },
          "alertCodeDescription": {
            "type": "string",
            "description": "Alert Code Description",
            "example": "Escape Risk"
          },
          "comment": {
            "type": "string",
            "description": "Alert comments",
            "example": "Profession lock pick."
          },
          "dateCreated": {
            "type": "string",
            "description": "Date of the alert, which might differ to the date it was created",
            "format": "date",
            "example": "2019-08-20"
          },
          "dateExpires": {
            "type": "string",
            "description": "Date the alert expires",
            "format": "date",
            "example": "2020-08-20"
          },
          "modifiedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the alert was last modified in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS. If this Alert hasn't been modified since its creation this field will be null",
            "example": "2021-07-05T10:35:17"
          },
          "expired": {
            "type": "boolean",
            "description": "True / False based on presence of expiry date",
            "example": true
          },
          "active": {
            "type": "boolean",
            "description": "True / False based on alert status",
            "example": false
          },
          "addedByFirstName": {
            "type": "string",
            "description": "First name of the user who added the alert",
            "example": "John"
          },
          "addedByLastName": {
            "type": "string",
            "description": "Last name of the user who added the alert",
            "example": "Smith"
          },
          "expiredByFirstName": {
            "type": "string",
            "description": "First name of the user who last modified the alert",
            "example": "John"
          },
          "expiredByLastName": {
            "type": "string",
            "description": "Last name of the user who last modified the alert",
            "example": "Smith"
          }
        },
        "description": "Alert"
      },
      "Alias": {
        "required": [
          "offenderId"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of offender alias",
            "example": "Mr"
          },
          "firstName": {
            "type": "string",
            "description": "First name of offender alias",
            "example": "Mike"
          },
          "middleName": {
            "type": "string",
            "description": "Middle names of offender alias",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of offender alias",
            "example": "Smith"
          },
          "age": {
            "type": "integer",
            "description": "Age of Offender",
            "format": "int32",
            "example": 32
          },
          "dob": {
            "type": "string",
            "description": "Date of Birth of Offender",
            "format": "date",
            "example": "1980-02-28"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "example": "Male"
          },
          "ethnicity": {
            "type": "string",
            "description": "Ethnicity",
            "example": "Mixed: White and Black African"
          },
          "nameType": {
            "type": "string",
            "description": "Type of Alias",
            "example": "Alias Name"
          },
          "createDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date",
            "example": "2019-02-15"
          },
          "offenderId": {
            "type": "integer",
            "description": "Offender ID",
            "format": "int64",
            "example": 543548
          }
        },
        "description": "Alias"
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking number",
            "format": "int64",
            "example": 123456
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number).",
            "example": "GV09876N"
          },
          "classificationCode": {
            "type": "string",
            "description": "Classification code",
            "example": "C"
          },
          "classification": {
            "type": "string",
            "description": "Classification description",
            "example": "Cat C"
          },
          "assessmentCode": {
            "type": "string",
            "description": "Identifies the type of assessment",
            "example": "CATEGORY"
          },
          "assessmentDescription": {
            "type": "string",
            "description": "Assessment description",
            "example": "Categorisation"
          },
          "cellSharingAlertFlag": {
            "type": "boolean",
            "description": "Indicates the presence of a cell sharing alert"
          },
          "assessmentDate": {
            "type": "string",
            "description": "Date assessment was created",
            "format": "date",
            "example": "2018-02-11"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Date of next review",
            "format": "date",
            "example": "2018-02-11"
          },
          "approvalDate": {
            "type": "string",
            "description": "Date of assessment approval",
            "format": "date",
            "example": "2018-02-11"
          },
          "assessmentAgencyId": {
            "type": "string",
            "description": "The assessment creation agency id",
            "example": "MDI"
          },
          "assessmentStatus": {
            "type": "string",
            "description": "The status of the assessment",
            "example": "A",
            "enum": [
              "P",
              "A",
              "I"
            ]
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number of assessment within booking",
            "format": "int32",
            "example": 1
          },
          "assessmentComment": {
            "type": "string",
            "description": "Comment from assessor",
            "example": "Comment details"
          },
          "assessorId": {
            "type": "integer",
            "description": "Staff member who made the assessment",
            "format": "int64",
            "example": 130000
          },
          "assessorUser": {
            "type": "string",
            "description": "Username who made the assessment",
            "example": "NGK33Y"
          }
        },
        "description": "Assessment"
      },
      "AssignedLivingUnit": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency Id"
          },
          "locationId": {
            "type": "integer",
            "description": "location Id",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "description": "Living Unit Desc"
          },
          "agencyName": {
            "type": "string",
            "description": "Name of the agency where this living unit resides"
          }
        },
        "description": "Assigned Living Unit"
      },
      "InmateDetail": {
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference",
            "example": "A1234AA"
          },
          "bookingId": {
            "type": "integer",
            "description": "Offender Booking Id",
            "format": "int64",
            "example": 432132
          },
          "bookingNo": {
            "type": "string",
            "description": "Booking Number"
          },
          "offenderId": {
            "type": "integer",
            "description": "Internal Offender ID",
            "format": "int64"
          },
          "rootOffenderId": {
            "type": "integer",
            "description": "Internal Root Offender ID",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name(s)"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth of prisoner",
            "format": "date",
            "example": "1970-03-15"
          },
          "age": {
            "type": "integer",
            "description": "Age of prisoner. Note: Full Details Only",
            "format": "int32"
          },
          "activeFlag": {
            "type": "boolean",
            "description": "Indicates that the person is currently in prison"
          },
          "facialImageId": {
            "type": "integer",
            "description": "Image Id Ref of prisoner",
            "format": "int64"
          },
          "agencyId": {
            "type": "string",
            "description": "Identifier of agency to which the prisoner is associated."
          },
          "assignedLivingUnitId": {
            "type": "integer",
            "description": "Identifier of living unit (e.g. cell) that prisoner is assigned to.",
            "format": "int64"
          },
          "religion": {
            "type": "string",
            "description": "Religion of the prisoner"
          },
          "language": {
            "type": "string",
            "description": "Preferred spoken language"
          },
          "interpreterRequired": {
            "type": "boolean",
            "description": "Interpreter required"
          },
          "writtenLanguage": {
            "type": "string",
            "description": "Preferred written language"
          },
          "alertsCodes": {
            "type": "array",
            "description": "List of Alerts",
            "items": {
              "type": "string",
              "description": "List of Alerts"
            }
          },
          "activeAlertCount": {
            "type": "integer",
            "description": "number of active alerts. Note: Full Details Only",
            "format": "int64"
          },
          "inactiveAlertCount": {
            "type": "integer",
            "description": "number of inactive alerts. Note: Full Details Only",
            "format": "int64"
          },
          "alerts": {
            "type": "array",
            "description": "List of alert details",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          },
          "assignedLivingUnit": {
            "$ref": "#/components/schemas/AssignedLivingUnit"
          },
          "physicalAttributes": {
            "$ref": "#/components/schemas/PhysicalAttributes"
          },
          "physicalCharacteristics": {
            "type": "array",
            "description": "List of physical characteristics",
            "items": {
              "$ref": "#/components/schemas/PhysicalCharacteristic"
            }
          },
          "profileInformation": {
            "type": "array",
            "description": "List of profile information",
            "items": {
              "$ref": "#/components/schemas/ProfileInformation"
            }
          },
          "physicalMarks": {
            "type": "array",
            "description": "List of physical marks",
            "items": {
              "$ref": "#/components/schemas/PhysicalMark"
            }
          },
          "assessments": {
            "type": "array",
            "description": "List of assessments",
            "items": {
              "$ref": "#/components/schemas/Assessment"
            }
          },
          "csra": {
            "type": "string",
            "description": "CSRA (Latest assessment with cellSharing=true from list of assessments)"
          },
          "csraClassificationCode": {
            "type": "string",
            "description": "The CSRA classification (calculated from the list of CSRA assessments)",
            "example": "STANDARD"
          },
          "csraClassificationDate": {
            "type": "string",
            "description": "The date that the csraClassificationCode was assessed",
            "format": "date"
          },
          "category": {
            "type": "string",
            "description": "Category description (from list of assessments)"
          },
          "categoryCode": {
            "type": "string",
            "description": "Category code (from list of assessments)"
          },
          "birthPlace": {
            "type": "string",
            "description": "Place of birth",
            "example": "WALES"
          },
          "birthCountryCode": {
            "type": "string",
            "description": "Country of birth",
            "example": "GBR"
          },
          "inOutStatus": {
            "type": "string",
            "description": "In/Out Status",
            "example": "IN, OUT, TRN"
          },
          "identifiers": {
            "type": "array",
            "description": "Identifiers. Note: Only returned when requesting extra details",
            "items": {
              "$ref": "#/components/schemas/OffenderIdentifier"
            }
          },
          "personalCareNeeds": {
            "type": "array",
            "description": "Personal Care Needs. Note: Only returned when requesting extra details",
            "items": {
              "$ref": "#/components/schemas/PersonalCareNeed"
            }
          },
          "sentenceDetail": {
            "$ref": "#/components/schemas/SentenceCalcDates"
          },
          "offenceHistory": {
            "type": "array",
            "description": "Offence History. Note: Only returned when requesting extra details",
            "items": {
              "$ref": "#/components/schemas/OffenceHistoryDetail"
            }
          },
          "sentenceTerms": {
            "type": "array",
            "description": "Current Sentence Terms. Note: Only returned when requesting extra details",
            "items": {
              "$ref": "#/components/schemas/OffenderSentenceTerms"
            }
          },
          "aliases": {
            "type": "array",
            "description": "Aliases. Note: Only returned when requesting extra details",
            "items": {
              "$ref": "#/components/schemas/Alias"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of prisoner",
            "example": "ACTIVE IN, INACTIVE OUT, INACTIVE TRN"
          },
          "statusReason": {
            "type": "string",
            "description": "Last movement status of the prison",
            "example": "CRT-CA"
          },
          "lastMovementTypeCode": {
            "type": "string",
            "description": "Last Movement Type Code of prisoner. Note: Reference Data from MOVE_TYPE Domain",
            "example": "TAP, CRT, TRN, ADM, REL"
          },
          "lastMovementReasonCode": {
            "type": "string",
            "description": "Last Movement Reason of prisoner. Note: Reference Data from MOVE_RSN Domain",
            "example": "CA"
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status. Note: Only returned when requesting extra details",
            "example": "REMAND",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "recall": {
            "type": "boolean",
            "description": "Recall. Note: Only returned when requesting extra details",
            "example": true
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "The prisoner's imprisonment status. Note: Only returned when requesting extra details",
            "example": "LIFE"
          },
          "imprisonmentStatusDescription": {
            "type": "string",
            "description": "The prisoner's imprisonment status description. Note: Only returned when requesting extra details",
            "example": "Serving Life Imprisonment"
          },
          "receptionDate": {
            "type": "string",
            "description": "Date prisoner was received into the prison.",
            "format": "date",
            "example": "1980-01-01"
          },
          "locationDescription": {
            "type": "string",
            "description": "current prison or outside with last movement information.",
            "example": "Outside - released from Leeds"
          },
          "latestLocationId": {
            "type": "string",
            "description": "the current prison id or the last prison before release",
            "example": "MDI"
          }
        },
        "description": "Inmate Detail"
      },
      "OffenceHistoryDetail": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Prisoner booking id",
            "format": "int64",
            "example": 1123456
          },
          "offenceDate": {
            "type": "string",
            "description": "Date the offence took place",
            "format": "date",
            "example": "2018-02-10"
          },
          "offenceRangeDate": {
            "type": "string",
            "description": "End date if range the offence was believed to have taken place",
            "format": "date",
            "example": "2018-03-10"
          },
          "offenceDescription": {
            "type": "string",
            "description": "Description associated with the offence code",
            "example": "Commit an act / series of acts with intent to pervert the course of public justice"
          },
          "offenceCode": {
            "type": "string",
            "description": "Reference Code",
            "example": "RR84070"
          },
          "statuteCode": {
            "type": "string",
            "description": "Statute code",
            "example": "RR84"
          },
          "mostSerious": {
            "type": "boolean",
            "description": "Identifies the main offence per booking"
          },
          "primaryResultCode": {
            "type": "string",
            "description": "Primary result code "
          },
          "secondaryResultCode": {
            "type": "string",
            "description": "Secondary result code"
          },
          "primaryResultDescription": {
            "type": "string",
            "description": "Description for Primary result"
          },
          "secondaryResultDescription": {
            "type": "string",
            "description": "Description for Secondary result"
          },
          "primaryResultConviction": {
            "type": "boolean",
            "description": "Conviction flag for Primary result "
          },
          "secondaryResultConviction": {
            "type": "boolean",
            "description": "Conviction flag for Secondary result "
          },
          "courtDate": {
            "type": "string",
            "description": "Latest court date associated with the offence",
            "format": "date",
            "example": "2018-02-10"
          },
          "caseId": {
            "type": "integer",
            "description": "Court case id",
            "format": "int64",
            "example": 100
          },
          "offenceSeverityRanking": {
            "type": "integer",
            "description": "Offence Severity Ranking",
            "format": "int32",
            "example": 100
          }
        },
        "description": "Offence History Item"
      },
      "OffenderIdentifier": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of offender identifier",
            "example": "PNC"
          },
          "value": {
            "type": "string",
            "description": "The value of the offender identifier",
            "example": "1231/XX/121"
          },
          "offenderNo": {
            "type": "string",
            "description": "The offender number for this identifier",
            "example": "A1234AB"
          },
          "bookingId": {
            "type": "integer",
            "description": "The booking ID for this identifier",
            "format": "int64",
            "example": 1231223
          },
          "issuedAuthorityText": {
            "type": "string",
            "description": "Issuing Authority Information",
            "example": "Important Auth"
          },
          "issuedDate": {
            "type": "string",
            "description": "Date of issue",
            "format": "date",
            "example": "2018-01-21"
          },
          "caseloadType": {
            "type": "string",
            "description": "Related caseload type",
            "example": "GENERAL"
          },
          "whenCreated": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Creation date and time",
            "example": "2021-07-05T10:35:17"
          },
          "offenderId": {
            "type": "integer",
            "description": "Offender ID",
            "format": "int64",
            "example": 234547
          },
          "rootOffenderId": {
            "type": "integer",
            "description": "Root Offender ID",
            "format": "int64",
            "example": 654321
          }
        },
        "description": "Offender Identifier"
      },
      "OffenderSentenceTerms": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id.",
            "format": "int64",
            "example": 1132400
          },
          "sentenceSequence": {
            "type": "integer",
            "description": "Sentence number within booking id.",
            "format": "int32",
            "example": 2
          },
          "termSequence": {
            "type": "integer",
            "description": "Sentence term number within sentence.",
            "format": "int32",
            "example": 1
          },
          "consecutiveTo": {
            "type": "integer",
            "description": "Sentence number which this sentence follows if consecutive, otherwise concurrent.",
            "format": "int32",
            "example": 2
          },
          "sentenceType": {
            "type": "string",
            "description": "Sentence type, using reference data from table SENTENCE_CALC_TYPES.",
            "example": "2"
          },
          "sentenceTypeDescription": {
            "type": "string",
            "description": "Sentence type description.",
            "example": "2"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of sentence term.",
            "format": "date",
            "example": "2018-12-31"
          },
          "years": {
            "type": "integer",
            "description": "Sentence length years.",
            "format": "int32",
            "example": 1
          },
          "months": {
            "type": "integer",
            "description": "Sentence length months.",
            "format": "int32",
            "example": 2
          },
          "weeks": {
            "type": "integer",
            "description": "Sentence length weeks.",
            "format": "int32",
            "example": 3
          },
          "days": {
            "type": "integer",
            "description": "Sentence length days.",
            "format": "int32",
            "example": 4
          },
          "lifeSentence": {
            "type": "boolean",
            "description": "Whether this is a life sentence."
          },
          "caseId": {
            "type": "string",
            "description": "Court case id"
          },
          "fineAmount": {
            "type": "number",
            "description": "Fine amount.",
            "format": "double"
          },
          "sentenceTermCode": {
            "type": "string",
            "description": "Sentence term code.",
            "example": "IMP"
          },
          "lineSeq": {
            "type": "integer",
            "description": "Sentence line number",
            "format": "int64",
            "example": 1
          },
          "sentenceStartDate": {
            "type": "string",
            "description": "Sentence start date",
            "format": "date",
            "example": "2018-12-31"
          }
        },
        "description": "Offender Sentence terms details for booking id"
      },
      "PersonalCareNeed": {
        "type": "object",
        "properties": {
          "personalCareNeedId": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1
          },
          "problemType": {
            "type": "string",
            "description": "Problem Type",
            "example": "MATSTAT"
          },
          "problemCode": {
            "type": "string",
            "description": "Problem Code",
            "example": "ACCU9"
          },
          "problemStatus": {
            "type": "string",
            "description": "Problem Status",
            "example": "ON"
          },
          "problemDescription": {
            "type": "string",
            "description": "Problem Description",
            "example": "Preg, acc under 9mths"
          },
          "commentText": {
            "type": "string",
            "description": "Comment Text",
            "example": "a comment"
          },
          "startDate": {
            "type": "string",
            "description": "Start Date",
            "format": "date",
            "example": "2010-06-21"
          },
          "endDate": {
            "type": "string",
            "description": "End Date",
            "format": "date",
            "example": "2010-06-21"
          }
        },
        "description": "Personal Care Need"
      },
      "PhysicalAttributes": {
        "type": "object",
        "properties": {
          "sexCode": {
            "type": "string",
            "description": "Gender Code",
            "example": "M"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "example": "Male"
          },
          "raceCode": {
            "type": "string",
            "description": "Ethnicity Code",
            "example": "W1"
          },
          "ethnicity": {
            "type": "string",
            "description": "Ethnicity",
            "example": "White: Eng./Welsh/Scot./N.Irish/British"
          },
          "heightFeet": {
            "type": "integer",
            "description": "Height in Feet",
            "format": "int32",
            "example": 5
          },
          "heightInches": {
            "type": "integer",
            "description": "Height in Inches",
            "format": "int32",
            "example": 60
          },
          "heightMetres": {
            "type": "number",
            "description": "Height in Metres (to 2dp)",
            "example": 1.76
          },
          "heightCentimetres": {
            "type": "integer",
            "description": "Height in Centimetres",
            "format": "int32",
            "example": 176
          },
          "weightPounds": {
            "type": "integer",
            "description": "Weight in Pounds",
            "format": "int32",
            "example": 50
          },
          "weightKilograms": {
            "type": "integer",
            "description": "Weight in Kilograms",
            "format": "int32",
            "example": 67
          }
        },
        "description": "Physical Attributes"
      },
      "PhysicalCharacteristic": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type code of physical characteristic"
          },
          "characteristic": {
            "type": "string",
            "description": "Type of physical characteristic"
          },
          "detail": {
            "type": "string",
            "description": "Detailed information about the physical characteristic"
          },
          "imageId": {
            "type": "integer",
            "description": "Image Id Ref",
            "format": "int64"
          }
        },
        "description": "Physical Characteristic"
      },
      "PhysicalMark": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of Mark"
          },
          "side": {
            "type": "string",
            "description": "Left or Right Side"
          },
          "bodyPart": {
            "type": "string",
            "description": "Where on the body"
          },
          "orientation": {
            "type": "string",
            "description": "Image orientation"
          },
          "comment": {
            "type": "string",
            "description": "More information"
          },
          "imageId": {
            "type": "integer",
            "description": "Image Id Ref",
            "format": "int64"
          }
        },
        "description": "Physical Mark"
      },
      "ProfileInformation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of profile information"
          },
          "question": {
            "type": "string",
            "description": "Profile Question"
          },
          "resultValue": {
            "type": "string",
            "description": "Profile Result Answer"
          }
        },
        "description": "Profile Information"
      },
      "SentenceCalcDates": {
        "type": "object",
        "properties": {
          "sentenceExpiryDate": {
            "type": "string",
            "description": "SED - date on which sentence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "automaticReleaseDate": {
            "type": "string",
            "description": "ARD - calculated automatic (unconditional) release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "conditionalReleaseDate": {
            "type": "string",
            "description": "CRD - calculated conditional release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonParoleDate": {
            "type": "string",
            "description": "NPD - calculated non-parole date for offender (relating to the 1991 act).",
            "format": "date",
            "example": "2020-02-03"
          },
          "postRecallReleaseDate": {
            "type": "string",
            "description": "PRRD - calculated post-recall release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryDate": {
            "type": "string",
            "description": "LED - date on which offender licence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewEligibilityDate": {
            "type": "string",
            "description": "HDCED - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityDate": {
            "type": "string",
            "description": "PED - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewActualDate": {
            "type": "string",
            "description": "HDCAD - the offender's actual home detention curfew date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "actualParoleDate": {
            "type": "string",
            "description": "APD - the offender's actual parole date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "releaseOnTemporaryLicenceDate": {
            "type": "string",
            "description": "ROTL - the date on which offender will be released on temporary licence.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "ERSED - the date on which offender will be eligible for early removal (under the Early Removal Scheme for foreign nationals).",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyTermDate": {
            "type": "string",
            "description": "ETD - early term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "midTermDate": {
            "type": "string",
            "description": "MTD - mid term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "lateTermDate": {
            "type": "string",
            "description": "LTD - late term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryDate": {
            "type": "string",
            "description": "TUSED - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffDate": {
            "type": "string",
            "description": "Date on which minimum term is reached for parole (indeterminate/life sentences).",
            "format": "date",
            "example": "2020-02-03"
          },
          "dtoPostRecallReleaseDate": {
            "type": "string",
            "description": "DPRRD - Detention training order post recall release date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffEarlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "TERSED - Tariff early removal scheme eligibility date",
            "format": "date",
            "example": "2020-02-03"
          },
          "effectiveSentenceEndDate": {
            "type": "string",
            "description": "Effective sentence end date",
            "format": "date",
            "example": "2020-02-03"
          },
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id.",
            "format": "int64",
            "example": 1234123
          },
          "sentenceStartDate": {
            "type": "string",
            "description": "Sentence start date.",
            "format": "date",
            "example": "2010-02-03"
          },
          "additionalDaysAwarded": {
            "type": "integer",
            "description": "ADA - days added to sentence term due to adjustments.",
            "format": "int32",
            "example": 5
          },
          "automaticReleaseOverrideDate": {
            "type": "string",
            "description": "ARD (override) - automatic (unconditional) release override date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "conditionalReleaseOverrideDate": {
            "type": "string",
            "description": "CRD (override) - conditional release override date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonParoleOverrideDate": {
            "type": "string",
            "description": "NPD (override) - non-parole override date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "postRecallReleaseOverrideDate": {
            "type": "string",
            "description": "PRRD (override) - post-recall release override date for offender.",
            "format": "date",
            "example": "2020-04-01"
          },
          "dtoPostRecallReleaseDateOverride": {
            "type": "string",
            "description": "DPRRD (override) - detention training order post-recall release override date for offender",
            "format": "date",
            "example": "2020-04-01"
          },
          "nonDtoReleaseDate": {
            "type": "string",
            "description": "Release date for non-DTO sentence (if applicable). This will be based on one of ARD, CRD, NPD or PRRD.",
            "format": "date",
            "example": "2020-04-01"
          },
          "sentenceExpiryCalculatedDate": {
            "type": "string",
            "description": "SED (calculated) - date on which sentence expires. (as calculated by NOMIS)",
            "format": "date",
            "example": "2020-02-03"
          },
          "sentenceExpiryOverrideDate": {
            "type": "string",
            "description": "SED (override) - date on which sentence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryCalculatedDate": {
            "type": "string",
            "description": "LED (calculated) - date on which offender licence expires. (as calculated by NOMIS)",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryOverrideDate": {
            "type": "string",
            "description": "LED (override) - date on which offender licence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityCalculatedDate": {
            "type": "string",
            "description": "PED (calculated) - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityOverrideDate": {
            "type": "string",
            "description": "PED (override) - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryCalculatedDate": {
            "type": "string",
            "description": "TUSED (calculated) - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryOverrideDate": {
            "type": "string",
            "description": "TUSED (override) - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewEligibilityCalculatedDate": {
            "type": "string",
            "description": "HDCED (calculated) - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewEligibilityOverrideDate": {
            "type": "string",
            "description": "HDCED (override) - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonDtoReleaseDateType": {
            "type": "string",
            "description": "Indicates which type of non-DTO release date is the effective release date. One of 'ARD', 'CRD', 'NPD' or 'PRRD'.",
            "example": "CRD",
            "enum": [
              "ARD",
              "CRD",
              "NPD",
              "PRRD"
            ]
          },
          "confirmedReleaseDate": {
            "type": "string",
            "description": "Confirmed release date for offender.",
            "format": "date",
            "example": "2020-04-20"
          },
          "releaseDate": {
            "type": "string",
            "description": "Confirmed, actual, approved, provisional or calculated release date for offender, according to offender release date algorithm.<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
            "format": "date",
            "example": "2020-04-01"
          },
          "etdOverrideDate": {
            "type": "string",
            "description": "ETD Override - early term date for offender override date.",
            "format": "date",
            "example": "2019-04-02"
          },
          "etdCalculatedDate": {
            "type": "string",
            "description": "ETD Override - early term date for offender calculated date.",
            "format": "date",
            "example": "2019-04-02"
          },
          "mtdOverrideDate": {
            "type": "string",
            "description": "MTD - mid term date for offender override date.",
            "format": "date",
            "example": "2019-04-02"
          },
          "mtdCalculatedDate": {
            "type": "string",
            "description": "MTD - mid term date for offender calculated date.",
            "format": "date",
            "example": "2019-04-02"
          },
          "ltdOverrideDate": {
            "type": "string",
            "description": "LTD - late term date for offender override date.",
            "format": "date",
            "example": "2019-04-02"
          },
          "ltdCalculatedDate": {
            "type": "string",
            "description": "LTD - late term date for offender calculated date.",
            "format": "date",
            "example": "2019-04-02"
          },
          "topupSupervisionStartDate": {
            "type": "string",
            "description": "Top-up supervision start date for offender - calculated as licence end date + 1 day or releaseDate if licence end date not set.",
            "format": "date",
            "example": "2019-04-01"
          },
          "homeDetentionCurfewEndDate": {
            "type": "string",
            "description": "Offender's home detention curfew end date - calculated as one day before the releaseDate.",
            "format": "date",
            "example": "2019-04-01"
          }
        },
        "description": "Sentence Calculation Dates"
      },
      "RequestToTransferIn": {
        "required": [
          "receiveTime"
        ],
        "type": "object",
        "properties": {
          "receiveTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the movement occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments about the release",
            "example": "Prisoner was transferred to a new prison"
          },
          "cellLocation": {
            "type": "string",
            "description": "Cell location",
            "example": "MDI-RECP"
          }
        },
        "description": "Represents the data required for receiving a prisoner transfer"
      },
      "RequestToTransferOutToTemporaryAbsence": {
        "required": [
          "escortType",
          "transferReasonCode"
        ],
        "type": "object",
        "properties": {
          "toCity": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The city to be released to. Not required if scheduleEventId is present",
            "example": "18248"
          },
          "movementTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the movement occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "escortType": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The escort type of the move.",
            "example": "PECS"
          },
          "transferReasonCode": {
            "type": "string",
            "description": "Reason code for the transfer, reference domain is MOVE_RSN",
            "example": "C3"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments about the release",
            "example": "Prisoner was transferred to a new prison"
          },
          "shouldReleaseBed": {
            "type": "boolean",
            "description": "Flag indicate if bed should be released"
          },
          "scheduleEventId": {
            "type": "integer",
            "description": "Optional scheduled schedule event this movement relates to",
            "format": "int64"
          }
        },
        "description": "Represents the data required for transferring a prisoner to temporary absence"
      },
      "RequestForTemporaryAbsenceArrival": {
        "required": [
          "agencyId",
          "dateTime"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency identifier",
            "example": "MDI"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "Movement Reason Code",
            "example": "CA"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments",
            "example": "Prisoner was transferred from..."
          },
          "dateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the movement occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Represents the data required for registering temporary absence arrival"
      },
      "RequestToReleasePrisoner": {
        "required": [
          "movementReasonCode",
          "releaseTime"
        ],
        "type": "object",
        "properties": {
          "movementReasonCode": {
            "type": "string",
            "description": "Reason code for the release, reference domain is MOVE_RSN",
            "example": "CR",
            "enum": [
              "AR",
              "AU",
              "BD",
              "BL",
              "CE",
              "CR",
              "D1",
              "D2",
              "D3",
              "D4",
              "D5",
              "D6",
              "DA",
              "DD",
              "DE",
              "DEC",
              "DL",
              "DS",
              "ER",
              "ESCP",
              "ETR",
              "EX",
              "HC",
              "HD",
              "HE",
              "HP",
              "HR",
              "HU",
              "IF",
              "MRG",
              "NCS",
              "NG",
              "NP",
              "PD",
              "PF",
              "PX",
              "RE",
              "RW",
              "SC",
              "UAL"
            ]
          },
          "releaseTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the release occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments about the release",
            "example": "Prisoner was released on bail"
          },
          "toLocationCode": {
            "type": "string",
            "description": "Agency Location code where prisoner is released to, default is OUT",
            "example": "OUT"
          }
        },
        "description": "Request release of prisoner"
      },
      "RequestToRecall": {
        "required": [
          "movementReasonCode",
          "prisonId",
          "recallTime"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "type": "string",
            "description": "Prison ID where recalled to",
            "example": "MDI"
          },
          "recallTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the recall occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "fromLocationId": {
            "type": "string",
            "description": "Where the prisoner has been recalled from (default OUT)",
            "example": "SHEFCC"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "Reason for in movement (e.g. Recall from Intermittent Custody)",
            "example": "24"
          },
          "youthOffender": {
            "type": "boolean",
            "description": "Is this offender a youth",
            "example": false
          },
          "cellLocation": {
            "type": "string",
            "description": "Cell location where recalled prisoner should be housed, default will be reception",
            "example": "MDI-RECP"
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "Require imprisonment status",
            "example": "CUR_ORA"
          }
        },
        "description": "Represents the data required for recalling a prisoner"
      },
      "CellMoveResult": {
        "required": [
          "agencyId",
          "bookingId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Unique, numeric booking id.",
            "format": "int64",
            "example": 1234134
          },
          "agencyId": {
            "type": "string",
            "description": "Identifier of agency that offender is associated with.",
            "example": "MDI"
          },
          "assignedLivingUnitId": {
            "type": "integer",
            "description": "Identifier of living unit (e.g. cell) that offender is assigned to.",
            "format": "int64",
            "example": 123123
          },
          "assignedLivingUnitDesc": {
            "type": "string",
            "description": "Description of living unit (e.g. cell) that offender is assigned to.",
            "example": "MDI-1-1-3"
          },
          "bedAssignmentHistorySequence": {
            "type": "integer",
            "description": "Bed assignment sequence associated with the entry created for this cell move ",
            "format": "int32",
            "example": 2
          }
        },
        "description": "Cell move result"
      },
      "RequestToDischargePrisoner": {
        "required": [
          "hospitalLocationCode"
        ],
        "type": "object",
        "properties": {
          "hospitalLocationCode": {
            "type": "string",
            "description": "Agency Location code for hospital, agency type is HSHOSP",
            "example": "HAZLWD"
          },
          "dischargeTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the release occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "supportingPrisonId": {
            "type": "string",
            "description": "Supporting Prison for POM, can be null if prisoner is already in a prison, for prisoners already released this field will be ignored",
            "example": "MDI"
          },
          "fromLocationId": {
            "type": "string",
            "description": "Where the prisoner has moved from e.g. court, can be null if prisoner is already in prison, for prisoners already in prison this field will be ignored",
            "example": "SHEFCC"
          }
        },
        "description": "Request release of prisoner"
      },
      "RequestToTransferOutToCourt": {
        "required": [
          "escortType",
          "movementTime",
          "toLocation",
          "transferReasonCode"
        ],
        "type": "object",
        "properties": {
          "toLocation": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The court location to be moved to.",
            "example": "LEEDYC"
          },
          "movementTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the movement occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          },
          "escortType": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The escort type of the move.",
            "example": "PECS"
          },
          "transferReasonCode": {
            "type": "string",
            "description": "Reason code for the transfer, reference domain is MOVE_RSN",
            "example": "CRT"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments about the release",
            "example": "Prisoner was transferred to a new prison"
          },
          "shouldReleaseBed": {
            "type": "boolean",
            "description": "Flag indicate if bed should be released"
          },
          "courtEventId": {
            "type": "integer",
            "description": "Optional scheduled court hearing event this movement relates to",
            "format": "int64"
          }
        },
        "description": "Represents the data required for transferring a prisoner to a court"
      },
      "RequestForCourtTransferIn": {
        "required": [
          "agencyId",
          "dateTime"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency identifier",
            "example": "MDI"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "Movement Reason Code",
            "example": "CA"
          },
          "commentText": {
            "type": "string",
            "description": "Additional comments",
            "example": "Prisoner was transferred to a new prison"
          },
          "dateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the movement occurred, if not supplied it will be the current time. Note: Time can be in the past but not before the last movement",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Represents the data required for registering court return"
      },
      "HdcChecks": {
        "required": [
          "date",
          "passed"
        ],
        "type": "object",
        "properties": {
          "passed": {
            "type": "boolean",
            "description": "HDC Checks passed flag",
            "example": true
          },
          "date": {
            "type": "string",
            "description": "HDC Checks passed date. ISO-8601 format. YYYY-MM-DD",
            "format": "date",
            "example": "2018-12-31"
          }
        },
        "description": "HDC Curfew Check"
      },
      "ApprovalStatus": {
        "required": [
          "approvalStatus",
          "date"
        ],
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "description": "Approval status. Must be one of the 'HDC_APPROVE' reference codes",
            "example": "APPROVED"
          },
          "refusedReason": {
            "type": "string",
            "description": "Refused reason. Must be one of the 'HDC_REJ_RSN' reference codes",
            "example": "UNDER_14DAYS"
          },
          "date": {
            "type": "string",
            "description": "Approval status date. ISO-8601 format. YYYY-MM-DD",
            "format": "date",
            "example": "2018-12-31"
          }
        },
        "description": "HDC Approval Status"
      },
      "CategoryRejectionDetail": {
        "required": [
          "assessmentSeq",
          "bookingId",
          "evaluationDate",
          "reviewCommitteeCode"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64"
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number",
            "format": "int32"
          },
          "evaluationDate": {
            "type": "string",
            "description": "Date of rejection",
            "format": "date"
          },
          "reviewCommitteeCode": {
            "type": "string",
            "description": "Department, reference code in domain 'ASSESS_COMM'. Normally 'REVIEW'"
          },
          "committeeCommentText": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Overall comment"
          }
        },
        "description": "Rejection details"
      },
      "CategorisationUpdateDetail": {
        "required": [
          "assessmentSeq",
          "bookingId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64"
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "Category code"
          },
          "committee": {
            "type": "string",
            "description": "The assessment committee code (reference code in domain 'ASSESS_COMM')"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Next review date for recategorisation",
            "format": "date"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "Initial categorisation comment"
          }
        },
        "description": "Categorisation details"
      },
      "CategoryApprovalDetail": {
        "required": [
          "bookingId",
          "category",
          "evaluationDate",
          "reviewCommitteeCode"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64"
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number. Only used to check consistency",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "description": "Category code, reference code in domain 'SUP_LVL_TYPE'"
          },
          "evaluationDate": {
            "type": "string",
            "description": "Date of approval",
            "format": "date"
          },
          "reviewCommitteeCode": {
            "type": "string",
            "description": "Department, reference code in domain 'ASSESS_COMM'. Normally 'REVIEW'",
            "example": "REVIEW"
          },
          "approvedCategoryComment": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Approved result category comment"
          },
          "committeeCommentText": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Overall comment"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Next review date (date of re-assessment, remains unchanged if not provided)",
            "format": "date"
          },
          "approvedPlacementAgencyId": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "Approved placement prison"
          },
          "approvedPlacementText": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Approved placement prison comment"
          }
        },
        "description": "Approval details"
      },
      "OffenceActivationDto": {
        "required": [
          "activationFlag",
          "offenceCode",
          "statuteCode"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "type": "string"
          },
          "statuteCode": {
            "type": "string"
          },
          "activationFlag": {
            "type": "boolean"
          }
        },
        "description": "Used for deactivating/reactivating an offence. A deactivated offence is not selectable in NOMIS"
      },
      "HOCodeDto": {
        "required": [
          "activeFlag",
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HO code",
            "example": "825/99"
          },
          "description": {
            "type": "string",
            "description": "HO code description",
            "example": "Ho Code 825/99"
          },
          "activeFlag": {
            "type": "string",
            "description": "Active Y/N",
            "example": "Y"
          },
          "expiryDate": {
            "type": "string",
            "description": "Expiry Date",
            "format": "date",
            "example": "2021-01-05"
          }
        },
        "description": "HO Code",
        "example": "825/99"
      },
      "OffenceDto": {
        "required": [
          "activeFlag",
          "code",
          "description",
          "severityRanking",
          "statuteCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Reference Code",
            "example": "RR84070"
          },
          "description": {
            "type": "string",
            "description": "Description of offence"
          },
          "statuteCode": {
            "$ref": "#/components/schemas/StatuteDto"
          },
          "hoCode": {
            "$ref": "#/components/schemas/HOCodeDto"
          },
          "severityRanking": {
            "type": "string",
            "description": "Severity Ranking",
            "example": "5"
          },
          "activeFlag": {
            "type": "string",
            "description": "Active Y/N",
            "example": "Y"
          },
          "listSequence": {
            "type": "integer",
            "description": "Sequence",
            "format": "int32",
            "example": 1
          },
          "expiryDate": {
            "type": "string",
            "description": "Expiry Date if no longer active",
            "format": "date",
            "example": "2021-04-01"
          }
        },
        "description": "Offence"
      },
      "StatuteDto": {
        "required": [
          "activeFlag",
          "code",
          "description",
          "legislatingBodyCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Statute code",
            "example": "RR84"
          },
          "description": {
            "type": "string",
            "description": "Statute code description",
            "example": "Statute RV98"
          },
          "legislatingBodyCode": {
            "type": "string",
            "description": "Legislating Body Code",
            "example": "UK"
          },
          "activeFlag": {
            "type": "string",
            "description": "Active Y/N",
            "example": "Y"
          }
        },
        "description": "Statute",
        "example": "RR84"
      },
      "PrisonMoveCancellation": {
        "required": [
          "reasonCode"
        ],
        "type": "object",
        "properties": {
          "reasonCode": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The reason code for cancellation of the move.",
            "enum": [
              "ADMI",
              "OCI",
              "TRANS"
            ]
          }
        },
        "description": "The cancellation details."
      },
      "RequestMoveToCellSwap": {
        "type": "object",
        "properties": {
          "reasonCode": {
            "type": "string",
            "description": "The reason code for the move (from reason code domain CHG_HOUS_RSN) (defaults to ADM)",
            "example": "ADM"
          },
          "dateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date / time of the move (defaults to current)",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Request move offender to cell swap"
      },
      "OffenderBooking": {
        "required": [
          "age",
          "agencyId",
          "alertsCodes",
          "alertsDetails",
          "bookingId",
          "dateOfBirth",
          "firstName",
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Unique, numeric booking id.",
            "format": "int64",
            "example": 1234134
          },
          "bookingNo": {
            "type": "string",
            "description": "Booking number.",
            "example": "A12121"
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number).",
            "example": "A1234AA"
          },
          "firstName": {
            "type": "string",
            "description": "Offender first name.",
            "example": "JOHN"
          },
          "middleName": {
            "type": "string",
            "description": "Offender middle name.",
            "example": "ASHLEY"
          },
          "lastName": {
            "type": "string",
            "description": "Offender last name.",
            "example": "SMITH"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Offender date of birth.",
            "format": "date",
            "example": "1980-05-02"
          },
          "age": {
            "type": "integer",
            "description": "Offender's current age.",
            "format": "int32",
            "example": 32
          },
          "agencyId": {
            "type": "string",
            "description": "Identifier of agency that offender is associated with.",
            "example": "MDI"
          },
          "assignedLivingUnitId": {
            "type": "integer",
            "description": "Identifier of living unit (e.g. cell) that offender is assigned to.",
            "format": "int64",
            "example": 123123
          },
          "assignedLivingUnitDesc": {
            "type": "string",
            "description": "Description of living unit (e.g. cell) that offender is assigned to.",
            "example": "MDI-1-1-3"
          },
          "facialImageId": {
            "type": "integer",
            "description": "Identifier of facial image of offender.",
            "format": "int64",
            "example": 1241241
          },
          "assignedOfficerUserId": {
            "type": "string",
            "description": "Identifier of officer (key worker) to which offender is assigned.",
            "example": "354543"
          },
          "aliases": {
            "type": "array",
            "description": "List of offender's alias names.",
            "items": {
              "type": "string",
              "description": "List of offender's alias names."
            }
          },
          "categoryCode": {
            "type": "string",
            "description": "The Cat A/B/C/D of the offender",
            "example": "C",
            "enum": [
              "A",
              "B",
              "C",
              "D",
              "I",
              "J"
            ]
          },
          "convictedStatus": {
            "type": "string",
            "description": "Convicted Status",
            "example": "Convicted",
            "enum": [
              "Convicted",
              "Remand"
            ]
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "The imprisonment status of the offender",
            "example": "SENT"
          },
          "alertsCodes": {
            "type": "array",
            "description": "List of offender's current alert types.",
            "items": {
              "type": "string",
              "description": "List of offender's current alert types."
            }
          },
          "alertsDetails": {
            "type": "array",
            "description": "List of offender's current alert codes.",
            "items": {
              "type": "string",
              "description": "List of offender's current alert codes."
            }
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status",
            "example": "REMAND",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          }
        },
        "description": "Offender Booking Summary"
      },
      "CourtHearingDateAmendment": {
        "required": [
          "hearingDateTime"
        ],
        "type": "object",
        "properties": {
          "hearingDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time of the court hearing in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "The amendments for the scheduled court hearing."
      },
      "AddressDto": {
        "required": [
          "mail",
          "noFixedAddress",
          "primary"
        ],
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address Id",
            "format": "int64",
            "example": 543524
          },
          "addressType": {
            "type": "string",
            "description": "Address Type. Note: Reference domain is ADDR_TYPE",
            "example": "BUS"
          },
          "flat": {
            "type": "string",
            "description": "Flat",
            "example": "3B"
          },
          "premise": {
            "type": "string",
            "description": "Premise",
            "example": "Liverpool Prison"
          },
          "street": {
            "type": "string",
            "description": "Street",
            "example": "Slinn Street"
          },
          "locality": {
            "type": "string",
            "description": "Locality",
            "example": "Brincliffe"
          },
          "town": {
            "type": "string",
            "description": "Town/City. Note: Reference domain is CITY",
            "example": "Liverpool"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "example": "LI1 5TH"
          },
          "county": {
            "type": "string",
            "description": "County. Note: Reference domain is COUNTY",
            "example": "HEREFORD"
          },
          "country": {
            "type": "string",
            "description": "Country. Note: Reference domain is COUNTRY",
            "example": "ENG"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "This is a comment text"
          },
          "primary": {
            "type": "boolean",
            "description": "Primary Address",
            "example": false
          },
          "mail": {
            "type": "boolean",
            "description": "Mail Address",
            "example": false
          },
          "noFixedAddress": {
            "type": "boolean",
            "description": "No Fixed Address",
            "example": false
          },
          "startDate": {
            "type": "string",
            "description": "Date Added",
            "format": "date",
            "example": "2005-05-12"
          },
          "endDate": {
            "type": "string",
            "description": "Date ended",
            "format": "date",
            "example": "2021-02-12"
          },
          "phones": {
            "type": "array",
            "description": "The phone number associated with the address",
            "items": {
              "$ref": "#/components/schemas/Telephone"
            }
          },
          "addressUsages": {
            "type": "array",
            "description": "The address usages/types",
            "items": {
              "$ref": "#/components/schemas/AddressUsageDto"
            }
          }
        },
        "description": "An Address"
      },
      "AddressUsageDto": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "description": "Address ID of the associated address",
            "format": "int64",
            "example": 23422313
          },
          "addressUsage": {
            "type": "string",
            "description": "The address usages",
            "example": "HDC"
          },
          "addressUsageDescription": {
            "type": "string",
            "description": "The address usages description",
            "example": "HDC Address"
          },
          "activeFlag": {
            "type": "boolean",
            "description": "Active Flag",
            "example": true
          }
        },
        "description": "An Offender's address usage"
      },
      "Agency": {
        "required": [
          "active",
          "agencyId",
          "agencyType",
          "description"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency identifier.",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Agency description.",
            "example": "Moorland (HMP & YOI)"
          },
          "longDescription": {
            "type": "string",
            "description": "Long description of the agency",
            "example": "Moorland (HMP & YOI)"
          },
          "agencyType": {
            "type": "string",
            "description": "Agency type.  Reference domain is AGY_LOC_TYPE",
            "example": "INST",
            "enum": [
              "CRC",
              "POLSTN",
              "INST",
              "COMM",
              "APPR",
              "CRT",
              "POLICE",
              "IMDC",
              "TRN",
              "OUT",
              "YOT",
              "SCH",
              "STC",
              "HOST",
              "AIRPORT",
              "HSHOSP",
              "HOSPITAL",
              "PECS",
              "PAR",
              "PNP",
              "PSY"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the Agency is active",
            "example": true
          },
          "courtType": {
            "type": "string",
            "description": "Court Type.  Reference domain is JURISDICTION",
            "example": "CC",
            "enum": [
              "CACD",
              "CB",
              "CC",
              "CO",
              "DCM",
              "GCM",
              "IMM",
              "MC",
              "OTHER",
              "YC"
            ]
          },
          "deactivationDate": {
            "type": "string",
            "description": "Date agency became inactive",
            "format": "date",
            "example": "2012-01-12"
          },
          "addresses": {
            "type": "array",
            "description": "List of addresses associated with agency",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "phones": {
            "type": "array",
            "description": "List of phones associated with agency",
            "items": {
              "$ref": "#/components/schemas/Telephone"
            }
          },
          "emails": {
            "type": "array",
            "description": "List of emails associated with agency",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          }
        },
        "description": "Agency Details"
      },
      "CourtHearing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The court hearing identifier.",
            "format": "int64",
            "example": 123456789
          },
          "dateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and start time of the court hearing in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "$ref": "#/components/schemas/Agency"
          }
        },
        "description": "Represents a court hearing for an offender court case."
      },
      "Email": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email"
          }
        },
        "description": "An Email Address"
      },
      "Telephone": {
        "required": [
          "number",
          "type"
        ],
        "type": "object",
        "properties": {
          "phoneId": {
            "type": "integer",
            "description": "Phone Id",
            "format": "int64",
            "example": 2234232
          },
          "number": {
            "type": "string",
            "description": "Telephone number",
            "example": "0114 2345678"
          },
          "type": {
            "type": "string",
            "description": "Telephone type",
            "example": "TEL"
          },
          "ext": {
            "type": "string",
            "description": "Telephone extension number",
            "example": "123"
          }
        },
        "description": "Telephone Details"
      },
      "AlertChanges": {
        "type": "object",
        "properties": {
          "expiryDate": {
            "type": "string",
            "description": "Date the alert became inactive",
            "format": "date",
            "example": "2019-02-13"
          },
          "comment": {
            "type": "string",
            "description": "Alert comment"
          },
          "removeExpiryDate": {
            "type": "boolean",
            "description": "Remove expiry date"
          }
        },
        "description": "Alert details"
      },
      "UpdateAttendance": {
        "required": [
          "eventOutcome"
        ],
        "type": "object",
        "properties": {
          "eventOutcome": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Attendance outcome, possible values are the codes in the 'PS_PA_OC' reference domain.",
            "example": "ATT",
            "enum": [
              "ABS",
              "ACCAB",
              "ATT",
              "CANC",
              "NREQ",
              "SUS",
              "UNACAB",
              "REST"
            ]
          },
          "performance": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Possible values are the codes in the 'PERFORMANCE' reference domain, mandatory for eventOutcome 'ATT'.",
            "example": "ACCEPT",
            "enum": [
              "ACCEPT",
              "GOOD",
              "POOR",
              "STANDARD",
              "UNACCEPT"
            ]
          },
          "outcomeComment": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Free text comment, maximum length 240 characters.",
            "example": "Turned up very late"
          }
        },
        "description": "Attendance details.  This is used to update the attendance details of an offender"
      },
      "BookingActivity": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "activityId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "set of booking and activity ids"
      },
      "UpdateAttendanceBatch": {
        "required": [
          "bookingActivities",
          "eventOutcome"
        ],
        "type": "object",
        "properties": {
          "eventOutcome": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Attendance outcome, possible values are the codes in the 'PS_PA_OC' reference domain.",
            "example": "ATT",
            "enum": [
              "ABS",
              "ACCAB",
              "ATT",
              "CANC",
              "NREQ",
              "SUS",
              "UNACAB",
              "REST"
            ]
          },
          "performance": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Possible values are the codes in the 'PERFORMANCE' reference domain, mandatory for eventOutcome 'ATT'.",
            "example": "ACCEPT",
            "enum": [
              "ACCEPT",
              "GOOD",
              "POOR",
              "STANDARD",
              "UNACCEPT"
            ]
          },
          "outcomeComment": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Free text comment, maximum length 240 characters.",
            "example": "Turned up very late"
          },
          "bookingActivities": {
            "uniqueItems": true,
            "type": "array",
            "description": "set of booking and activity ids",
            "items": {
              "$ref": "#/components/schemas/BookingActivity"
            }
          }
        },
        "description": "Attendance details.  This is used to update the attendance details of multiple bookings"
      },
      "UpdateComment": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "commentOrNull": {
            "type": "string"
          }
        },
        "description": "The comment. May be empty or null"
      },
      "RequestToUpdateAgency": {
        "required": [
          "agencyType",
          "courtType",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Agency description.",
            "example": "Moorland (HMP & YOI)"
          },
          "longDescription": {
            "type": "string",
            "description": "Long description of the agency",
            "example": "Moorland (HMP & YOI)"
          },
          "agencyType": {
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Agency type.  Reference domain is AGY_LOC_TYPE",
            "example": "INST",
            "enum": [
              "CRC",
              "POLSTN",
              "INST",
              "COMM",
              "APPR",
              "CRT",
              "POLICE",
              "IMDC",
              "TRN",
              "OUT",
              "YOT",
              "SCH",
              "STC",
              "HOST",
              "AIRPORT",
              "HSHOSP",
              "HOSPITAL",
              "PECS",
              "PAR",
              "PNP",
              "PSY"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the Agency is active.  Note: if set false, the current date will be the deactivation date",
            "example": true
          },
          "courtType": {
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Court Type.  Reference domain is JURISDICTION",
            "example": "CC",
            "enum": [
              "CACD",
              "CB",
              "CC",
              "CO",
              "DCM",
              "GCM",
              "IMM",
              "MC",
              "OTHER",
              "YC"
            ]
          }
        },
        "description": "Update Agency Request"
      },
      "RequestToUpdateAddress": {
        "required": [
          "addressType",
          "noFixedAddress",
          "premise",
          "primary"
        ],
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "description": "Address Type. Note: Reference domain is ADDR_TYPE",
            "example": "BUS"
          },
          "flat": {
            "type": "string",
            "description": "Flat",
            "example": "3B"
          },
          "premise": {
            "type": "string",
            "description": "Premise",
            "example": "Liverpool Prison"
          },
          "street": {
            "type": "string",
            "description": "Street",
            "example": "Slinn Street"
          },
          "locality": {
            "type": "string",
            "description": "Locality",
            "example": "Brincliffe"
          },
          "town": {
            "type": "string",
            "description": "Town/City. Note: Reference domain is CITY",
            "example": "Liverpool"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "example": "LI1 5TH"
          },
          "county": {
            "type": "string",
            "description": "County. Note: Reference domain is COUNTY",
            "example": "HEREFORD"
          },
          "country": {
            "type": "string",
            "description": "Country. Note: Reference domain is COUNTRY",
            "example": "ENG"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "This is a comment text"
          },
          "primary": {
            "type": "boolean",
            "description": "Primary Address",
            "example": false
          },
          "noFixedAddress": {
            "type": "boolean",
            "description": "No Fixed Address",
            "example": false
          },
          "startDate": {
            "type": "string",
            "description": "Date Added",
            "format": "date",
            "example": "2005-05-12"
          },
          "endDate": {
            "type": "string",
            "description": "Date ended",
            "format": "date",
            "example": "2021-02-12"
          }
        },
        "description": "Update Address Request"
      },
      "RequestToUpdatePhone": {
        "required": [
          "number",
          "type"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Telephone number"
          },
          "type": {
            "type": "string",
            "description": "Telephone type"
          },
          "ext": {
            "type": "string",
            "description": "Telephone extension number"
          }
        },
        "description": "Update Phone Request"
      },
      "CreateTransaction": {
        "required": [
          "amount",
          "client_transaction_id",
          "client_unique_ref",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Valid transaction type for the prison_id",
            "example": "CANT",
            "enum": [
              "CANT,REFND,PHONE,MRPR,MTDS,DTDS,CASHD,RELA,RELS"
            ]
          },
          "description": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Description of the Transaction",
            "example": "Canteen Purchase of £16.34"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of transaction in pence, hence 1634 is £16.34",
            "format": "int64",
            "example": 1634
          },
          "client_transaction_id": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Client Transaction Id",
            "example": "CL123212"
          },
          "client_unique_ref": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "[a-zA-Z0-9-_]+",
            "type": "string",
            "description": "A reference unique to the client making the post. Maximum size 64 characters, only alphabetic, numeric, '-' and '_' are allowed",
            "example": "CLIENT121131-0_11"
          }
        },
        "description": "Transaction Details"
      },
      "Transaction": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of created transaction",
            "example": "6179604-1"
          }
        },
        "description": "Transaction Response"
      },
      "StorePaymentRequest": {
        "required": [
          "amount",
          "client_transaction_id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Valid payment type for the prison",
            "example": "ADJ",
            "enum": [
              "A_EARN,ADJ"
            ]
          },
          "description": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Description of the payment",
            "example": "Adjustment"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of the payment in pence, hence 1634 is £16.34",
            "format": "int64",
            "example": 1634
          },
          "client_transaction_id": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Client transaction identifier",
            "example": "CL123212"
          }
        },
        "description": "Transaction Details"
      },
      "PaymentResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message returned from a payment",
            "example": "Payment accepted"
          }
        },
        "description": "Payment Response"
      },
      "CodeDescription": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code"
          },
          "desc": {
            "type": "string",
            "description": "Description"
          }
        },
        "description": "Code Description"
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          },
          "current_location": {
            "$ref": "#/components/schemas/CodeDescription"
          }
        },
        "description": "Transfer Response"
      },
      "UserDetail": {
        "required": [
          "accountStatus",
          "active",
          "firstName",
          "lastName",
          "lockDate",
          "staffId",
          "username"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "description": "Staff Id",
            "format": "int64",
            "example": 231232
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "DEMO_USER1"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "thumbnailId": {
            "type": "integer",
            "description": "Image Thumbnail Id",
            "format": "int64",
            "example": 2342341224
          },
          "activeCaseLoadId": {
            "type": "string",
            "description": "Current Active Caseload",
            "example": "MDI"
          },
          "accountStatus": {
            "type": "string",
            "description": "Status of the User Account",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACT",
              "SUS",
              "CAREER",
              "MAT",
              "SAB",
              "SICK"
            ]
          },
          "lockDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date the user account was locked",
            "example": "2021-07-05T10:35:17"
          },
          "expiryDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date the user account has expired",
            "example": "2021-07-05T10:35:17"
          },
          "lockedFlag": {
            "type": "boolean",
            "description": "The User account is locked",
            "example": false
          },
          "expiredFlag": {
            "type": "boolean",
            "description": "Indicates the user account has expired",
            "example": true
          },
          "active": {
            "type": "boolean",
            "description": "Indicate if the account is active",
            "example": true
          }
        },
        "description": "User Details"
      },
      "UpdatePrisonerDetails": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Smith"
          }
        }
      },
      "PrisonDetails": {
        "required": [
          "prison",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "type": "string",
            "description": "ID of prison",
            "example": "MDI"
          },
          "prison": {
            "type": "string",
            "description": "Name of prison",
            "example": "Moorland (HMP)"
          }
        },
        "description": "Prison details"
      },
      "PrisonerSchedule": {
        "required": [
          "cellLocation",
          "comment",
          "event",
          "eventDescription",
          "eventLocation",
          "eventStatus",
          "eventType",
          "firstName",
          "lastName",
          "locationId",
          "offenderNo",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number)"
          },
          "eventId": {
            "type": "integer",
            "description": "Activity id if any. Used to attend or pay the event",
            "format": "int64"
          },
          "bookingId": {
            "type": "integer",
            "description": "Booking id for offender",
            "format": "int64"
          },
          "locationId": {
            "type": "integer",
            "description": "The number which (uniquely) identifies the internal location associated with the Scheduled Event (Prisoner Schedule)",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "description": "Offender first name"
          },
          "lastName": {
            "type": "string",
            "description": "Offender last name"
          },
          "cellLocation": {
            "type": "string",
            "description": "Offender cell"
          },
          "event": {
            "type": "string",
            "description": "Event code"
          },
          "eventType": {
            "type": "string",
            "description": "Event type, e.g. VISIT, APP, PRISON_ACT"
          },
          "eventDescription": {
            "type": "string",
            "description": "Description of event code"
          },
          "eventLocation": {
            "type": "string",
            "description": "Location of the event"
          },
          "eventLocationId": {
            "type": "integer",
            "description": "Id of an internal event location",
            "format": "int64"
          },
          "eventStatus": {
            "type": "string",
            "description": "The event's status. Includes 'CANC', meaning cancelled for 'VISIT'"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "Comment"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event starts",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event ends",
            "example": "2021-07-05T10:35:17"
          },
          "eventOutcome": {
            "type": "string",
            "description": "Attendance, possible values are the codes in the 'PS_PA_OC' reference domain"
          },
          "performance": {
            "type": "string",
            "description": "Possible values are the codes in the 'PERFORMANCE' reference domain"
          },
          "outcomeComment": {
            "type": "string",
            "description": "No-pay reason"
          },
          "paid": {
            "type": "boolean",
            "description": "Activity paid flag"
          },
          "payRate": {
            "type": "number",
            "description": "Amount paid per activity session in pounds"
          },
          "excluded": {
            "type": "boolean",
            "description": "Activity excluded flag"
          },
          "timeSlot": {
            "type": "string",
            "description": "Activity time slot",
            "enum": [
              "AM",
              "PM",
              "ED"
            ]
          },
          "locationCode": {
            "type": "string",
            "description": "The code for the activity location"
          },
          "suspended": {
            "type": "boolean",
            "description": "Event scheduled has been suspended"
          }
        },
        "description": "Prisoner Schedule"
      },
      "PrisonerActivitiesCount": {
        "required": [
          "notRecorded",
          "suspended",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "suspended": {
            "type": "integer",
            "format": "int64"
          },
          "notRecorded": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PrisonerDetailSearchCriteria": {
        "type": "object",
        "properties": {
          "offenderNos": {
            "type": "array",
            "description": "List of offender Numbers (NOMS ID)",
            "items": {
              "type": "string",
              "description": "List of offender Numbers (NOMS ID)"
            }
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the offender.",
            "example": "John"
          },
          "gender": {
            "type": "string",
            "description": "Offender's gender code (F - Female, M - Male, NK - Not Known or NS - Not Specified).",
            "example": "F",
            "enum": [
              "M",
              "F",
              "NK",
              "NS",
              "ALL"
            ]
          },
          "middleNames": {
            "type": "string",
            "description": "The middle name(s) of the offender.",
            "example": "James"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the offender.",
            "example": "Smith"
          },
          "location": {
            "type": "string",
            "description": "Offender's location filter (IN, OUT or ALL) - defaults to ALL.",
            "example": "ALL",
            "enum": [
              "IN",
              "OUT",
              "ALL"
            ]
          },
          "pncNumber": {
            "type": "string",
            "description": "The offender's PNC (Police National Computer) number.",
            "example": "123/1231"
          },
          "croNumber": {
            "type": "string",
            "description": "The offender's CRO (Criminal Records Office) number.",
            "example": "12312312"
          },
          "dob": {
            "type": "string",
            "description": "The offender's date of birth. Cannot be used in conjunction with <i>dobFrom</i> or <i>dobTo</i>. Must be specified using YYYY-MM-DD format.",
            "format": "date",
            "example": "2001-01-15"
          },
          "dobFrom": {
            "type": "string",
            "description": "Start date for offender date of birth search. If <i>dobTo</i> is not specified, an implicit <i>dobTo</i> value of <i>dobFrom</i> + 10 years will be applied. If <i>dobTo</i> is specified, it will be adjusted, if necessary, to ensure it is not more than 10 years after <i>dobFrom</i>. Cannot be used in conjunction with <i>dob</i>. Must be specified using YYYY-MM-DD format.",
            "format": "date",
            "example": "1999-05-25"
          },
          "dobTo": {
            "type": "string",
            "description": "End date for offender date of birth search. If <i>dobFrom</i> is not specified, an implicit <i>dobFrom</i> value of <i>dobTo</i> - 10 years will be applied. Cannot be used in conjunction with <i>dob</i>. Must be specified using YYYY-MM-DD format.",
            "format": "date",
            "example": "2005-12-31"
          },
          "maxYearsRange": {
            "maximum": 10,
            "type": "integer",
            "description": "Max Date Range, applied to <i>dobFrom</i> or <i>dobTo</i>, default is 10, max allowed is 10",
            "format": "int32",
            "example": 10
          },
          "includeAliases": {
            "type": "boolean",
            "description": "If true the result set should include a row for every matched alias.  If the request includes some combination of firstName, lastName and dateOfBirth then this will be a subset of the OFFENDERS records for one or more offenders. Otherwise it will be every OFFENDERS record for each match on the other search criteria. Default is false."
          },
          "partialNameMatch": {
            "type": "boolean",
            "description": "If <i>true</i>, the search will use partial, start-of-name matching of offender names (where provided). For example, if <i>lastName</i> criteria of 'AD' is specified, this will match an offender whose last name is 'ADAMS' but not an offender whose last name is 'HADAD'. This will typically increase the number of matching offenders found. This parameter can be used with any other search processing parameter (e.g. <i>prioritisedMatch</i> or <i>anyMatch</i>).",
            "example": false
          },
          "anyMatch": {
            "type": "boolean",
            "description": "If <i>true</i>, offenders that match any of the specified criteria will be returned. The default search behaviour is to only return offenders that match <i>all</i> of the specified criteria. If the <i>prioritisedMatch</i> parameter is also set <i>true</i>, this parameter will only impact the behaviour of searching using offender name and date of birth criteria.",
            "example": false
          },
          "prioritisedMatch": {
            "type": "boolean",
            "description": "If <i>true</i>, search criteria prioritisation is used and searching/matching will stop as soon as one or more matching offenders are found. The criteria priority is:<br/><br/>1. <i>offenderNo</i><br/> 2. <i>pncNumber</i><br/>3. <i>croNumber</i><br/>4. <i>firstName</i>, <i>lastName</i>, <i>dob</i> <br/>5. <i>dobFrom</i>, <i>dobTo</i><br/><br/>As an example of how this works, if this parameter is set <i>true</i> and an <i>offenderNo</i> is specified and an offender having this offender number is found, searching will stop and that offender will be returned immediately. If no offender matching the specified <i>offenderNo</i> is found, the search will be repeated using the next priority criteria (<i>pncNumber</i>) and so on. Note that offender name and date of birth criteria have the same priority and will be used together to search for matching offenders.",
            "example": false
          }
        },
        "description": "Prisoner Search Criteria"
      },
      "PrisonerDetail": {
        "required": [
          "currentWorkingBirthDate",
          "currentWorkingFirstName",
          "currentWorkingLastName",
          "currentlyInPrison",
          "dateOfBirth",
          "firstName",
          "gender",
          "lastName",
          "offenderNo",
          "sexCode"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "The prisoner's unique offender number (aka NOMS Number in the UK).",
            "example": "A0000AA"
          },
          "title": {
            "type": "string",
            "description": "The prisoner's title.",
            "example": "Earl"
          },
          "suffix": {
            "type": "string",
            "description": "The prisoner's name suffix.",
            "example": "Mac"
          },
          "firstName": {
            "type": "string",
            "description": "The prisoner's first name.",
            "example": "Thorfinn"
          },
          "middleNames": {
            "type": "string",
            "description": "The prisoner's middle name(s).",
            "example": "Skull-splitter"
          },
          "lastName": {
            "type": "string",
            "description": "The prisoner's last name.",
            "example": "Torf-Einarsson"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The prisoner's date of birth (in YYYY-MM-DD format).",
            "format": "date",
            "example": "1960-02-29"
          },
          "gender": {
            "type": "string",
            "description": "The prisoner's gender.",
            "example": "Female"
          },
          "sexCode": {
            "type": "string",
            "description": "The prisoner's gender code.",
            "example": "F"
          },
          "nationalities": {
            "type": "string",
            "description": "The prisoner's nationality.",
            "example": "Scottish"
          },
          "currentlyInPrison": {
            "type": "string",
            "description": "Flag (Y or N) to indicate if prisoner is currently in prison.",
            "example": "N"
          },
          "latestBookingId": {
            "type": "integer",
            "description": "ID of prisoner's latest booking.",
            "format": "int64",
            "example": 1
          },
          "latestLocationId": {
            "type": "string",
            "description": "Latest location ID of a prisoner (if in prison).",
            "example": "WRI"
          },
          "latestLocation": {
            "type": "string",
            "description": "Name of the prison where the prisoner resides (if in prison).",
            "example": "Whitemoor (HMP)"
          },
          "internalLocation": {
            "type": "string",
            "description": "Name of the location where the prisoner resides (if in prison)",
            "example": "WRI-B-3-018"
          },
          "pncNumber": {
            "type": "string",
            "description": "The prisoner's PNC (Police National Computer) number.",
            "example": "01/000000A"
          },
          "croNumber": {
            "type": "string",
            "description": "The prisoner's CRO (Criminal Records Office) number.",
            "example": "01/0001/01A"
          },
          "ethnicity": {
            "type": "string",
            "description": "The prisoner's ethnicity.",
            "example": "White: British"
          },
          "ethnicityCode": {
            "type": "string",
            "description": "The prisoner's ethnicity code.",
            "example": "W1"
          },
          "birthCountry": {
            "type": "string",
            "description": "The prisoner's country of birth.",
            "example": "Norway"
          },
          "religion": {
            "type": "string",
            "description": "The prisoner's religion.",
            "example": "Pagan"
          },
          "religionCode": {
            "type": "string",
            "description": "The prisoner's religion code.",
            "example": "PAG"
          },
          "convictedStatus": {
            "type": "string",
            "description": "Status code of prisoner's latest conviction.",
            "example": "Convicted",
            "enum": [
              "Convicted",
              "Remand"
            ]
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status",
            "example": "REMAND",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "The prisoner's imprisonment status.",
            "example": "LIFE"
          },
          "imprisonmentStatusDesc": {
            "type": "string",
            "description": "The prisoner's imprisonment status description.",
            "example": "Service Life Imprisonment"
          },
          "receptionDate": {
            "type": "string",
            "description": "Date prisoner was received into the prison.",
            "format": "date",
            "example": "1980-01-01"
          },
          "maritalStatus": {
            "type": "string",
            "description": "The prisoner's marital status.",
            "example": "Single"
          },
          "currentWorkingFirstName": {
            "type": "string",
            "description": "The prisoner's current working first name.",
            "example": "Thorfinn"
          },
          "currentWorkingLastName": {
            "type": "string",
            "description": "The prisoner's current working last name.",
            "example": "Torf-Einarsson"
          },
          "currentWorkingBirthDate": {
            "type": "string",
            "description": "The prisoner's current working date of birth (in YYYY-MM-DD format).",
            "format": "date",
            "example": "1960-02-29"
          }
        },
        "description": "Prisoner Details"
      },
      "RequestForNewBooking": {
        "required": [
          "bookingInTime",
          "movementReasonCode",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "type": "string",
            "description": "Received Prison ID",
            "example": "MDI"
          },
          "bookingInTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The time the booking in occurred, if not supplied it will be the current time",
            "example": "2021-07-05T10:35:17"
          },
          "fromLocationId": {
            "type": "string",
            "description": "Where the prisoner has moved from (default OUT)",
            "example": "SHEFCC"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "Reason for in movement (e.g. Unconvicted Remand)",
            "example": "N"
          },
          "youthOffender": {
            "type": "boolean",
            "description": "Is this offender a youth",
            "example": false
          },
          "cellLocation": {
            "type": "string",
            "description": "Cell location where recalled prisoner should be housed, default will be reception",
            "example": "MDI-RECP"
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "Require imprisonment status (e.g Adult Imprisonment Without Option CJA03)",
            "example": "SENT03"
          }
        },
        "description": "Represents the data required receiving a prisoner under a new booking"
      },
      "RequestToCreate": {
        "required": [
          "dateOfBirth",
          "firstName",
          "gender",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "pncNumber": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^^([0-9]{2}|[0-9]{4})/[0-9]+[a-zA-Z]$",
            "type": "string",
            "description": "The offender's PNC (Police National Computer) number.",
            "example": "03/11999M"
          },
          "lastName": {
            "maxLength": 35,
            "minLength": 0,
            "pattern": "^[A-Z|a-z ,.'-]+$",
            "type": "string",
            "description": "The offender's last name.",
            "example": "Mark"
          },
          "firstName": {
            "maxLength": 35,
            "minLength": 0,
            "pattern": "^[A-Z|a-z ,.'-]+$",
            "type": "string",
            "description": "The offender's first name.",
            "example": "John"
          },
          "middleName1": {
            "maxLength": 35,
            "minLength": 0,
            "pattern": "^[A-Z|a-z ,.'-]+$",
            "type": "string",
            "description": "The offender's middle name.",
            "example": "Luke"
          },
          "middleName2": {
            "maxLength": 35,
            "minLength": 0,
            "pattern": "^[A-Z|a-z ,.'-]+$",
            "type": "string",
            "description": "An additional middle name for the offender.",
            "example": "Matthew"
          },
          "title": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "A code representing the offender's title (from TITLE reference domain).",
            "example": "MR",
            "enum": [
              "BR",
              "DAME",
              "DR",
              "FR",
              "IMAM",
              "LADY",
              "LORD",
              "MISS",
              "MR",
              "MRS",
              "MS",
              "RABBI",
              "REV",
              "SIR",
              "SR"
            ]
          },
          "suffix": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "A code representing a suffix to apply to offender's name (from SUFFIX reference domain).",
            "example": "JR",
            "enum": [
              "I",
              "II",
              "III",
              "IV",
              "IX",
              "V",
              "VI",
              "VII",
              "VIII",
              "JR",
              "SR"
            ]
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The offender's date of birth. Must be specified in YYYY-MM-DD format. Range allowed is 16-110 years",
            "format": "date",
            "example": "1970-01-01"
          },
          "gender": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "A code representing the offender's gender (from the SEX reference domain).",
            "example": "M",
            "enum": [
              "M",
              "F",
              "NK",
              "NS",
              "REF"
            ]
          },
          "ethnicity": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "A code representing the offender's ethnicity (from the ETHNICITY reference domain).",
            "example": "W1",
            "enum": [
              "A9",
              "B1",
              "B2",
              "B9",
              "M1",
              "M2",
              "M3",
              "M9",
              "NS",
              "O1",
              "O2",
              "O9",
              "W1",
              "W2",
              "W3",
              "W8",
              "W9"
            ]
          },
          "croNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "The offender's CRO (Criminal Records Office) number."
          },
          "booking": {
            "$ref": "#/components/schemas/RequestForNewBooking"
          }
        },
        "description": "Represents the data required for creating a new prisoner"
      },
      "OffenderAdjudicationHearing": {
        "required": [
          "agencyId",
          "hearingId",
          "internalLocationId",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string"
          },
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number (UK is NOMS ID)"
          },
          "hearingId": {
            "type": "integer",
            "description": "OIC Hearing ID",
            "format": "int64",
            "example": 1985937
          },
          "hearingType": {
            "type": "string",
            "description": "Hearing Type",
            "example": "Governor's Hearing Adult"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Hearing Time",
            "example": "2021-07-05T10:35:17"
          },
          "internalLocationId": {
            "type": "integer",
            "description": "The internal location id of the hearing",
            "format": "int64",
            "example": 789448
          },
          "internalLocationDescription": {
            "type": "string",
            "description": "The internal location description of the hearing",
            "example": "PVI-RES-MCASU-ADJUD"
          },
          "eventStatus": {
            "type": "string",
            "description": "The status of the hearing, SCH, COMP or EXP",
            "example": "COMP"
          }
        },
        "description": "Represents an adjudication hearing at the offender level."
      },
      "OffenderSentenceDetail": {
        "required": [
          "agencyLocationDesc",
          "agencyLocationId",
          "bookingId",
          "dateOfBirth",
          "firstName",
          "internalLocationDesc",
          "lastName",
          "mostRecentActiveBooking",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id.",
            "format": "int64",
            "example": 12341321
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference",
            "example": "A1000AA"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "agencyLocationId": {
            "type": "string",
            "description": "Agency Id",
            "example": "LEI"
          },
          "mostRecentActiveBooking": {
            "type": "boolean",
            "description": "Is this the most recent active booking",
            "example": true
          },
          "sentenceDetail": {
            "$ref": "#/components/schemas/SentenceCalcDates"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Offender date of birth.",
            "format": "date"
          },
          "agencyLocationDesc": {
            "type": "string",
            "description": "Agency Description"
          },
          "internalLocationDesc": {
            "type": "string",
            "description": "Description of the location within the prison"
          },
          "facialImageId": {
            "type": "integer",
            "description": "Identifier of facial image of offender.",
            "format": "int64"
          }
        },
        "description": "Offender Sentence Detail"
      },
      "HomeDetentionCurfew": {
        "required": [
          "approvalStatusDate"
        ],
        "type": "object",
        "properties": {
          "passed": {
            "type": "boolean",
            "description": "HDC Checks passed flag",
            "example": true
          },
          "checksPassedDate": {
            "type": "string",
            "description": "HDC Checks passed date. ISO-8601 format. YYYY-MM-DD",
            "format": "date",
            "example": "2018-12-31"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Approval status. Will be one of the 'HDC_APPROVE' reference codes",
            "example": "APPROVED"
          },
          "refusedReason": {
            "type": "string",
            "description": "Refused reason. Will be one of the 'HDC_REJ_RSN' reference codes",
            "example": "UNDER_14DAYS"
          },
          "approvalStatusDate": {
            "type": "string",
            "description": "Approval status date. ISO-8601 format. YYYY-MM-DD",
            "format": "date",
            "example": "2018-12-31"
          },
          "bookingId": {
            "type": "integer",
            "description": "Offender booking ID",
            "format": "int64",
            "example": 123
          }
        },
        "description": "Home Detention Curfew information"
      },
      "OffenderKeyDates": {
        "required": [
          "effectiveSentenceEndDate",
          "sentenceLength"
        ],
        "type": "object",
        "properties": {
          "homeDetentionCurfewEligibilityDate": {
            "type": "string",
            "description": "HDCED - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyTermDate": {
            "type": "string",
            "description": "ETD - early term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "midTermDate": {
            "type": "string",
            "description": "MTD - mid term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "lateTermDate": {
            "type": "string",
            "description": "LTD - late term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "dtoPostRecallReleaseDate": {
            "type": "string",
            "description": "DPRRD - Detention training order post recall release date",
            "format": "date",
            "example": "2020-02-03"
          },
          "automaticReleaseDate": {
            "type": "string",
            "description": "ARD - calculated automatic (unconditional) release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "conditionalReleaseDate": {
            "type": "string",
            "description": "CRD - calculated conditional release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityDate": {
            "type": "string",
            "description": "PED - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonParoleDate": {
            "type": "string",
            "description": "NPD - calculated non-parole date for offender (relating to the 1991 act).",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryDate": {
            "type": "string",
            "description": "LED - date on which offender licence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "postRecallReleaseDate": {
            "type": "string",
            "description": "PRRD - calculated post-recall release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "sentenceExpiryDate": {
            "type": "string",
            "description": "SED - date on which sentence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryDate": {
            "type": "string",
            "description": "TUSED - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "ERSED - Early Removal Scheme Eligibility Date",
            "format": "date",
            "example": "2020-02-03"
          },
          "effectiveSentenceEndDate": {
            "type": "string",
            "description": "Effective sentence end date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "sentenceLength": {
            "type": "string",
            "description": "Sentence length in the format 00 years/00 months/00 days.",
            "example": "11/00/00"
          },
          "homeDetentionCurfewApprovedDate": {
            "type": "string",
            "description": "HDCAD - Home Detention Curfew Approved date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffDate": {
            "type": "string",
            "description": "Tarrif - Tarrif date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffExpiredRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "Tarrif Expiry date",
            "format": "date",
            "example": "2020-02-03"
          },
          "approvedParoleDate": {
            "type": "string",
            "description": "APD - Approved Parole date",
            "format": "date",
            "example": "2020-02-03"
          },
          "releaseOnTemporaryLicenceDate": {
            "type": "string",
            "description": "ROTL = Release on temporary licence date",
            "format": "date",
            "example": "2020-02-03"
          }
        },
        "description": "Offender Key Dates"
      },
      "RequestToUpdateOffenderDates": {
        "required": [
          "calculationUuid",
          "keyDates",
          "submissionUser"
        ],
        "type": "object",
        "properties": {
          "calculationUuid": {
            "type": "string",
            "description": "UUID of the calculation performed by CRD.",
            "format": "uuid"
          },
          "calculationDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Timestamp when the calculation was performed",
            "example": "2021-07-05T10:35:17"
          },
          "submissionUser": {
            "type": "string",
            "description": "DPS/NOMIS user who submitted the calculated dates."
          },
          "keyDates": {
            "$ref": "#/components/schemas/OffenderKeyDates"
          },
          "comment": {
            "type": "string",
            "description": "Comment to be associated with the sentence calculation, if not set a default comment is used"
          },
          "reason": {
            "type": "string",
            "description": "The reason the sentence calculation was performed, if not set the default reason is used"
          },
          "noDates": {
            "type": "boolean",
            "description": "Is true, when there are no dates to be recorded in NOMIS"
          }
        },
        "description": "Update Offender Dates Request"
      },
      "OffenderCategorise": {
        "required": [
          "bookingId",
          "firstName",
          "lastName",
          "offenderNo",
          "status"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number"
          },
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "description": "Prisoner First Name"
          },
          "lastName": {
            "type": "string",
            "description": "Prisoner Last Name"
          },
          "assessmentDate": {
            "type": "string",
            "description": "Categorisation date if any",
            "format": "date"
          },
          "approvalDate": {
            "type": "string",
            "description": "Date categorisation was approved if any",
            "format": "date"
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number within booking",
            "format": "int32"
          },
          "assessmentTypeId": {
            "type": "integer",
            "description": "assessment type",
            "format": "int64"
          },
          "assessStatus": {
            "type": "string",
            "description": "Categorisation status",
            "enum": [
              "P",
              "A",
              "I"
            ]
          },
          "categoriserFirstName": {
            "type": "string",
            "description": "Categoriser First Name"
          },
          "categoriserLastName": {
            "type": "string",
            "description": "Categoriser Last Name"
          },
          "approverFirstName": {
            "type": "string",
            "description": "Approver First Name if any"
          },
          "approverLastName": {
            "type": "string",
            "description": "Approver Last Name if any"
          },
          "category": {
            "type": "string",
            "description": "Categorisation"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Next Review Date - for recategorisations",
            "format": "date"
          },
          "status": {
            "type": "string",
            "description": "Where in the categorisation workflow the prisoner is",
            "enum": [
              "UNCATEGORISED",
              "AWAITING_APPROVAL"
            ]
          }
        },
        "description": "Prisoner with categorisation data"
      },
      "CategorisationDetail": {
        "required": [
          "bookingId",
          "category",
          "committee",
          "placementAgencyId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64"
          },
          "category": {
            "type": "string",
            "description": "Category code"
          },
          "committee": {
            "type": "string",
            "description": "The assessment committee code (reference code in domain 'ASSESS_COMM')"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Next review date for recategorisation, defaults to current date + 6 months, if not provided",
            "format": "date"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "Initial categorisation comment"
          },
          "placementAgencyId": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The prison to be transferred to"
          }
        },
        "description": "Categorisation details"
      },
      "OffenceToScheduleMappingDto": {
        "required": [
          "offenceCode",
          "schedule"
        ],
        "type": "object",
        "properties": {
          "offenceCode": {
            "type": "string",
            "description": "Offence code",
            "example": "COML025"
          },
          "schedule": {
            "type": "string",
            "description": "Schedule type",
            "example": "SCHEDULE_15",
            "enum": [
              "SCHEDULE_13",
              "SCHEDULE_15",
              "SCHEDULE_15_ATTRACTS_LIFE",
              "SCHEDULE_17A_PART_1",
              "SCHEDULE_17A_PART_2",
              "SCHEDULE_19ZA",
              "PCSC_SDS",
              "PCSC_SDS_PLUS",
              "PCSC_SEC_250"
            ]
          }
        },
        "description": "Maps an offence to a schedule"
      },
      "CreateExternalMovement": {
        "required": [
          "bookingId",
          "directionCode",
          "fromAgencyId",
          "movementReason",
          "movementTime",
          "movementType",
          "toAgencyId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking id",
            "format": "int64",
            "example": 1
          },
          "fromAgencyId": {
            "type": "string",
            "description": "Agency location moving from",
            "example": "MDI"
          },
          "toAgencyId": {
            "type": "string",
            "description": "Agency location moving to",
            "example": "OUT"
          },
          "movementTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date time of movement",
            "example": "2021-07-05T10:35:17"
          },
          "movementType": {
            "type": "string",
            "description": "Type of movement",
            "example": "TRN"
          },
          "movementReason": {
            "type": "string",
            "description": "Movement reason",
            "example": "SEC"
          },
          "directionCode": {
            "type": "string",
            "description": "Direction code",
            "example": "OUT",
            "enum": [
              "IN",
              "OUT"
            ]
          }
        },
        "description": "Create external movement"
      },
      "OffenderMovement": {
        "required": [
          "bookingId",
          "dateOfBirth",
          "directionCode",
          "firstName",
          "fromAgency",
          "fromAgencyDescription",
          "lastName",
          "movementDate",
          "movementReason",
          "movementReasonDescription",
          "movementTime",
          "movementType",
          "movementTypeDescription",
          "offenderNo",
          "toAgency",
          "toAgencyDescription"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number (UK is NOMS ID)"
          },
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fromAgency": {
            "type": "string",
            "description": "Agency travelling from"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "Description for Agency travelling from"
          },
          "toAgency": {
            "type": "string",
            "description": "Agency travelling to"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "Description for Agency travelling to"
          },
          "movementType": {
            "type": "string",
            "description": "ADM (admission), CRT (court), REL (release), TAP (temporary absence) or TRN (transfer)",
            "example": "ADM",
            "enum": [
              "ADM",
              "CRT",
              "REL",
              "TAP",
              "TRN"
            ]
          },
          "movementTypeDescription": {
            "type": "string",
            "description": "Description of the movement type"
          },
          "movementReason": {
            "type": "string",
            "description": "Reason code for the movement"
          },
          "movementReasonDescription": {
            "type": "string",
            "description": "Description of the movement reason"
          },
          "directionCode": {
            "type": "string",
            "description": "IN or OUT"
          },
          "movementTime": {
            "type": "string",
            "description": "Movement time",
            "format": "partial-time"
          },
          "movementDate": {
            "type": "string",
            "description": "Movement date",
            "format": "date"
          }
        },
        "description": "Prisoner Movement"
      },
      "Movement": {
        "required": [
          "createDateTime",
          "directionCode",
          "movementDate",
          "movementReason",
          "movementReasonCode",
          "movementTime",
          "movementType",
          "movementTypeDescription",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number (UK is NOMS ID)"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Timestamp when the external movement record was created",
            "example": "2021-07-05T10:35:17"
          },
          "fromAgency": {
            "type": "string",
            "description": "Agency travelling from"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "Description of the agency travelling from"
          },
          "toAgency": {
            "type": "string",
            "description": "Agency travelling to"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "Description of the agency travelling to"
          },
          "fromCity": {
            "type": "string",
            "description": "City offender was received from"
          },
          "toCity": {
            "type": "string",
            "description": "City offender was sent to"
          },
          "movementType": {
            "type": "string",
            "description": "ADM (admission), CRT (court), REL (release), TAP (temporary absence) or TRN (transfer)",
            "example": "ADM",
            "enum": [
              "ADM",
              "CRT",
              "REL",
              "TAP",
              "TRN"
            ]
          },
          "movementTypeDescription": {
            "type": "string",
            "description": "Description of the movement type"
          },
          "directionCode": {
            "type": "string",
            "description": "IN or OUT"
          },
          "movementDate": {
            "type": "string",
            "description": "Movement date",
            "format": "date"
          },
          "movementTime": {
            "type": "string",
            "description": "Movement time",
            "format": "partial-time"
          },
          "movementReason": {
            "type": "string",
            "description": "Description of movement reason"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "Code of movement reason"
          },
          "commentText": {
            "type": "string",
            "description": "Comment"
          }
        },
        "description": "Prisoner Custody Status"
      },
      "KeyWorkerAllocationDetail": {
        "required": [
          "agencyId",
          "assigned",
          "bookingId",
          "firstName",
          "internalLocationDesc",
          "lastName",
          "offenderNo",
          "staffId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender Booking Id",
            "format": "int64"
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "middleNames": {
            "type": "string",
            "description": "Middle Name(s)"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "staffId": {
            "type": "integer",
            "description": "The key worker's Staff Id",
            "format": "int64"
          },
          "agencyId": {
            "type": "string",
            "description": "Agency Id"
          },
          "assigned": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time of the allocation",
            "example": "2021-07-05T10:35:17"
          },
          "internalLocationDesc": {
            "type": "string",
            "description": "Description of the location within the prison"
          }
        },
        "description": "Key worker allocation details"
      },
      "OffenderKeyWorker": {
        "required": [
          "active",
          "agencyId",
          "assigned",
          "created",
          "createdBy",
          "offenderNo",
          "staffId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference"
          },
          "staffId": {
            "type": "integer",
            "description": "The key worker's Staff Id",
            "format": "int64"
          },
          "agencyId": {
            "type": "string",
            "description": "Agency Id"
          },
          "assigned": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time allocation was assigned",
            "example": "2021-07-05T10:35:17"
          },
          "expired": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time allocation expired",
            "example": "2021-07-05T10:35:17"
          },
          "userId": {
            "type": "string",
            "description": "Username of user who processed allocation"
          },
          "active": {
            "type": "string",
            "description": "Y"
          },
          "created": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time allocation record was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "Username of user who created allocation record"
          },
          "modified": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time allocation record was last modified",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Username of user who last modified allocation record"
          }
        },
        "description": "Offender Key Worker record representation (to facilitate data migration)"
      },
      "ImageDetail": {
        "required": [
          "active",
          "captureDate",
          "captureDateTime",
          "imageId",
          "imageOrientation",
          "imageType",
          "imageView"
        ],
        "type": "object",
        "properties": {
          "imageId": {
            "type": "integer",
            "description": "Image ID",
            "format": "int64",
            "example": 2461788
          },
          "active": {
            "type": "boolean",
            "description": "An active image means that it is to be used and is current for the prisoner. An inactive image means that it has been superseded by another image or the image is no longer relevant.",
            "example": false
          },
          "captureDate": {
            "type": "string",
            "description": "Date of image capture",
            "format": "date",
            "example": "2008-08-27"
          },
          "captureDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time of image capture",
            "example": "2021-07-05T10:35:17"
          },
          "imageView": {
            "type": "string",
            "description": "Image view information. Actual values extracted 10/05/2023, with the majority of values being FACE. This doesn't appear to be mapped to any REFERENCE_CODE data, even though there is a domain called IMAGE_VIEW.",
            "example": "FACE",
            "enum": [
              "OIC",
              "FACE",
              "TAT",
              "MARK",
              "SCAR",
              "OTH"
            ]
          },
          "imageOrientation": {
            "type": "string",
            "description": "Orientation of the image. Actual values extracted 10/05/2023, with the majority of values being FRONT. This doesn't appear to be mapped to any REFERENCE_CODE data, even though there is a domain called PART_ORIENT.",
            "example": "FRONT",
            "enum": [
              "NECK",
              "KNEE",
              "TORSO",
              "FACE",
              "DAMAGE",
              "INJURY",
              "HAND",
              "HEAD",
              "THIGH",
              "ELBOW",
              "FOOT",
              "INCIDENT",
              "ARM",
              "SHOULDER",
              "ANKLE",
              "FINGER",
              "EAR",
              "TOE",
              "FIGHT",
              "FRONT",
              "LEG",
              "LIP",
              "NOSE"
            ]
          },
          "imageType": {
            "type": "string",
            "description": "Image Type. Actual values extracted 10/05/2023, with the majority of values being OFF_BKG. This doesn't appear to be mapped to any REFERENCE_CODE data.",
            "example": "OFF_BKG",
            "enum": [
              "OFF_IDM",
              "OFF_BKG",
              "OIC"
            ]
          },
          "objectId": {
            "type": "integer",
            "description": "Object ID",
            "format": "int64"
          }
        },
        "description": "Image Detail"
      },
      "TransferTransaction": {
        "required": [
          "amount",
          "client_transaction_id",
          "client_unique_ref",
          "description"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "minimum": 1,
            "type": "integer",
            "description": "Amount of transaction in pence, hence 1634 is £16.34",
            "format": "int64",
            "example": 1634
          },
          "description": {
            "maxLength": 240,
            "minLength": 1,
            "type": "string",
            "description": "Description of the Transaction",
            "example": "Canteen Purchase of £16.34"
          },
          "client_transaction_id": {
            "maxLength": 12,
            "minLength": 1,
            "type": "string",
            "description": "Client Transaction Id",
            "example": "CL123212"
          },
          "client_unique_ref": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "[a-zA-Z0-9-_]+",
            "type": "string",
            "description": "A reference unique to the client making the post. Maximum size 64 characters, only alphabetic, numeric, '-' and '_' are allowed",
            "example": "CLIENT121131-0_11"
          }
        },
        "description": "Transfer to Savings Transaction"
      },
      "Education": {
        "required": [
          "addresses",
          "bookingId",
          "isSpecialEducation",
          "schedule",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id.",
            "format": "int64",
            "example": 14
          },
          "startDate": {
            "type": "string",
            "description": "Start date of education",
            "format": "date",
            "example": "2018-02-11"
          },
          "endDate": {
            "type": "string",
            "description": "End date of education",
            "format": "date",
            "example": "2020-02-11"
          },
          "studyArea": {
            "type": "string",
            "description": "The area of study for the offender while in school.",
            "example": "General Studies"
          },
          "educationLevel": {
            "type": "string",
            "description": "The highest level attained for the educational period.",
            "example": "Degree Level or Higher"
          },
          "numberOfYears": {
            "type": "integer",
            "description": "The number of educational years completed.",
            "format": "int32",
            "example": 2
          },
          "graduationYear": {
            "type": "string",
            "description": "Year of graduation.",
            "example": "2021"
          },
          "comment": {
            "type": "string",
            "description": "Comment relating to education.",
            "example": "The education is going well"
          },
          "school": {
            "type": "string",
            "description": "Name of school attended.",
            "example": "School of economics"
          },
          "isSpecialEducation": {
            "type": "boolean",
            "description": "Whether this is special education",
            "example": false
          },
          "schedule": {
            "type": "string",
            "description": "The education schedule",
            "example": "Full Time"
          },
          "addresses": {
            "type": "array",
            "description": "A list of addresses associated with the education",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        },
        "description": "Offender Education"
      },
      "CaseNoteUsageRequest": {
        "required": [
          "offenderNos"
        ],
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "description": "Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.  If not defined then the numMonth before the current date, unless a toDate is defined when it will be numMonths before toDate",
            "format": "date",
            "example": "2018-11-01"
          },
          "toDate": {
            "type": "string",
            "description": "Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered. If not defined then the current date will be used, unless a fromDate is defined when it will be numMonths after fromDate",
            "format": "date",
            "example": "2018-12-01"
          },
          "numMonths": {
            "type": "integer",
            "description": "Number of month to look forward (if fromDate only defined), or back (if toDate only defined). Default is 1 month",
            "format": "int32",
            "example": 2
          },
          "offenderNos": {
            "type": "array",
            "description": "a list of offender numbers to search.",
            "items": {
              "type": "string",
              "description": "a list of offender numbers to search."
            }
          },
          "staffId": {
            "type": "integer",
            "description": "staff Id to use in search (optional).",
            "format": "int32",
            "example": 223423
          },
          "type": {
            "type": "string",
            "description": "Case note type.",
            "example": "KA"
          },
          "subType": {
            "type": "string",
            "description": "Case note sub-type.",
            "example": "KS"
          },
          "agencyId": {
            "type": "string",
            "description": "Optional agency Id to filter by",
            "example": "MDI"
          }
        },
        "description": "Case Note Type Usage Request"
      },
      "CaseNoteUsage": {
        "required": [
          "caseNoteSubType",
          "caseNoteType",
          "latestCaseNote",
          "numCaseNotes",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender No",
            "example": "ZWE12A"
          },
          "caseNoteType": {
            "type": "string",
            "description": "Case Note Type",
            "example": "KA"
          },
          "caseNoteSubType": {
            "type": "string",
            "description": "Case Note Sub Type",
            "example": "KS"
          },
          "numCaseNotes": {
            "type": "integer",
            "description": "Number of case notes of this type/subtype",
            "format": "int32",
            "example": 5
          },
          "latestCaseNote": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Last case note of this type",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Case Note Type Usage"
      },
      "BookingFromDatePair": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64"
          },
          "fromDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Only case notes occurring on or after this date (in YYYY-MM-DDTHH:MM:SS format) will be considered.",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Booking Id to case note from date pair"
      },
      "CaseNoteTypeSummaryRequest": {
        "required": [
          "bookingFromDateSelection"
        ],
        "type": "object",
        "properties": {
          "bookingFromDateSelection": {
            "type": "array",
            "description": "a list of booking id to from date to search. Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered",
            "items": {
              "$ref": "#/components/schemas/BookingFromDatePair"
            }
          },
          "types": {
            "type": "array",
            "description": "Case note types",
            "items": {
              "type": "string",
              "description": "Case note types"
            }
          }
        },
        "description": "Case Note Type Usage Request by Date grouped by bookings"
      },
      "CaseNoteTypeCount": {
        "required": [
          "bookingId",
          "caseNoteSubType",
          "caseNoteType",
          "numCaseNotes"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64",
            "example": 12345678
          },
          "caseNoteType": {
            "type": "string",
            "description": "Case Note Type",
            "example": "POS"
          },
          "caseNoteSubType": {
            "type": "string",
            "description": "Case Note Sub Type",
            "example": "IEP_ENC"
          },
          "numCaseNotes": {
            "type": "integer",
            "description": "Number of case notes of this type and subtype",
            "format": "int64",
            "example": 5
          }
        },
        "description": "Case Note Type Counts By Booking Id, type and sub type"
      },
      "CaseNoteStaffUsageRequest": {
        "required": [
          "staffIds"
        ],
        "type": "object",
        "properties": {
          "staffIds": {
            "type": "array",
            "description": "a list of staff numbers to search.",
            "items": {
              "type": "integer",
              "description": "a list of staff numbers to search.",
              "format": "int32"
            }
          },
          "numMonths": {
            "type": "integer",
            "description": "Number of month to look forward (if fromDate only defined), or back (if toDate only defined). Default is 1 month",
            "format": "int32"
          },
          "fromDate": {
            "type": "string",
            "description": "Only case notes occurring on or after this date (in YYYY-MM-DD format) will be considered.  If not defined then the numMonth before the current date, unless a toDate is defined when it will be numMonths before toDate",
            "format": "date"
          },
          "toDate": {
            "type": "string",
            "description": "Only case notes occurring on or before this date (in YYYY-MM-DD format) will be considered. If not defined then the current date will be used, unless a fromDate is defined when it will be numMonths after fromDate",
            "format": "date"
          },
          "type": {
            "type": "string",
            "description": "Case note type."
          },
          "subType": {
            "type": "string",
            "description": "Case note sub-type."
          }
        },
        "description": "Case Note Type Staff Usage Request"
      },
      "CaseNoteStaffUsage": {
        "required": [
          "caseNoteSubType",
          "caseNoteType",
          "latestCaseNote",
          "numCaseNotes",
          "staffId"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "description": "Staff ID",
            "format": "int32",
            "example": 2341232
          },
          "caseNoteType": {
            "type": "string",
            "description": "Case Note Type",
            "example": "KA"
          },
          "caseNoteSubType": {
            "type": "string",
            "description": "Case Note Sub Type",
            "example": "KS"
          },
          "numCaseNotes": {
            "type": "integer",
            "description": "Number of case notes of this type/subtype",
            "format": "int32",
            "example": 5
          },
          "latestCaseNote": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Last case note of this type",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Case Note Type Staff Usage"
      },
      "SchedulePrisonToPrisonMove": {
        "required": [
          "escortType",
          "fromPrisonLocation",
          "scheduledMoveDateTime",
          "toPrisonLocation"
        ],
        "type": "object",
        "properties": {
          "fromPrisonLocation": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The prison (agency code) to be moved from.",
            "example": "LEI"
          },
          "toPrisonLocation": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The prison (agency code) to be moved to.",
            "example": "PVI"
          },
          "escortType": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The escort type of the move.",
            "example": "PECS"
          },
          "scheduledMoveDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time of the move in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "The prison to prison move to be scheduled for the offender booking."
      },
      "ScheduledPrisonToPrisonMove": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier for the scheduled prison to prison move.",
            "format": "int64",
            "example": 123456789
          },
          "scheduledMoveDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and start time of the move in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "fromPrisonLocation": {
            "$ref": "#/components/schemas/Agency"
          },
          "toPrisonLocation": {
            "$ref": "#/components/schemas/Agency"
          }
        },
        "description": "Represents the data for a scheduled prison to prison move."
      },
      "PrisonToCourtHearing": {
        "required": [
          "courtHearingDateTime",
          "fromPrisonLocation",
          "toCourtLocation"
        ],
        "type": "object",
        "properties": {
          "fromPrisonLocation": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The prison (agency code) where the offender will be moved from.",
            "example": "LEI"
          },
          "toCourtLocation": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "The court (agency code) where the offender will moved to.",
            "example": "LEEDCC"
          },
          "courtHearingDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The future date and time of the court hearing in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "comments": {
            "maxLength": 240,
            "minLength": 0,
            "type": "string",
            "description": "Any comments related to the court case.",
            "example": "Restricted access to parking level."
          }
        },
        "description": "The prison to court hearing to be scheduled for the offender booking."
      },
      "CreatePersonalCareNeed": {
        "required": [
          "commentText",
          "problemCode",
          "problemStatus",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "problemCode": {
            "type": "string",
            "description": "Problem Code",
            "example": "ACCU9"
          },
          "problemStatus": {
            "type": "string",
            "description": "Problem Status",
            "example": "ON"
          },
          "commentText": {
            "type": "string",
            "description": "Comment text",
            "example": "Preg, acc under 9mths"
          },
          "startDate": {
            "type": "string",
            "description": "Start Date",
            "format": "date",
            "example": "2010-06-21"
          },
          "endDate": {
            "type": "string",
            "description": "End Date",
            "format": "date",
            "example": "2010-06-21"
          }
        },
        "description": "Personal Care Need"
      },
      "NewAppointment": {
        "required": [
          "appointmentType",
          "locationId",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "appointmentType": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "\\w*",
            "type": "string",
            "description": "Corresponds to the scheduled event subType"
          },
          "locationId": {
            "type": "integer",
            "description": "Location at which the appointment takes place.",
            "format": "int64"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event starts",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event ends",
            "example": "2021-07-05T10:35:17"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "Details of appointment"
          }
        },
        "description": "Creation details for a new appointment"
      },
      "ScheduledEvent": {
        "required": [
          "bookingId",
          "eventClass",
          "eventDate",
          "eventSource",
          "eventStatus",
          "eventSubType",
          "eventSubTypeDesc",
          "eventType",
          "eventTypeDesc"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id",
            "format": "int64"
          },
          "eventClass": {
            "type": "string",
            "description": "Class of event"
          },
          "eventId": {
            "type": "integer",
            "description": "Activity id if any. Used to attend or pay an activity.",
            "format": "int64"
          },
          "eventStatus": {
            "type": "string",
            "description": "Status of event"
          },
          "eventType": {
            "type": "string",
            "description": "Type of scheduled event (as a code)"
          },
          "eventTypeDesc": {
            "type": "string",
            "description": "Description of scheduled event type"
          },
          "eventSubType": {
            "type": "string",
            "description": "Sub type (or reason) of scheduled event (as a code)"
          },
          "eventSubTypeDesc": {
            "type": "string",
            "description": "Description of scheduled event sub type"
          },
          "eventDate": {
            "type": "string",
            "description": "Date on which event occurs",
            "format": "date"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event starts",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event ends",
            "example": "2021-07-05T10:35:17"
          },
          "eventLocation": {
            "type": "string",
            "description": "Location at which event takes place (could be an internal location, agency or external address)."
          },
          "eventLocationId": {
            "type": "integer",
            "description": "Id of an internal event location",
            "format": "int64"
          },
          "agencyId": {
            "type": "string",
            "description": "The agency ID for the booked internal location",
            "example": "WWI"
          },
          "eventSource": {
            "type": "string",
            "description": "Code identifying underlying source of event data"
          },
          "eventSourceCode": {
            "type": "string",
            "description": "Source-specific code for the type or nature of the event"
          },
          "eventSourceDesc": {
            "type": "string",
            "description": "Source-specific description for type or nature of the event"
          },
          "eventOutcome": {
            "type": "string",
            "description": "Activity attendance, possible values are the codes in the 'PS_PA_OC' reference domain."
          },
          "performance": {
            "type": "string",
            "description": "Activity performance, possible values are the codes in the 'PERFORMANCE' reference domain."
          },
          "outcomeComment": {
            "type": "string",
            "description": "Activity no-pay reason."
          },
          "paid": {
            "type": "boolean",
            "description": "Activity paid flag."
          },
          "payRate": {
            "type": "number",
            "description": "Amount paid per activity session in pounds"
          },
          "locationCode": {
            "type": "string",
            "description": "The code for the activity location"
          },
          "createUserId": {
            "type": "string",
            "description": "Staff member who created the appointment"
          }
        },
        "description": "Scheduled Event"
      },
      "CreateAlert": {
        "required": [
          "alertCode",
          "alertDate",
          "alertType",
          "comment"
        ],
        "type": "object",
        "properties": {
          "alertType": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Code identifying type of alert",
            "example": "X"
          },
          "alertCode": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "Code identifying the sub type of alert",
            "example": "XEL"
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Free Text Comment",
            "example": "has a large poster on cell wall"
          },
          "alertDate": {
            "type": "string",
            "description": "Date the alert became effective",
            "format": "date",
            "example": "2019-02-13"
          },
          "expiryDate": {
            "type": "string",
            "description": "Date the alert should expire",
            "format": "date",
            "example": "2099-02-13"
          }
        },
        "description": "Alert details"
      },
      "AlertCreated": {
        "type": "object",
        "properties": {
          "alertId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InmateBasicDetails": {
        "required": [
          "agencyId",
          "bookingId",
          "bookingNo",
          "dateOfBirth",
          "firstName",
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender Booking Id",
            "format": "int64",
            "example": 432132
          },
          "bookingNo": {
            "type": "string",
            "description": "Booking Number"
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference",
            "example": "A1234AA"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name(s)"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "agencyId": {
            "type": "string",
            "description": "Identifier of agency to which the prisoner is associated."
          },
          "assignedLivingUnitId": {
            "type": "integer",
            "description": "Identifier of living unit (e.g. cell) that prisoner is assigned to.",
            "format": "int64"
          },
          "assignedLivingUnitDesc": {
            "type": "string",
            "description": "Description of living unit (e.g. cell) that offender is assigned to.",
            "example": "MDI-1-1-3"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth of prisoner",
            "format": "date",
            "example": "1970-03-15"
          }
        },
        "description": "Offender basic detail"
      },
      "PersonalCareNeeds": {
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender No"
          },
          "personalCareNeeds": {
            "type": "array",
            "description": "Personal Care Needs",
            "items": {
              "$ref": "#/components/schemas/PersonalCareNeed"
            }
          }
        },
        "description": "Personal Care Needs"
      },
      "PersonalCareCounterDto": {
        "required": [
          "offenderNo",
          "size"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number"
          },
          "size": {
            "type": "integer",
            "description": "Number of health problems records in set time",
            "format": "int32"
          }
        }
      },
      "OffenceDetail": {
        "required": [
          "bookingId",
          "offenceCode",
          "offenceDescription",
          "statuteCode"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Prisoner booking id",
            "format": "int64",
            "example": 1123456
          },
          "offenceDescription": {
            "type": "string",
            "description": "Description of offence"
          },
          "offenceCode": {
            "type": "string",
            "description": "Reference Code",
            "example": "RR84070"
          },
          "statuteCode": {
            "type": "string",
            "description": "Statute code",
            "example": "RR84"
          }
        },
        "description": "Offence Details"
      },
      "CourtEventOutcome": {
        "required": [
          "bookingId",
          "eventId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The booking id",
            "format": "int64",
            "example": 438934
          },
          "eventId": {
            "type": "integer",
            "description": "The court event identifier",
            "format": "int64",
            "example": 201206
          },
          "outcomeReasonCode": {
            "type": "string",
            "description": "The court event outcome reason code",
            "example": "5500"
          }
        },
        "description": "Court event outcome"
      },
      "AppointmentDefaults": {
        "required": [
          "appointmentType",
          "locationId",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "appointmentType": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "\\w*",
            "type": "string",
            "description": "The scheduled event subType",
            "example": "ACTI"
          },
          "locationId": {
            "type": "integer",
            "description": "The identifier of the appointments' Location. The location must be situated in the requestor's case load.",
            "format": "int64",
            "example": 25
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time at which the appointments start. ISO 8601 Date-time format. startTime must be in the future.",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time at which the appointments end. ISO 8601 Date-time format. endTime, if present, must be later than startTime.",
            "example": "2021-07-05T10:35:17"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "A comment that applies to all the appointments in this request.",
            "example": "Please provide helpful supporting text when it applies to all the appointments specified by this request."
          }
        },
        "description": "Default values to be applied when creating each appointment"
      },
      "AppointmentDetails": {
        "required": [
          "bookingId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The Booking id of the offender for whom the appointment is to be created.",
            "format": "int64",
            "example": 123456
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "A replacement for the default startTime. ISO 8601 date-time format.  This value, when present, must be in the future.",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "A replacement for the default endTime. ISO 8601 date-time format.  This value, when present, must be later than the default startTime, or the startTime in this object if it is defined.",
            "example": "2021-07-05T10:35:17"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "The Appointment's details. When present this value replaces the default comment.",
            "example": "Please provide helpful supporting text relevant to this particular appointment when the default comment is not suitable."
          }
        },
        "description": "Detail for creating an appointment for a particular bookingId where values should differ from the defaults"
      },
      "AppointmentsToCreate": {
        "required": [
          "appointmentDefaults",
          "appointments"
        ],
        "type": "object",
        "properties": {
          "appointmentDefaults": {
            "$ref": "#/components/schemas/AppointmentDefaults"
          },
          "appointments": {
            "type": "array",
            "description": "The details for creating each appointment.  A Missing value falls back to the default value if present. Mandatory, but an empty list is accepted.",
            "items": {
              "$ref": "#/components/schemas/AppointmentDetails"
            }
          },
          "repeat": {
            "$ref": "#/components/schemas/Repeat"
          }
        },
        "description": "Details for creating appointments in bulk"
      },
      "Repeat": {
        "required": [
          "count",
          "repeatPeriod"
        ],
        "type": "object",
        "properties": {
          "repeatPeriod": {
            "type": "string",
            "description": "The period at which the appointment should repeat.",
            "example": "WEEKLY",
            "enum": [
              "DAILY",
              "WEEKDAYS",
              "WEEKLY",
              "FORTNIGHTLY",
              "MONTHLY"
            ]
          },
          "count": {
            "minimum": 1,
            "type": "integer",
            "description": "The total number of appointments. Must be greater than 0",
            "format": "int32"
          }
        },
        "description": "If present specifies the number of times to repeat the appointments and the period of the repeat"
      },
      "CreatedAppointmentDetails": {
        "required": [
          "bookingId",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The Booking id of the offender for whom the appointment was created.",
            "format": "int64",
            "example": 123456
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The start time of the appointment.",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The end time of the appointment.",
            "example": "2021-07-05T10:35:17"
          },
          "appointmentEventId": {
            "type": "integer",
            "format": "int64"
          },
          "appointmentType": {
            "type": "string",
            "description": "The scheduled event subType",
            "example": "ACTI"
          },
          "locationId": {
            "type": "integer",
            "description": "The identifier of the appointments' Location. The location must be situated in the requestor's case load.",
            "format": "int64",
            "example": 25
          }
        },
        "description": "The details of an appointment that has just been created"
      },
      "RequestToCreateAgency": {
        "required": [
          "agencyId",
          "agencyType",
          "courtType",
          "description"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Agency identifier.",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Agency description.",
            "example": "Moorland (HMP & YOI)"
          },
          "longDescription": {
            "type": "string",
            "description": "Long description of the agency",
            "example": "Moorland (HMP & YOI)"
          },
          "agencyType": {
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Agency type.  Reference domain is AGY_LOC_TYPE",
            "example": "INST",
            "enum": [
              "CRC",
              "POLSTN",
              "INST",
              "COMM",
              "APPR",
              "CRT",
              "POLICE",
              "IMDC",
              "TRN",
              "OUT",
              "YOT",
              "SCH",
              "STC",
              "HOST",
              "AIRPORT",
              "HSHOSP",
              "HOSPITAL",
              "PECS",
              "PAR",
              "PNP",
              "PSY"
            ]
          },
          "courtType": {
            "pattern": "^[a-zA-Z0-9]+$",
            "type": "string",
            "description": "Court Type.  Reference domain is JURISDICTION",
            "example": "CC",
            "enum": [
              "CACD",
              "CB",
              "CC",
              "CO",
              "DCM",
              "GCM",
              "IMM",
              "MC",
              "OTHER",
              "YC"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the Agency is active. Note: if set false, the current date will be the deactivation date",
            "example": true
          }
        },
        "description": "Create Agency Request"
      },
      "VisitSlotCapacity": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time",
            "example": "2019-01-01T13:30/16:00"
          },
          "capacity": {
            "type": "integer",
            "description": "Capacity",
            "format": "int64",
            "example": 402
          },
          "max_groups": {
            "type": "integer",
            "description": "Max Groups",
            "format": "int64",
            "example": 999
          },
          "max_adults": {
            "type": "integer",
            "description": "Max Adults",
            "format": "int64",
            "example": 999
          },
          "groups_booked": {
            "type": "integer",
            "description": "Groups Booked",
            "format": "int64",
            "example": 5
          },
          "visitors_booked": {
            "type": "integer",
            "description": "Visitors Booked",
            "format": "int64",
            "example": 6
          },
          "adults_booked": {
            "type": "integer",
            "description": "Adults Booked",
            "format": "int64",
            "example": 7
          }
        },
        "description": "Visit slots Details "
      },
      "VisitSlots": {
        "type": "object",
        "properties": {
          "slots": {
            "type": "array",
            "description": "List of visit slots with capacity",
            "items": {
              "$ref": "#/components/schemas/VisitSlotCapacity"
            }
          }
        },
        "description": "Visit slots with capacity"
      },
      "AccountTransaction": {
        "required": [
          "amount",
          "date",
          "description",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Transaction ID",
            "example": "204564839-3"
          },
          "type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Transfer In Regular from caseload PVR"
          },
          "amount": {
            "type": "integer",
            "description": "Amount in pence",
            "format": "int64",
            "example": 12345
          },
          "date": {
            "type": "string",
            "description": "Date of the transaction",
            "format": "date",
            "example": "2016-10-21"
          }
        },
        "description": "Account Transaction"
      },
      "Hold": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description",
            "example": "Hold via API"
          },
          "amount": {
            "type": "integer",
            "description": "Amount in pence",
            "format": "int64",
            "example": 150
          },
          "hold_number": {
            "type": "integer",
            "description": "Hold Number",
            "format": "int64",
            "example": 6185835
          },
          "client_unique_ref": {
            "type": "string",
            "description": "Client unique reference",
            "example": "jerkincrocus"
          },
          "reference_no": {
            "type": "string",
            "description": "Reference number",
            "example": "TEST0075"
          },
          "entry_date": {
            "type": "string",
            "description": "Entry date",
            "format": "date",
            "example": "2017-06-23"
          },
          "hold_until_date": {
            "type": "string",
            "description": "Hold until date",
            "format": "date",
            "example": "2017-07-07"
          }
        },
        "description": "Hold Response"
      },
      "AccountBalance": {
        "type": "object",
        "properties": {
          "spends": {
            "type": "integer",
            "description": "Spends balance",
            "format": "int64",
            "example": 5678
          },
          "savings": {
            "type": "integer",
            "description": "Saving balance",
            "format": "int64",
            "example": 12344
          },
          "cash": {
            "type": "integer",
            "description": "Cash balance",
            "format": "int64",
            "example": 13565
          }
        },
        "description": "Account Balance"
      },
      "AccountTransactions": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "description": "List of account transactions",
            "items": {
              "$ref": "#/components/schemas/AccountTransaction"
            }
          }
        },
        "description": "Account Transactions"
      },
      "LiveRoll": {
        "type": "object",
        "properties": {
          "noms_ids": {
            "type": "array",
            "description": "Noms Ids",
            "items": {
              "type": "string",
              "description": "Noms Ids"
            }
          }
        },
        "description": "Live Roll"
      },
      "UnavailabilityReason": {
        "type": "object",
        "properties": {
          "external_movement": {
            "type": "boolean",
            "description": "External Movement",
            "example": true
          },
          "existing_visits": {
            "type": "array",
            "description": "Existing Visits",
            "items": {
              "$ref": "#/components/schemas/Visit"
            }
          },
          "out_of_vo": {
            "type": "boolean",
            "description": "Out of Vo",
            "example": true
          },
          "banned": {
            "type": "boolean",
            "description": "Banned",
            "example": true
          }
        },
        "description": "Date Unavailability Reasons"
      },
      "Visit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "example": 123456
          },
          "slot": {
            "type": "string",
            "description": "Slot",
            "example": "2019-01-01T13:30/16:00"
          }
        },
        "description": "Visit Details"
      },
      "ContactList": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "description": "Available Dates",
            "items": {
              "$ref": "#/components/schemas/ContactPerson"
            }
          }
        },
        "description": "Contact List"
      },
      "ContactPerson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1234567
          },
          "given_name": {
            "type": "string",
            "description": "Given Name",
            "example": "JENNIFER"
          },
          "middle_names": {
            "type": "string",
            "description": "Middle Names",
            "example": "ESMERALADA JANE"
          },
          "surname": {
            "type": "string",
            "description": "Last Name",
            "example": "HALLIBUT"
          },
          "date_of_birth": {
            "type": "string",
            "description": "Date of Birth",
            "format": "date",
            "example": "1970-01-01"
          },
          "gender": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "relationship type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "contact type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "approved visitor": {
            "type": "boolean",
            "description": "Approved Visitor"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          },
          "restrictions": {
            "type": "array",
            "description": "Restrictions",
            "items": {
              "$ref": "#/components/schemas/VisitRestriction"
            }
          }
        },
        "description": "Contact Person"
      },
      "VisitRestriction": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "effective_date": {
            "type": "string",
            "description": "Effective Date",
            "format": "date",
            "example": "2019-01-01"
          },
          "expiry_date": {
            "type": "string",
            "description": "Expiry Date",
            "format": "date",
            "example": "2019-01-01"
          },
          "comment_text": {
            "type": "string",
            "description": "Comment Text"
          }
        },
        "description": "Visit Restriction"
      },
      "AvailableDates": {
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "description": "Available Dates",
            "items": {
              "type": "string",
              "description": "Available Dates",
              "format": "date"
            }
          }
        },
        "description": "Available Dates"
      },
      "Language": {
        "type": "object",
        "properties": {
          "preferred_spoken": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "interpreter_required": {
            "type": "boolean",
            "description": "whether an interpreter is required",
            "example": true
          }
        },
        "description": "Language"
      },
      "Offender": {
        "type": "object",
        "properties": {
          "given_name": {
            "type": "string",
            "description": "Given Name",
            "example": "JENNIFER"
          },
          "middle_names": {
            "type": "string",
            "description": "Middle Names",
            "example": "ESMERALADA JANE"
          },
          "surname": {
            "type": "string",
            "description": "Last Name",
            "example": "HALLIBUT"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "MR"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "date_of_birth": {
            "type": "string",
            "description": "Date of Birth",
            "format": "date",
            "example": "1970-01-01"
          },
          "aliases": {
            "type": "array",
            "description": "List of offender’s aliases",
            "items": {
              "$ref": "#/components/schemas/OffenderAlias"
            }
          },
          "gender": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "nationalities": {
            "type": "string",
            "description": "Nationalities"
          },
          "religion": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "ethnicity": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "csra": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "convicted": {
            "type": "boolean",
            "description": "indicates whether the offender has been convicted or is on remand",
            "example": true
          },
          "pnc_number": {
            "type": "string",
            "description": "PNC Number",
            "example": "96/346527V"
          },
          "cro_number": {
            "type": "string",
            "description": "CRO Number",
            "example": "ADF567890"
          },
          "imprisonment_status": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "iep_level": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "diet": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "security_category": {
            "$ref": "#/components/schemas/CodeDescription"
          }
        },
        "description": "Offender"
      },
      "OffenderAlias": {
        "type": "object",
        "properties": {
          "given_name": {
            "type": "string",
            "description": "Given Name",
            "example": "JENNIFER"
          },
          "middle_names": {
            "type": "string",
            "description": "Middle Names",
            "example": "ESMERALADA JANE"
          },
          "surname": {
            "type": "string",
            "description": "Surname",
            "example": "HALLIBUT"
          },
          "date_of_birth": {
            "type": "string",
            "description": "Date of Birth",
            "format": "date",
            "example": "1970-01-01"
          }
        },
        "description": "Offender Alias"
      },
      "Event": {
        "required": [
          "id",
          "noms_id",
          "prison_id",
          "timestamp",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of event",
            "example": "IEP_CHANGED"
          },
          "id": {
            "type": "integer",
            "description": "Unique indentifier for event",
            "format": "int64",
            "example": 21
          },
          "noms_id": {
            "type": "string",
            "description": "Offender Noms Id",
            "example": "A1417AE"
          },
          "prison_id": {
            "type": "string",
            "description": "Prison ID",
            "example": "BMI"
          },
          "timestamp": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the event occurred",
            "example": "2021-07-05T10:35:17"
          },
          "eventData": {
            "type": "string"
          }
        },
        "description": "Offender Event"
      },
      "Location": {
        "required": [
          "agencyId",
          "description",
          "locationId",
          "locationType"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Location identifier.",
            "format": "int64"
          },
          "locationType": {
            "type": "string",
            "description": "Location type."
          },
          "description": {
            "type": "string",
            "description": "Location description."
          },
          "locationUsage": {
            "type": "string",
            "description": "What events this room can be used for."
          },
          "agencyId": {
            "type": "string",
            "description": "Identifier of Agency this location is associated with."
          },
          "parentLocationId": {
            "type": "integer",
            "description": "Identifier of this location's parent location.",
            "format": "int64"
          },
          "currentOccupancy": {
            "type": "integer",
            "description": "Current occupancy of location.",
            "format": "int32"
          },
          "locationPrefix": {
            "type": "string",
            "description": "Location prefix. Defines search prefix that will constrain search to this location and its subordinate locations."
          },
          "operationalCapacity": {
            "type": "integer",
            "description": "Operational capacity of the location.",
            "format": "int32"
          },
          "userDescription": {
            "type": "string",
            "description": "User-friendly location description."
          },
          "internalLocationCode": {
            "type": "string"
          },
          "subLocations": {
            "type": "boolean",
            "description": "Indicates that sub locations exist for this location e.g. landings or cells"
          }
        },
        "description": "Location Details"
      },
      "Image": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Base64 Encoded JPEG data",
            "example": "<base64_encoded_jpeg_data>"
          }
        },
        "description": "Prisoner Photo"
      },
      "Booking": {
        "required": [
          "booking_active",
          "booking_no",
          "booking_started"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "booking_no": {
            "type": "string",
            "description": "Bookings",
            "example": "A12313"
          },
          "booking_started": {
            "type": "string",
            "description": "Start Date of Booking",
            "format": "date",
            "example": "2017-02-04"
          },
          "booking_ended": {
            "type": "string",
            "description": "End date of Booking",
            "format": "date",
            "example": "2019-06-04"
          },
          "booking_active": {
            "type": "boolean",
            "description": "Booking Active?",
            "example": true
          },
          "release_date": {
            "type": "string",
            "description": "Release Date",
            "format": "date",
            "example": "2019-02-04"
          },
          "legal_cases": {
            "type": "array",
            "description": "Legal Cases",
            "items": {
              "$ref": "#/components/schemas/LegalCase"
            }
          }
        },
        "description": "Offender Booking"
      },
      "Bookings": {
        "type": "object",
        "properties": {
          "bookings": {
            "type": "array",
            "description": "Bookings",
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          }
        },
        "description": "Bookings"
      },
      "Charge": {
        "type": "object",
        "properties": {
          "statute": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "offence": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "most_serious": {
            "type": "boolean",
            "description": "Most Serious Offence ",
            "example": true
          },
          "charge_active": {
            "type": "boolean",
            "description": "Charge Active",
            "example": true
          },
          "severity_ranking": {
            "type": "string",
            "description": "Severity Ranking",
            "example": "100"
          },
          "result": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "disposition": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "convicted": {
            "type": "boolean",
            "description": "Convicted",
            "example": true
          },
          "imprisonment_status": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "band": {
            "$ref": "#/components/schemas/CodeDescription"
          }
        },
        "description": "Offender Charge"
      },
      "LegalCase": {
        "type": "object",
        "properties": {
          "case_info_number": {
            "type": "string",
            "description": "Case Information Number",
            "example": "1254232"
          },
          "case_active": {
            "type": "boolean",
            "description": "Case Active",
            "example": true
          },
          "case_started": {
            "type": "string",
            "description": "Case Started Date",
            "format": "date",
            "example": "2019-01-17"
          },
          "court": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "legal_case_type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "charges": {
            "type": "array",
            "description": "Charges",
            "items": {
              "$ref": "#/components/schemas/Charge"
            }
          }
        },
        "description": "Legal Case"
      },
      "AlertV1": {
        "required": [
          "alert_date",
          "alert_sub_type",
          "alert_type"
        ],
        "type": "object",
        "properties": {
          "alert_type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "alert_sub_type": {
            "$ref": "#/components/schemas/CodeDescription"
          },
          "alert_date": {
            "type": "string",
            "description": "Date the alert became effective",
            "format": "date",
            "example": "2019-02-13"
          },
          "expiry_date": {
            "type": "string",
            "description": "Alert Type",
            "format": "date",
            "example": "2019-04-15"
          },
          "status": {
            "type": "string",
            "description": "ACTIVE or INACTIVE (Inactive alerts will have a expiry date of today or earlier",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE,INACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Free Text Comment",
            "example": "has a large poster on cell wall"
          }
        },
        "description": "Offender Alert"
      },
      "Alerts": {
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "description": "Alerts",
            "items": {
              "$ref": "#/components/schemas/AlertV1"
            }
          }
        },
        "description": "Alerts"
      },
      "Events": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "description": "Events",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "description": "Events"
      },
      "ActiveOffender": {
        "type": "object",
        "properties": {
          "found": {
            "type": "boolean",
            "description": "found",
            "example": true
          },
          "offender": {
            "$ref": "#/components/schemas/OffenderId"
          }
        },
        "description": "Active Offender"
      },
      "OffenderId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64",
            "example": 1234567
          }
        },
        "description": "offender ID"
      },
      "UserRole": {
        "required": [
          "roleCode",
          "roleId",
          "roleName"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "Role Id",
            "format": "int64"
          },
          "roleCode": {
            "type": "string",
            "description": "code for this role"
          },
          "roleName": {
            "type": "string",
            "description": "Full text description of the role type"
          },
          "parentRoleCode": {
            "type": "string",
            "description": "role code of the parent role"
          },
          "caseloadId": {
            "type": "string",
            "description": "caseload that this role belongs to, (NOMIS only)"
          }
        },
        "description": "User Role"
      },
      "StaffDetail": {
        "required": [
          "firstName",
          "lastName",
          "staffId",
          "status"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "description": "Unique identifier for staff member.",
            "format": "int64",
            "example": 423142
          },
          "firstName": {
            "type": "string",
            "description": "Staff member's first name.",
            "example": "JOHN"
          },
          "lastName": {
            "type": "string",
            "description": "Staff member's last name.",
            "example": "SMITH"
          },
          "status": {
            "type": "string",
            "description": "Status of staff member.",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "thumbnailId": {
            "type": "integer",
            "description": "Identifier for staff member image.",
            "format": "int64",
            "example": 231232
          },
          "gender": {
            "type": "string",
            "description": "Gender of Staff Member",
            "example": "M",
            "enum": [
              "M",
              "F",
              "NK",
              "NS",
              "REF"
            ]
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth of Staff Member",
            "format": "date",
            "example": "1970-01-02"
          }
        },
        "description": "Staff Details"
      },
      "StaffRole": {
        "required": [
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "A code that defines staff member's role at agency."
          },
          "roleDescription": {
            "type": "string",
            "description": "Description of staff member's role at agency."
          }
        },
        "description": "Staff Role"
      },
      "StaffLocationRole": {
        "required": [
          "agencyId",
          "firstName",
          "fromDate",
          "lastName",
          "position",
          "role",
          "staffId",
          "status"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "description": "Unique identifier for staff member.",
            "format": "int64",
            "example": 242342
          },
          "firstName": {
            "type": "string",
            "description": "Staff member's first name.",
            "example": "JOHN"
          },
          "lastName": {
            "type": "string",
            "description": "Staff member's last name.",
            "example": "SMITH"
          },
          "status": {
            "type": "string",
            "description": "Status of staff member.",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "thumbnailId": {
            "type": "integer",
            "description": "Identifier for staff member image.",
            "format": "int64",
            "example": 2342334
          },
          "gender": {
            "type": "string",
            "description": "Gender of Staff Member",
            "example": "M",
            "enum": [
              "M",
              "F",
              "NK",
              "NS",
              "REF"
            ]
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth of Staff Member",
            "format": "date",
            "example": "1970-01-02"
          },
          "agencyId": {
            "type": "string",
            "description": "Agency at which staff member is performing role.",
            "example": "LEI"
          },
          "agencyDescription": {
            "type": "string",
            "description": "Agency description.",
            "example": "HMP Leeds"
          },
          "fromDate": {
            "type": "string",
            "description": "Date from which staff member is actively performing role.",
            "format": "date",
            "example": "2019-02-05"
          },
          "toDate": {
            "type": "string",
            "description": "Date on which staff member stops actively performing role.",
            "format": "date",
            "example": "2019-03-25"
          },
          "position": {
            "type": "string",
            "description": "A code that defines staff member's position at agency.",
            "example": "PRO"
          },
          "positionDescription": {
            "type": "string",
            "description": "Description of staff member's position at agency.",
            "example": "Prison Officer"
          },
          "role": {
            "type": "string",
            "description": "A code that defines staff member's role at agency.",
            "example": "KW"
          },
          "roleDescription": {
            "type": "string",
            "description": "Description of staff member's role at agency.",
            "example": "Key Worker"
          },
          "scheduleType": {
            "type": "string",
            "description": "A code the defines staff member's schedule type.",
            "example": "FT"
          },
          "scheduleTypeDescription": {
            "type": "string",
            "description": "Description of staff member's schedule type.",
            "example": "Full Time"
          },
          "hoursPerWeek": {
            "type": "number",
            "description": "Number of hours worked per week by staff member.",
            "example": 30
          }
        },
        "description": "Staff Details with position and role"
      },
      "PrisonerPrisonSchedule": {
        "required": [
          "comment",
          "event",
          "eventDescription",
          "eventLocation",
          "eventStatus",
          "eventType",
          "firstName",
          "lastName",
          "offenderNo",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number)"
          },
          "firstName": {
            "type": "string",
            "description": "Offender first name"
          },
          "lastName": {
            "type": "string",
            "description": "Offender last name"
          },
          "event": {
            "type": "string",
            "description": "Event code"
          },
          "eventType": {
            "type": "string",
            "description": "Event type, e.g. VISIT, APP, PRISON_ACT"
          },
          "eventDescription": {
            "type": "string",
            "description": "Description of event code"
          },
          "eventLocation": {
            "type": "string",
            "description": "Location of the event"
          },
          "eventStatus": {
            "type": "string",
            "description": "The event's status. Includes 'CANC', meaning cancelled for 'VISIT'"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "description": "Comment"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event starts",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event ends",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Prisoner Prison Schedule"
      },
      "ScheduledAppointmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Appointment id",
            "format": "int64"
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number)"
          },
          "firstName": {
            "type": "string",
            "description": "Offender first name"
          },
          "lastName": {
            "type": "string",
            "description": "Offender last name"
          },
          "date": {
            "type": "string",
            "description": "Date the appointment is scheduled",
            "format": "date"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which appointment starts",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which appointment ends",
            "example": "2021-07-05T10:35:17"
          },
          "appointmentTypeDescription": {
            "type": "string",
            "description": "Description of appointment type"
          },
          "appointmentTypeCode": {
            "type": "string",
            "description": "Appointment code"
          },
          "locationDescription": {
            "type": "string",
            "description": "Description of location the appointment is held"
          },
          "locationId": {
            "type": "integer",
            "description": "Id of location the appointment is held",
            "format": "int64"
          },
          "createUserId": {
            "type": "string",
            "description": "Staff member who created the appointment"
          },
          "agencyId": {
            "type": "string",
            "description": "Agency the appointment belongs to"
          }
        },
        "description": "Scheduled appointment"
      },
      "ReferenceDomain": {
        "required": [
          "applnCode",
          "description",
          "domain",
          "domainStatus",
          "ownerCode"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Reference domain name"
          },
          "description": {
            "type": "string",
            "description": "Reference domain description."
          },
          "domainStatus": {
            "type": "string",
            "description": "Reference domain status."
          },
          "ownerCode": {
            "type": "string",
            "description": "Reference domain owner."
          },
          "applnCode": {
            "type": "string",
            "description": "Application that uses reference domain."
          },
          "parentDomain": {
            "type": "string",
            "description": "Parent domain for reference domain."
          }
        },
        "description": "Reference Domain"
      },
      "PrisonerInformation": {
        "required": [
          "bookingId",
          "communityStatus",
          "dateOfBirth",
          "englishSpeaking",
          "establishmentCode",
          "establishmentName",
          "gender",
          "givenName1",
          "lastName",
          "nomsId"
        ],
        "type": "object",
        "properties": {
          "nomsId": {
            "type": "string",
            "description": "Offender Identifier",
            "example": "A1234AA"
          },
          "establishmentCode": {
            "type": "string",
            "description": "Establishment Code for prisoner",
            "example": "MDI"
          },
          "bookingId": {
            "type": "integer",
            "description": "Booking Id (Internal)",
            "format": "int64",
            "example": 1231232
          },
          "givenName1": {
            "type": "string",
            "description": "Given Name 1",
            "example": "John"
          },
          "givenName2": {
            "type": "string",
            "description": "Given Name 2",
            "example": "Luke"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "requestedName": {
            "type": "string",
            "description": "Requested Name",
            "example": "Dave"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth",
            "format": "date",
            "example": "1970-05-01"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "example": "Male"
          },
          "englishSpeaking": {
            "type": "boolean",
            "description": "Indicated that is English speaking",
            "example": true
          },
          "unitCode1": {
            "type": "string",
            "description": "Level 1 Location Unit Code",
            "example": "A"
          },
          "unitCode2": {
            "type": "string",
            "description": "Level 2 Location Unit Code",
            "example": "2"
          },
          "unitCode3": {
            "type": "string",
            "description": "Level 3 Location Unit Code",
            "example": "003"
          },
          "bookingBeginDate": {
            "type": "string",
            "description": "Date Prisoner booking was initial made",
            "format": "date",
            "example": "2017-05-01"
          },
          "admissionDate": {
            "type": "string",
            "description": "Date of admission into this prison",
            "format": "date",
            "example": "2019-06-01"
          },
          "releaseDate": {
            "type": "string",
            "description": "Confirmed, actual, approved, provisional or calculated release date for offender, according to offender release date algorithm.<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
            "format": "date",
            "example": "2021-04-12"
          },
          "categoryCode": {
            "type": "string",
            "description": "Category of this prisoner",
            "example": "C"
          },
          "communityStatus": {
            "type": "string",
            "description": "Status of prisoner in community",
            "example": "ACTIVE IN",
            "enum": [
              "ACTIVE IN",
              "ACTIVE OUT"
            ]
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status",
            "example": "REMAND",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "establishmentName": {
            "type": "string",
            "description": "Establishment Name for prisoner",
            "example": "Moorland"
          }
        },
        "description": "Prisoner Information"
      },
      "PageString": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string"
          },
          "nullHandling": {
            "type": "string"
          },
          "ascending": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "ignoreCase": {
            "type": "boolean"
          }
        }
      },
      "PrisonerSearchDetails": {
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Prisoner Number a.k.a NOMS number, offender number",
            "example": "A1234AA"
          },
          "offenderId": {
            "type": "integer",
            "description": "Offender Id",
            "format": "int64",
            "example": 678673
          },
          "bookingId": {
            "type": "integer",
            "description": "Booking Id of the active booking",
            "format": "int64",
            "example": 432132
          },
          "bookingNo": {
            "type": "string",
            "description": "Booking Number of the active booking"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name(s)"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth of prisoner",
            "format": "date",
            "example": "1970-03-15"
          },
          "agencyId": {
            "type": "string",
            "description": "Prison ID",
            "example": "MDI"
          },
          "alerts": {
            "type": "array",
            "description": "List of alert details for the active booking",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          },
          "assignedLivingUnit": {
            "$ref": "#/components/schemas/AssignedLivingUnit"
          },
          "religion": {
            "type": "string",
            "description": "Religion of the prisoner"
          },
          "physicalAttributes": {
            "$ref": "#/components/schemas/PhysicalAttributes"
          },
          "physicalCharacteristics": {
            "type": "array",
            "description": "List of physical characteristics",
            "items": {
              "$ref": "#/components/schemas/PhysicalCharacteristic"
            }
          },
          "profileInformation": {
            "type": "array",
            "description": "List of profile information",
            "items": {
              "$ref": "#/components/schemas/ProfileInformation"
            }
          },
          "physicalMarks": {
            "type": "array",
            "description": "List of physical marks",
            "items": {
              "$ref": "#/components/schemas/PhysicalMark"
            }
          },
          "csra": {
            "type": "string",
            "description": "CSRA (Latest assessment with cellSharing=true from list of assessments)"
          },
          "categoryCode": {
            "type": "string",
            "description": "Category code (from list of assessments)"
          },
          "inOutStatus": {
            "type": "string",
            "description": "In/Out Status",
            "example": "IN, OUT, TRN"
          },
          "identifiers": {
            "type": "array",
            "description": "Prisoner Identifiers",
            "items": {
              "$ref": "#/components/schemas/OffenderIdentifier"
            }
          },
          "allIdentifiers": {
            "type": "array",
            "description": "Prisoner Identifiers including those from aliases",
            "items": {
              "$ref": "#/components/schemas/OffenderIdentifier"
            }
          },
          "sentenceDetail": {
            "$ref": "#/components/schemas/SentenceCalcDates"
          },
          "mostSeriousOffence": {
            "type": "string",
            "description": "Most serious offence"
          },
          "indeterminateSentence": {
            "type": "boolean",
            "description": "Currently serving an indeterminate sentence?"
          },
          "aliases": {
            "type": "array",
            "description": "Aliases",
            "items": {
              "$ref": "#/components/schemas/Alias"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of prisoner",
            "example": "ACTIVE IN, ACTIVE OUT, INACTIVE OUT, INACTIVE TRN"
          },
          "lastMovementTypeCode": {
            "type": "string",
            "description": "Last Movement Type Code of prisoner. Note: Reference Data from MOVE_TYPE Domain",
            "example": "TAP, CRT, TRN, ADM, REL"
          },
          "lastMovementReasonCode": {
            "type": "string",
            "description": "Last Movement Reason of prisoner. Note: Reference Data from MOVE_RSN Domain",
            "example": "CA"
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status",
            "example": "REMAND",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "recall": {
            "type": "boolean",
            "description": "Recall",
            "example": true
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "The prisoner's imprisonment status",
            "example": "LIFE"
          },
          "imprisonmentStatusDescription": {
            "type": "string",
            "description": "The prisoner's imprisonment status description",
            "example": "Serving Life Imprisonment"
          },
          "receptionDate": {
            "type": "string",
            "description": "Date prisoner was received into the prison.",
            "format": "date",
            "example": "1980-01-01"
          },
          "locationDescription": {
            "type": "string",
            "description": "current prison or outside with last movement information.",
            "example": "Outside - released from Leeds"
          },
          "latestLocationId": {
            "type": "string",
            "description": "the current prison id or the last prison before release",
            "example": "MDI"
          },
          "addresses": {
            "type": "array",
            "description": "Prisoner Addresses",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "phones": {
            "type": "array",
            "description": "Prisoner Phone Numbers",
            "items": {
              "$ref": "#/components/schemas/Telephone"
            }
          },
          "emailAddresses": {
            "type": "array",
            "description": "Prisoner Email Addresses",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "allConvictedOffences": {
            "type": "array",
            "description": "Convicted offences for ALL bookings.",
            "items": {
              "$ref": "#/components/schemas/OffenceHistoryDetail"
            }
          }
        },
        "description": "Prisoner details required by Prisoner Search"
      },
      "BookingAdjustment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Adjustment type",
            "enum": [
              "SPECIAL_REMISSION",
              "ADDITIONAL_DAYS_AWARDED",
              "RESTORED_ADDITIONAL_DAYS_AWARDED",
              "UNLAWFULLY_AT_LARGE",
              "LAWFULLY_AT_LARGE",
              "SPECIAL_REMISSION, ADDITIONAL_DAYS_AWARDED, RESTORED_ADDITIONAL_DAYS_AWARDED, UNLAWFULLY_AT_LARGE, LAWFULLY_AT_LARGE"
            ]
          },
          "numberOfDays": {
            "type": "integer",
            "description": "Number of days to adjust",
            "format": "int32",
            "example": 12
          },
          "fromDate": {
            "type": "string",
            "description": "The 'from date' of the adjustment",
            "format": "date",
            "example": "2022-01-01"
          },
          "toDate": {
            "type": "string",
            "description": "The 'to date' of the adjustment",
            "format": "date",
            "example": "2022-01-31"
          },
          "active": {
            "type": "boolean",
            "description": "Boolean flag showing if the adjustment is active",
            "example": true
          }
        },
        "description": "Sentence Adjustment values"
      },
      "CalculableSentenceEnvelope": {
        "required": [
          "bookingAdjustments",
          "bookingId",
          "offenderFinePayments",
          "person",
          "sentenceAdjustments",
          "sentenceAndOffences"
        ],
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "bookingId": {
            "type": "integer",
            "description": "The booking ID",
            "format": "int64"
          },
          "sentenceAndOffences": {
            "type": "array",
            "description": "Sentence and offence details  for a prisoner",
            "items": {
              "$ref": "#/components/schemas/OffenderSentenceAndOffences"
            }
          },
          "sentenceAdjustments": {
            "type": "array",
            "description": "Adjustments at a sentence level",
            "items": {
              "$ref": "#/components/schemas/SentenceAdjustmentValues"
            }
          },
          "bookingAdjustments": {
            "type": "array",
            "description": "Adjustments at a booking level",
            "items": {
              "$ref": "#/components/schemas/BookingAdjustment"
            }
          },
          "offenderFinePayments": {
            "type": "array",
            "description": "List of offender fine payments",
            "items": {
              "$ref": "#/components/schemas/OffenderFinePaymentDto"
            }
          },
          "fixedTermRecallDetails": {
            "$ref": "#/components/schemas/FixedTermRecallDetails"
          },
          "sentenceCalcDates": {
            "$ref": "#/components/schemas/SentenceCalcDates"
          }
        },
        "description": "The active sentence envelope is a combination of the person information, the active booking and calculable sentences at a particular establishment"
      },
      "FixedTermRecallDetails": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The booking id",
            "format": "int64"
          },
          "returnToCustodyDate": {
            "type": "string",
            "description": "The date the offender returned to custody",
            "format": "date"
          },
          "recallLength": {
            "type": "integer",
            "description": "The length of the fixed term recall",
            "format": "int32"
          }
        },
        "description": "Details relating to the fixed term recall on a booking"
      },
      "OffenderFinePaymentDto": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The bookingId this payment relates to",
            "format": "int64"
          },
          "sequence": {
            "type": "integer",
            "description": "Payment sequence - a unique identifier a payment on a booking",
            "format": "int32"
          },
          "paymentDate": {
            "type": "string",
            "description": "The date of the payment",
            "format": "date"
          },
          "paymentAmount": {
            "type": "number",
            "description": "The amount of the payment"
          }
        },
        "description": "Offender fine payments"
      },
      "OffenderOffence": {
        "type": "object",
        "properties": {
          "offenderChargeId": {
            "type": "integer",
            "description": "Internal ID for charge relating to offender",
            "format": "int64"
          },
          "offenceStartDate": {
            "type": "string",
            "description": "Offence Start Date",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "description": "Offence End Date",
            "format": "date"
          },
          "offenceStatute": {
            "type": "string",
            "description": "Offence statute"
          },
          "offenceCode": {
            "type": "string",
            "description": "Offence Code"
          },
          "offenceDescription": {
            "type": "string",
            "description": "Offence Description"
          },
          "indicators": {
            "type": "array",
            "description": "Offence Indicators",
            "items": {
              "type": "string",
              "description": "Offence Indicators"
            }
          }
        },
        "description": "Offence details related to an offender"
      },
      "OffenderSentenceAndOffences": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "The bookingId this sentence and offence(s) relates to",
            "format": "int64"
          },
          "sentenceSequence": {
            "type": "integer",
            "description": "Sentence sequence - a unique identifier a sentence on a booking",
            "format": "int32"
          },
          "consecutiveToSequence": {
            "type": "integer",
            "description": "This sentence is consecutive to this sequence (if populated)",
            "format": "int32"
          },
          "lineSequence": {
            "type": "integer",
            "description": "Sentence line sequence - a number representing the order",
            "format": "int64"
          },
          "caseSequence": {
            "type": "integer",
            "description": "Case sequence - a number representing the order of the case this sentence belongs to",
            "format": "int32"
          },
          "caseReference": {
            "type": "string",
            "description": "Case reference - a string identifying the case this sentence belongs to"
          },
          "courtDescription": {
            "type": "string",
            "description": "Court description - a string describing the the court that the case was heard at"
          },
          "sentenceStatus": {
            "type": "string",
            "description": "This sentence status: A = Active I = Inactive"
          },
          "sentenceCategory": {
            "type": "string",
            "description": "The sentence category e.g. 2003 or Licence"
          },
          "sentenceCalculationType": {
            "type": "string",
            "description": "The sentence calculation type e.g. R or ADIMP_ORA"
          },
          "sentenceTypeDescription": {
            "type": "string",
            "description": "The sentence type description e.g. Standard Determinate Sentence"
          },
          "sentenceDate": {
            "type": "string",
            "description": "The sentenced date for this sentence (aka court date)",
            "format": "date"
          },
          "sentenceStartDate": {
            "type": "string",
            "description": "Date that this sentence did or will start",
            "format": "date"
          },
          "sentenceEndDate": {
            "type": "string",
            "description": "Date that this sentence would expire",
            "format": "date"
          },
          "terms": {
            "type": "array",
            "description": "The sentence terms of the sentence",
            "items": {
              "$ref": "#/components/schemas/OffenderSentenceTerm"
            }
          },
          "offences": {
            "type": "array",
            "description": "The offences related to this sentence (will usually only have one offence per sentence)",
            "items": {
              "$ref": "#/components/schemas/OffenderOffence"
            }
          },
          "fineAmount": {
            "type": "number",
            "description": "The amount of fine related to the sentence and offence",
            "format": "double"
          }
        },
        "description": "Offender sentence and offence details"
      },
      "OffenderSentenceTerm": {
        "type": "object",
        "properties": {
          "years": {
            "type": "integer",
            "description": "The term duration - years",
            "format": "int32",
            "example": 1
          },
          "months": {
            "type": "integer",
            "description": "The term duration - months",
            "format": "int32",
            "example": 2
          },
          "weeks": {
            "type": "integer",
            "description": "The term duration - weeks",
            "format": "int32",
            "example": 3
          },
          "days": {
            "type": "integer",
            "description": "The term duration - days",
            "format": "int32",
            "example": 4
          },
          "code": {
            "type": "string",
            "description": "The sentence term code, indicating if this is the term of imprisonment or license"
          }
        },
        "description": "Offender sentence term"
      },
      "PageCalculableSentenceEnvelope": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculableSentenceEnvelope"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "Person": {
        "required": [
          "agencyId",
          "alerts",
          "dateOfBirth",
          "lastName",
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner Identifier",
            "example": "A1234AA"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "lastName": {
            "type": "string"
          },
          "agencyId": {
            "type": "string"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          }
        },
        "description": "The identifiers of a person necessary for a calculation"
      },
      "SentenceAdjustmentValues": {
        "type": "object",
        "properties": {
          "sentenceSequence": {
            "type": "integer",
            "description": "Sentence sequence",
            "format": "int32",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "Adjustment type",
            "enum": [
              "RECALL_SENTENCE_REMAND",
              "TAGGED_BAIL",
              "RECALL_SENTENCE_TAGGED_BAIL",
              "REMAND",
              "UNUSED_REMAND"
            ]
          },
          "numberOfDays": {
            "type": "integer",
            "description": "Number of days to adjust",
            "format": "int32",
            "example": 12
          },
          "fromDate": {
            "type": "string",
            "description": "The 'from date' of the adjustment",
            "format": "date",
            "example": "2022-01-01"
          },
          "toDate": {
            "type": "string",
            "description": "The 'to date' of the adjustment",
            "format": "date",
            "example": "2022-01-31"
          },
          "active": {
            "type": "boolean",
            "description": "Boolean flag showing if the adjustment is active",
            "example": true
          }
        },
        "description": "Sentence Adjustment values"
      },
      "LocationRollCount": {
        "required": [
          "bedsInUse",
          "currentlyInCell",
          "currentlyOut",
          "netVacancies",
          "outOfOrder",
          "workingCapacity"
        ],
        "type": "object",
        "properties": {
          "bedsInUse": {
            "type": "integer",
            "description": "Beds in use",
            "format": "int32"
          },
          "currentlyInCell": {
            "type": "integer",
            "description": "Currently in cell",
            "format": "int32"
          },
          "currentlyOut": {
            "type": "integer",
            "description": "Currently out",
            "format": "int32"
          },
          "workingCapacity": {
            "type": "integer",
            "description": "Working capacity",
            "format": "int32"
          },
          "netVacancies": {
            "type": "integer",
            "description": "Net vacancies",
            "format": "int32"
          },
          "outOfOrder": {
            "type": "integer",
            "description": "Out of order",
            "format": "int32"
          }
        },
        "description": "Summary of cell usage for this level"
      },
      "PrisonRollCount": {
        "required": [
          "locations",
          "numArrivedToday",
          "numCurrentPopulation",
          "numInReception",
          "numNoCellAllocated",
          "numOutToday",
          "numStillToArrive",
          "numUnlockRollToday",
          "prisonId",
          "totals"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "type": "string",
            "description": "Prison Id"
          },
          "numUnlockRollToday": {
            "type": "integer",
            "description": "Unlock roll today",
            "format": "int32"
          },
          "numCurrentPopulation": {
            "type": "integer",
            "description": "Current population",
            "format": "int32"
          },
          "numArrivedToday": {
            "type": "integer",
            "description": "Arrived today",
            "format": "int32"
          },
          "numInReception": {
            "type": "integer",
            "description": "In reception",
            "format": "int32"
          },
          "numStillToArrive": {
            "type": "integer",
            "description": "Still to arrive",
            "format": "int32"
          },
          "numOutToday": {
            "type": "integer",
            "description": "Out today",
            "format": "int32"
          },
          "numNoCellAllocated": {
            "type": "integer",
            "description": "No cell allocated",
            "format": "int32"
          },
          "totals": {
            "$ref": "#/components/schemas/LocationRollCount"
          },
          "locations": {
            "type": "array",
            "description": "Residential location roll count summary",
            "items": {
              "$ref": "#/components/schemas/ResidentialLocation"
            }
          }
        },
        "description": "Establishment Roll Count"
      },
      "ResidentialLocation": {
        "required": [
          "certified",
          "fullLocationPath",
          "key",
          "locationCode",
          "locationId",
          "locationType",
          "rollCount",
          "subLocations"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "Location Id",
            "example": "121212"
          },
          "locationType": {
            "type": "string",
            "description": "Type of location",
            "example": "CELL"
          },
          "locationCode": {
            "type": "string",
            "description": "Code of this location",
            "example": "002"
          },
          "fullLocationPath": {
            "type": "string",
            "description": "Path of this location from top level",
            "example": "A-1-002"
          },
          "certified": {
            "type": "boolean",
            "description": "Certified location",
            "example": true
          },
          "localName": {
            "type": "string",
            "description": "Local name of the location",
            "example": "Wing A"
          },
          "rollCount": {
            "$ref": "#/components/schemas/LocationRollCount"
          },
          "subLocations": {
            "type": "array",
            "description": "List of residential locations for this summary, including wings and sub-locations such as landings and cells",
            "items": {
              "$ref": "#/components/schemas/ResidentialLocation"
            }
          },
          "key": {
            "type": "string"
          }
        },
        "description": "Residential Roll Count Summary"
      },
      "PrisonRollSummary": {
        "required": [
          "numArrivedToday",
          "numCurrentPopulation",
          "numOutToday",
          "numUnlockRollToday",
          "prisonId"
        ],
        "type": "object",
        "properties": {
          "prisonId": {
            "type": "string",
            "description": "Prison Id"
          },
          "numUnlockRollToday": {
            "type": "integer",
            "description": "Unlock roll today",
            "format": "int32"
          },
          "numArrivedToday": {
            "type": "integer",
            "description": "Arrived today",
            "format": "int32"
          },
          "numOutToday": {
            "type": "integer",
            "description": "Out today",
            "format": "int32"
          },
          "numCurrentPopulation": {
            "type": "integer",
            "description": "Current population",
            "format": "int32"
          }
        },
        "description": "Prison Roll Summary"
      },
      "PersonIdentifier": {
        "required": [
          "identifierType",
          "identifierValue"
        ],
        "type": "object",
        "properties": {
          "identifierType": {
            "type": "string",
            "description": "The identifier type"
          },
          "identifierValue": {
            "type": "string",
            "description": "The most recent identifier value of that type."
          }
        },
        "description": "PersonIdentifier"
      },
      "OffenderTransactionHistoryDto": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "offenderId": {
            "type": "integer",
            "description": "Offender Id",
            "format": "int64",
            "example": 1
          },
          "transactionId": {
            "type": "integer",
            "description": "Transaction Id",
            "format": "int64",
            "example": 1
          },
          "transactionEntrySequence": {
            "type": "integer",
            "description": "Transaction Sequence",
            "format": "int64",
            "example": 1
          },
          "entryDate": {
            "type": "string",
            "description": "Transaction Date",
            "format": "date",
            "example": "2020-12-11"
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction Type"
          },
          "entryDescription": {
            "type": "string",
            "description": "Transaction Description",
            "example": "some textual description here"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Transaction Reference Number"
          },
          "currency": {
            "type": "string",
            "description": "Currency of these amounts.",
            "example": "GBP"
          },
          "penceAmount": {
            "type": "integer",
            "description": "Transaction Amount",
            "format": "int64",
            "example": 60
          },
          "accountType": {
            "type": "string",
            "description": "Offender Sub Account",
            "example": "savings,spends,cash"
          },
          "postingType": {
            "type": "string",
            "description": "Posting type. Denotes the direction of money moving in or out of the account",
            "example": "CR,DR"
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number",
            "example": "G6123VU"
          },
          "agencyId": {
            "type": "string",
            "description": "The place the transaction took place",
            "example": "MDI"
          },
          "relatedOffenderTransactions": {
            "type": "array",
            "description": "List of related transaction details",
            "items": {
              "$ref": "#/components/schemas/RelatedTransactionDetails"
            }
          },
          "currentBalance": {
            "type": "integer",
            "description": "Balance at a point in time",
            "format": "int64"
          },
          "holdingCleared": {
            "type": "boolean",
            "description": "Indicates that the amount has been cleared from holding"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Creation date time",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Offender transaction details"
      },
      "RelatedTransactionDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Transaction details id",
            "format": "int64",
            "example": 1
          },
          "transactionId": {
            "type": "integer",
            "description": "Transaction Id",
            "format": "int64",
            "example": 1
          },
          "transactionEntrySequence": {
            "type": "integer",
            "description": "Transaction Sequence",
            "format": "int64",
            "example": 1
          },
          "calendarDate": {
            "type": "string",
            "description": "Calendar date the payment was processed",
            "format": "date",
            "example": "2020-10-12"
          },
          "payTypeCode": {
            "type": "string",
            "description": "Pay type code",
            "example": "UNEMPLOYED,SESSION,LTSICK,STSICK,MATERNAL,RETIRED,HOSPITAL"
          },
          "eventId": {
            "type": "integer",
            "description": "Event id the payment is associated with",
            "format": "int64",
            "example": 1
          },
          "payAmount": {
            "type": "integer",
            "description": "Payment amount in pence",
            "format": "int64",
            "example": 100
          },
          "pieceWork": {
            "type": "integer",
            "description": "Piece work amount in pence",
            "format": "int64",
            "example": 250
          },
          "bonusPay": {
            "type": "integer",
            "description": "Bonus payment in pence",
            "format": "int64",
            "example": 55
          },
          "currentBalance": {
            "type": "integer",
            "description": "Balance at a point in time",
            "format": "int64"
          },
          "paymentDescription": {
            "type": "string",
            "description": "Reason for payment",
            "example": "Cleaner HB1 PM"
          }
        },
        "description": "Offender transaction drill down details"
      },
      "PrisonPeriod": {
        "required": [
          "bookNumber",
          "bookingId",
          "entryDate",
          "movementDates",
          "prisons",
          "transfers"
        ],
        "type": "object",
        "properties": {
          "bookNumber": {
            "type": "string",
            "description": "The book number for this booking"
          },
          "bookingId": {
            "type": "integer",
            "description": "The ID of this booking",
            "format": "int64"
          },
          "entryDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date they first entered prison in this booking",
            "example": "2021-07-05T10:35:17"
          },
          "releaseDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date they were last released from prison in this booking if they have been released",
            "example": "2021-07-05T10:35:17"
          },
          "movementDates": {
            "type": "array",
            "description": "List of significant period of time when in prison. The time between these periods means they person was out of prison (but not including court)",
            "items": {
              "$ref": "#/components/schemas/SignificantMovement"
            }
          },
          "transfers": {
            "type": "array",
            "description": "List of transfers during this period. Will be empty if there have been no transfers. Transfer via court or temporary absence are also included",
            "items": {
              "$ref": "#/components/schemas/TransferDetail"
            }
          },
          "prisons": {
            "type": "array",
            "description": "List of prisons the person was detained during this booking period",
            "items": {
              "type": "string",
              "description": "List of prisons the person was detained during this booking period"
            }
          }
        },
        "description": "A period of time in prison"
      },
      "PrisonerInPrisonSummary": {
        "required": [
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner Identifier",
            "example": "A1234AA"
          },
          "prisonPeriod": {
            "type": "array",
            "description": "List of date when prisoner was in prison",
            "items": {
              "$ref": "#/components/schemas/PrisonPeriod"
            }
          }
        },
        "description": "Prisoners time in prison summary"
      },
      "SignificantMovement": {
        "required": [
          "admittedIntoPrisonId",
          "inwardType",
          "reasonInToPrison"
        ],
        "type": "object",
        "properties": {
          "reasonInToPrison": {
            "type": "string",
            "description": "Reason for movement into prison",
            "example": "Unconvicted Remand"
          },
          "dateInToPrison": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "inwardType": {
            "type": "string",
            "description": "Type of movement into prison",
            "enum": [
              "ADM",
              "TAP"
            ]
          },
          "reasonOutOfPrison": {
            "type": "string",
            "description": "Reason for movement out from prison",
            "example": "Conditional Release (CJA91) -SH Term>1YR"
          },
          "dateOutOfPrison": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date this sub-period ended - if it has ended",
            "example": "2021-07-05T10:35:17"
          },
          "outwardType": {
            "type": "string",
            "description": "Type of movement out of prison",
            "enum": [
              "REL",
              "TAP"
            ]
          },
          "admittedIntoPrisonId": {
            "type": "string",
            "description": "The initial prison they entered during this period",
            "example": "MDI"
          },
          "releaseFromPrisonId": {
            "type": "string",
            "description": "The final prison they left during this period - if this period has ended",
            "example": "MDI"
          }
        },
        "description": "A movement IN and OUT range"
      },
      "TransferDetail": {
        "required": [
          "toPrisonId"
        ],
        "type": "object",
        "properties": {
          "dateOutOfPrison": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date prisoner left the original prison",
            "example": "2021-07-05T10:35:17"
          },
          "dateInToPrison": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date prisoner entered the new prison. Can be absent if they have not arrived at the prison yet",
            "example": "2021-07-05T10:35:17"
          },
          "transferReason": {
            "type": "string",
            "description": "Reason for the transfer",
            "example": "Compassionate Transfer"
          },
          "fromPrisonId": {
            "type": "string",
            "description": "The prison they were transferred from",
            "example": "WWI"
          },
          "toPrisonId": {
            "type": "string",
            "description": "The prison they were transferred to. Can be absent if they have not arrived at the prison yet",
            "example": "BXI"
          }
        },
        "description": "A movement that is a transfer"
      },
      "OffenderRestriction": {
        "required": [
          "active",
          "restrictionId",
          "restrictionType",
          "restrictionTypeDescription",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "restrictionId": {
            "type": "integer",
            "description": "restriction id",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "description": "Restriction comment text"
          },
          "restrictionType": {
            "type": "string",
            "description": "code of restriction type"
          },
          "restrictionTypeDescription": {
            "type": "string",
            "description": "description of restriction type"
          },
          "startDate": {
            "type": "string",
            "description": "Date from which the restrictions applies",
            "format": "date",
            "example": "1980-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Date restriction applies to, or indefinitely if null",
            "format": "date",
            "example": "1980-01-01"
          },
          "active": {
            "type": "boolean",
            "description": "true if restriction is within the start date and optional expiry date range"
          }
        },
        "description": "Offender restriction"
      },
      "OffenderRestrictions": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking id for offender",
            "format": "int64"
          },
          "offenderRestrictions": {
            "type": "array",
            "description": "Offender restrictions",
            "items": {
              "$ref": "#/components/schemas/OffenderRestriction"
            }
          }
        },
        "description": "Offender restrictions"
      },
      "MilitaryRecord": {
        "required": [
          "militaryBranchCode",
          "militaryBranchDescription",
          "selectiveServicesFlag",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "warZoneCode": {
            "type": "string",
            "description": "War zone code",
            "example": "AFG"
          },
          "warZoneDescription": {
            "type": "string",
            "description": "War zone description",
            "example": "Afghanistan"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date",
            "example": "2000-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date",
            "example": "2020-10-17"
          },
          "militaryDischargeCode": {
            "type": "string",
            "description": "Military discharge code",
            "example": "DIS"
          },
          "militaryDischargeDescription": {
            "type": "string",
            "description": "Military discharge description",
            "example": "Dishonourable"
          },
          "militaryBranchCode": {
            "type": "string",
            "description": "Military branch code",
            "example": "ARM"
          },
          "militaryBranchDescription": {
            "type": "string",
            "description": "Military branch description",
            "example": "Army"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "Some description"
          },
          "unitNumber": {
            "type": "string",
            "description": "The unit number",
            "example": "255 TACP Battery"
          },
          "enlistmentLocation": {
            "type": "string",
            "description": "Enlistment location",
            "example": "Sheffield"
          },
          "dischargeLocation": {
            "type": "string",
            "description": "Discharge location",
            "example": "Manchester"
          },
          "selectiveServicesFlag": {
            "type": "boolean",
            "description": "Selective services flag",
            "example": false
          },
          "militaryRankCode": {
            "type": "string",
            "description": "Military rank code",
            "example": "LCPL_RMA"
          },
          "militaryRankDescription": {
            "type": "string",
            "description": "Military rank description",
            "example": "Lance Corporal  (Royal Marines)"
          },
          "serviceNumber": {
            "type": "string",
            "description": "Service number",
            "example": "25232301"
          },
          "disciplinaryActionCode": {
            "type": "string",
            "description": "Disciplinary action code",
            "example": "CM"
          },
          "disciplinaryActionDescription": {
            "type": "string",
            "description": "Disciplinary action description",
            "example": "Court Martial"
          }
        },
        "description": "Military Record"
      },
      "MilitaryRecords": {
        "type": "object",
        "properties": {
          "militaryRecords": {
            "type": "array",
            "description": "Military Records",
            "items": {
              "$ref": "#/components/schemas/MilitaryRecord"
            }
          }
        },
        "description": "Military Records"
      },
      "IncidentCase": {
        "required": [
          "incidentCaseId",
          "incidentDate",
          "incidentStatus",
          "incidentTime",
          "incidentTitle",
          "incidentType",
          "reportDate",
          "reportTime",
          "reportedStaffId"
        ],
        "type": "object",
        "properties": {
          "incidentCaseId": {
            "type": "integer",
            "description": "Incident Case ID",
            "format": "int64",
            "example": 2131231
          },
          "incidentTitle": {
            "type": "string",
            "description": "Title of the case",
            "example": "Assault on staff member"
          },
          "incidentType": {
            "type": "string",
            "description": "Type of incident",
            "example": "ASSAULT",
            "enum": [
              "MISC",
              "ASSAULT",
              "FINDS1",
              "DISORDER",
              "KEY_LOCK",
              "ROOF_CLIMB",
              "DEATH_NI",
              "REL_ERROR",
              "FINDS",
              "FIRE",
              "DAMAGE",
              "FOOD_REF",
              "BOMB",
              "ATT_ESC_E",
              "ESCAPE_ESC",
              "DRONE",
              "TRF3",
              "ATT_ESCAPE",
              "BREACH",
              "ESCAPE_EST",
              "FIND",
              "TRF2",
              "FIND1",
              "BARRICADE",
              "HOSTAGE",
              "SELF_HARM",
              "DRUGS",
              "TOOL_LOSS",
              "RADIO_COMP",
              "FIREARM_ETC",
              "CON_INDISC",
              "KEY_LOCKNEW",
              "CLOSE_DOWN",
              "DEATH",
              "ABSCOND",
              "TRF",
              "MOBILES"
            ]
          },
          "incidentDetails": {
            "type": "string",
            "description": "Details about the case",
            "example": "There was a big fight"
          },
          "incidentDate": {
            "type": "string",
            "description": "Date the incident took place",
            "format": "date",
            "example": "2018-02-10"
          },
          "incidentTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Time when incident occurred",
            "example": "2021-07-05T10:35:17"
          },
          "reportedStaffId": {
            "type": "integer",
            "description": "Staff ID who created report",
            "format": "int64",
            "example": 2131231
          },
          "reportDate": {
            "type": "string",
            "description": "Date when incident reported",
            "format": "date",
            "example": "2018-02-11"
          },
          "reportTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Time incident reported",
            "example": "2021-07-05T10:35:17"
          },
          "incidentStatus": {
            "type": "string",
            "description": "Current Status of Incident.  Note:\nAWAN = Awaiting Analysis\nINAN = In Analysis\nINREQ = Information Required\nINAME =Information Amended\nCLOSE = Closed\nPIU = Post Incident Update\nIUP = Incident Updated\nDUP = Duplicate (Created In Error)",
            "example": "CLOSE",
            "enum": [
              "CLOSE",
              "DUP",
              "AWAN",
              "INAN",
              "INREQ",
              "INAME",
              "PIU",
              "IUP"
            ]
          },
          "agencyId": {
            "type": "string",
            "description": "Agency where incident happened",
            "example": "MDI"
          },
          "responseLockedFlag": {
            "type": "boolean",
            "description": "Is the response completed?",
            "example": true
          },
          "responses": {
            "uniqueItems": true,
            "type": "array",
            "description": "Question And Answer Responses",
            "items": {
              "$ref": "#/components/schemas/IncidentResponse"
            }
          },
          "parties": {
            "uniqueItems": true,
            "type": "array",
            "description": "Parties Involved in case",
            "items": {
              "$ref": "#/components/schemas/IncidentParty"
            }
          }
        },
        "description": "Incident Case"
      },
      "IncidentParty": {
        "required": [
          "bookingId",
          "commentText",
          "incidentCaseId",
          "outcomeCode",
          "participationRole",
          "partySeq"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking Id of offender involved",
            "format": "int64",
            "example": 1241232
          },
          "partySeq": {
            "type": "integer",
            "description": "Sequence or each party member",
            "format": "int64",
            "example": 1
          },
          "staffId": {
            "type": "integer",
            "description": "Staff Member ID (optional)",
            "format": "int64",
            "example": 1534133
          },
          "personId": {
            "type": "integer",
            "description": "Person (non-staff) ID (optional)",
            "format": "int64",
            "example": 544233
          },
          "participationRole": {
            "type": "string",
            "description": "Role in the Incident",
            "example": "ASSIAL"
          },
          "outcomeCode": {
            "type": "string",
            "description": "Outcome Code",
            "example": "POR"
          },
          "commentText": {
            "type": "string",
            "description": "Additional Comments",
            "example": "Some additional Information"
          },
          "incidentCaseId": {
            "type": "integer",
            "description": "Incident Case ID",
            "format": "int64",
            "example": 12431243
          }
        },
        "description": "Incident Party"
      },
      "IncidentResponse": {
        "required": [
          "answer",
          "question",
          "questionSeq",
          "questionnaireAnsId",
          "questionnaireQueId"
        ],
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "description": "The Question",
            "example": "Was it a violent assault?"
          },
          "answer": {
            "type": "string",
            "description": "The Answer to the Question",
            "example": "YES"
          },
          "questionSeq": {
            "type": "integer",
            "description": "Sequence of presented Questions",
            "format": "int32",
            "example": 2131231
          },
          "questionnaireQueId": {
            "type": "integer",
            "description": "ID for Questionnaire Question",
            "format": "int64",
            "example": 983431
          },
          "questionnaireAnsId": {
            "type": "integer",
            "description": "ID for Questionnaire Answer",
            "format": "int64",
            "example": 983434
          },
          "responseDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date response was recorded",
            "example": "2021-07-05T10:35:17"
          },
          "responseCommentText": {
            "type": "string",
            "description": "Additional comments for the response to the question",
            "example": "The knife was in his pocket"
          },
          "recordStaffId": {
            "type": "integer",
            "description": "Staff Id recording comment",
            "format": "int64",
            "example": 123123
          }
        },
        "description": "Incident Reponses"
      },
      "HousingLocation": {
        "required": [
          "code",
          "description",
          "level"
        ],
        "type": "object",
        "properties": {
          "level": {
            "maximum": 4,
            "minimum": 1,
            "type": "integer",
            "description": "The level (starting from 1) of the individual location. The highest number level will be the cell.",
            "format": "int32",
            "example": 1
          },
          "code": {
            "type": "string",
            "description": "The code for the location e.g. 010 for a cell, A for a wing",
            "example": "010"
          },
          "type": {
            "type": "string",
            "description": "The type of the location - from LIVING_UNIT reference code",
            "example": "WING",
            "enum": [
              "BED",
              "BLK",
              "CB",
              "CELL",
              "LAND",
              "SPUR",
              "TIER",
              "WING"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the location, either from the user description if set or reference code description and code",
            "example": "Wing A"
          }
        },
        "description": "Previous permanent housing levels at the same prison without moving to a different prison inbetween"
      },
      "OffenderLocation": {
        "type": "object",
        "properties": {
          "levels": {
            "type": "array",
            "description": "Current housing levels or null if not currently in prison",
            "items": {
              "$ref": "#/components/schemas/HousingLocation"
            }
          },
          "lastPermanentLevels": {
            "type": "array",
            "description": "Previous permanent housing levels at the same prison without moving to a different prison inbetween",
            "items": {
              "$ref": "#/components/schemas/HousingLocation"
            }
          }
        }
      },
      "OffenderDamageObligationModel": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of damage obligation",
            "format": "int64",
            "example": 1
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number",
            "example": "G4346UT"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Reference number",
            "example": "841177/1, A841821/1, 842371"
          },
          "startDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The start date time when the damage obligation started",
            "example": "2021-07-05T10:35:17"
          },
          "endDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The end date time when the damage obligation ended",
            "example": "2021-07-05T10:35:17"
          },
          "prisonId": {
            "type": "string",
            "description": "Prison the damages occurred",
            "example": "MDI"
          },
          "amountToPay": {
            "type": "number",
            "description": "Original amount to pay",
            "example": 50.0
          },
          "amountPaid": {
            "type": "number",
            "description": "Amount paid",
            "example": 10.0
          },
          "status": {
            "type": "string",
            "description": "Status",
            "example": "ACTIVE"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "Damages to canteen furniture"
          },
          "currency": {
            "type": "string",
            "description": "Currency of these amounts.",
            "example": "GBP"
          }
        },
        "description": "Damage obligation for an offender"
      },
      "OffenderDamageObligationResponse": {
        "type": "object",
        "properties": {
          "damageObligations": {
            "type": "array",
            "description": "List of offender damage obligations",
            "items": {
              "$ref": "#/components/schemas/OffenderDamageObligationModel"
            }
          }
        },
        "description": "Offender damage obligation response"
      },
      "OffenderContact": {
        "required": [
          "active",
          "approvedVisitor",
          "bookingId",
          "contactType",
          "emergencyContact",
          "firstName",
          "lastName",
          "nextOfKin",
          "relationshipCode"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "description": "Last name of the contact",
            "example": "Smith"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "description": "Middle Names",
            "example": "Mark"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "date of birth",
            "format": "date",
            "example": "1980-01-01"
          },
          "contactType": {
            "type": "string",
            "description": "Contact type",
            "example": "O"
          },
          "contactTypeDescription": {
            "type": "string",
            "description": "Contact type text",
            "example": "Official"
          },
          "relationshipCode": {
            "type": "string",
            "description": "Relationship to prisoner",
            "example": "RO"
          },
          "relationshipDescription": {
            "type": "string",
            "description": "Relationship text",
            "example": "Responsible Officer"
          },
          "commentText": {
            "type": "string",
            "description": "Comments",
            "example": "Some additional information"
          },
          "emergencyContact": {
            "type": "boolean",
            "description": "Is an emergency contact",
            "example": true
          },
          "nextOfKin": {
            "type": "boolean",
            "description": "Indicates that the contact is Next of Kin Type",
            "example": false
          },
          "personId": {
            "type": "integer",
            "description": "id of the person",
            "format": "int64",
            "example": 5871791
          },
          "approvedVisitor": {
            "type": "boolean",
            "description": "Approved Visitor",
            "example": true
          },
          "bookingId": {
            "type": "integer",
            "description": "Offender Booking Id for this contact",
            "format": "int64",
            "example": 2468081
          },
          "emails": {
            "type": "array",
            "description": "List of emails associated with the contact",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "phones": {
            "type": "array",
            "description": "List of phone numbers associated with the contact",
            "items": {
              "$ref": "#/components/schemas/Telephone"
            }
          },
          "restrictions": {
            "type": "array",
            "description": "List of restrictions associated with the contact",
            "items": {
              "$ref": "#/components/schemas/VisitorRestriction"
            }
          },
          "active": {
            "type": "boolean",
            "description": "active contact",
            "example": true
          }
        },
        "description": "Offender Contact"
      },
      "OffenderContacts": {
        "type": "object",
        "properties": {
          "offenderContacts": {
            "type": "array",
            "description": "Offender contacts",
            "items": {
              "$ref": "#/components/schemas/OffenderContact"
            }
          }
        },
        "description": "Offender contacts"
      },
      "VisitorRestriction": {
        "required": [
          "globalRestriction",
          "restrictionId",
          "restrictionType",
          "restrictionTypeDescription",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "restrictionId": {
            "type": "integer",
            "description": "restriction id",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "description": "Restriction comment text"
          },
          "restrictionType": {
            "type": "string",
            "description": "code of restriction type"
          },
          "restrictionTypeDescription": {
            "type": "string",
            "description": "description of restriction type"
          },
          "startDate": {
            "type": "string",
            "description": "Date from which the restrictions applies",
            "format": "date",
            "example": "1980-01-01"
          },
          "expiryDate": {
            "type": "string",
            "description": "Date restriction applies to, or indefinitely if null",
            "format": "date",
            "example": "1980-01-01"
          },
          "globalRestriction": {
            "type": "boolean",
            "description": "true if applied globally to the contact or false if applied in the context of a visit"
          }
        },
        "description": "Visitor restriction"
      },
      "CourtSentences": {
        "type": "object",
        "properties": {
          "caseInfoNumber": {
            "type": "string",
            "description": "The case information number",
            "example": "TD20177010"
          },
          "id": {
            "type": "integer",
            "description": "The case identifier (internal)",
            "format": "int64",
            "example": 1
          },
          "caseSeq": {
            "type": "integer",
            "description": "The case sequence number for the offender",
            "format": "int32",
            "example": 1
          },
          "beginDate": {
            "type": "string",
            "description": "The begin date of the court hearings",
            "format": "date",
            "example": "2019-12-01"
          },
          "court": {
            "$ref": "#/components/schemas/Agency"
          },
          "caseType": {
            "type": "string",
            "description": "The case type",
            "example": "Adult"
          },
          "caseInfoPrefix": {
            "type": "string",
            "description": "The prefix of the case number"
          },
          "caseStatus": {
            "type": "string",
            "description": "The case status",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "CLOSED",
              "INACTIVE"
            ]
          },
          "sentences": {
            "type": "array",
            "description": "Court sentences associated with the court case",
            "items": {
              "$ref": "#/components/schemas/SentencesOffencesTerms"
            }
          },
          "issuingCourt": {
            "$ref": "#/components/schemas/Agency"
          },
          "issuingCourtDate": {
            "type": "string",
            "description": "Issuing Court Date",
            "format": "date"
          }
        },
        "description": "Court case details"
      },
      "KeyDates": {
        "required": [
          "nonDtoReleaseDateType",
          "sentenceStartDate"
        ],
        "type": "object",
        "properties": {
          "sentenceStartDate": {
            "type": "string",
            "description": "Sentence start date.",
            "format": "date",
            "example": "2010-02-03"
          },
          "effectiveSentenceEndDate": {
            "type": "string",
            "description": "Effective sentence end date",
            "format": "date",
            "example": "2020-02-03"
          },
          "additionalDaysAwarded": {
            "type": "integer",
            "description": "ADA - days added to sentence term due to adjustments.",
            "format": "int32",
            "example": 5
          },
          "nonDtoReleaseDate": {
            "type": "string",
            "description": "Release date for non-DTO sentence (if applicable). This will be based on one of ARD, CRD, NPD or PRRD.",
            "format": "date",
            "example": "2020-04-01"
          },
          "nonDtoReleaseDateType": {
            "type": "string",
            "description": "Indicates which type of non-DTO release date is the effective release date. One of 'ARD', 'CRD', 'NPD' or 'PRRD'.",
            "example": "CRD",
            "enum": [
              "ARD",
              "CRD",
              "NPD",
              "PRRD"
            ]
          },
          "confirmedReleaseDate": {
            "type": "string",
            "description": "Confirmed release date for offender.",
            "format": "date",
            "example": "2020-04-20"
          },
          "releaseDate": {
            "type": "string",
            "description": "Confirmed, actual, approved, provisional or calculated release date for offender, according to offender release date algorithm.<h3>Algorithm</h3><ul><li>If there is a confirmed release date, the offender release date is the confirmed release date.</li><li>If there is no confirmed release date for the offender, the offender release date is either the actual parole date or the home detention curfew actual date.</li><li>If there is no confirmed release date, actual parole date or home detention curfew actual date for the offender, the release date is the later of the nonDtoReleaseDate or midTermDate value (if either or both are present)</li></ul>",
            "format": "date",
            "example": "2020-04-01"
          },
          "sentenceExpiryDate": {
            "type": "string",
            "description": "SED - date on which sentence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "automaticReleaseDate": {
            "type": "string",
            "description": "ARD - calculated automatic (unconditional) release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "conditionalReleaseDate": {
            "type": "string",
            "description": "CRD - calculated conditional release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonParoleDate": {
            "type": "string",
            "description": "NPD - calculated non-parole date for offender (relating to the 1991 act).",
            "format": "date",
            "example": "2020-02-03"
          },
          "postRecallReleaseDate": {
            "type": "string",
            "description": "PRRD - calculated post-recall release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryDate": {
            "type": "string",
            "description": "LED - date on which offender licence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewEligibilityDate": {
            "type": "string",
            "description": "HDCED - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityDate": {
            "type": "string",
            "description": "PED - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewActualDate": {
            "type": "string",
            "description": "HDCAD - the offender's actual home detention curfew date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "actualParoleDate": {
            "type": "string",
            "description": "APD - the offender's actual parole date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "releaseOnTemporaryLicenceDate": {
            "type": "string",
            "description": "ROTL - the date on which offender will be released on temporary licence.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "ERSED - the date on which offender will be eligible for early removal (under the Early Removal Scheme for foreign nationals).",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyTermDate": {
            "type": "string",
            "description": "ETD - early term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "midTermDate": {
            "type": "string",
            "description": "MTD - mid term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "lateTermDate": {
            "type": "string",
            "description": "LTD - late term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryDate": {
            "type": "string",
            "description": "TUSED - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffDate": {
            "type": "string",
            "description": "Date on which minimum term is reached for parole (indeterminate/life sentences).",
            "format": "date",
            "example": "2020-02-03"
          },
          "dtoPostRecallReleaseDate": {
            "type": "string",
            "description": "DPRRD - Detention training order post recall release date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffEarlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "TERSED - Tariff early removal scheme eligibility date",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionStartDate": {
            "type": "string",
            "description": "Top-up supervision start date for offender - calculated as licence end date + 1 day or releaseDate if licence end date not set.",
            "format": "date",
            "example": "2019-04-01"
          },
          "homeDetentionCurfewEndDate": {
            "type": "string",
            "description": "Offender's home detention curfew end date - calculated as one day before the releaseDate.",
            "format": "date",
            "example": "2019-04-01"
          }
        },
        "description": "Key Dates"
      },
      "PrisonTerm": {
        "required": [
          "bookNumber",
          "bookingId"
        ],
        "type": "object",
        "properties": {
          "bookNumber": {
            "type": "string",
            "description": "Book Number (Prison) / Prison Number (Probation)",
            "example": "B45232"
          },
          "bookingId": {
            "type": "integer",
            "description": "Booking Identifier (internal)",
            "format": "int64",
            "example": 12312312
          },
          "courtSentences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourtSentences"
            }
          },
          "licenceSentences": {
            "type": "array",
            "description": "Licence sentences",
            "items": {
              "$ref": "#/components/schemas/SentencesOffencesTerms"
            }
          },
          "keyDates": {
            "$ref": "#/components/schemas/KeyDates"
          },
          "sentenceAdjustments": {
            "$ref": "#/components/schemas/SentenceAdjustmentDetail"
          }
        },
        "description": "Prison Term"
      },
      "SentenceAdjustmentDetail": {
        "type": "object",
        "properties": {
          "additionalDaysAwarded": {
            "type": "integer",
            "description": "Number of additional days awarded",
            "format": "int32",
            "example": 12
          },
          "unlawfullyAtLarge": {
            "type": "integer",
            "description": "Number unlawfully at large days",
            "format": "int32",
            "example": 12
          },
          "lawfullyAtLarge": {
            "type": "integer",
            "description": "Number of lawfully at large days",
            "format": "int32",
            "example": 12
          },
          "restoredAdditionalDaysAwarded": {
            "type": "integer",
            "description": "Number of restored additional days awarded",
            "format": "int32",
            "example": 12
          },
          "specialRemission": {
            "type": "integer",
            "description": "Number of special remission days",
            "format": "int32",
            "example": 12
          },
          "recallSentenceRemand": {
            "type": "integer",
            "description": "Number of recall sentence remand days",
            "format": "int32",
            "example": 12
          },
          "recallSentenceTaggedBail": {
            "type": "integer",
            "description": "Number of recall sentence tagged bail days",
            "format": "int32",
            "example": 12
          },
          "remand": {
            "type": "integer",
            "description": "Number of remand days",
            "format": "int32",
            "example": 12
          },
          "taggedBail": {
            "type": "integer",
            "description": "Number of tagged bail days",
            "format": "int32",
            "example": 12
          },
          "unusedRemand": {
            "type": "integer",
            "description": "Number of unused remand days",
            "format": "int32",
            "example": 12
          }
        },
        "description": "Sentence adjustments"
      },
      "SentenceSummary": {
        "required": [
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner Identifier",
            "example": "A1234AA"
          },
          "latestPrisonTerm": {
            "$ref": "#/components/schemas/PrisonTerm"
          }
        },
        "description": "Sentence Summary"
      },
      "SentencesOffencesTerms": {
        "required": [
          "fineAmount",
          "lineSeq"
        ],
        "type": "object",
        "properties": {
          "sentenceSequence": {
            "type": "integer",
            "description": "Sentence sequence - a number representing the order",
            "format": "int32"
          },
          "consecutiveToSequence": {
            "type": "integer",
            "description": "This sentence is consecutive to this sequence (if populated)",
            "format": "int32"
          },
          "sentenceStatus": {
            "type": "string",
            "description": "This sentence status: A = Active I = Inactive"
          },
          "sentenceCategory": {
            "type": "string",
            "description": "The sentence category e.g. 2003 or Licence"
          },
          "sentenceCalculationType": {
            "type": "string",
            "description": "The sentence calculation type e.g. R or ADIMP_ORA"
          },
          "sentenceTypeDescription": {
            "type": "string",
            "description": "The sentence type description e.g. Standard Determinate Sentence"
          },
          "sentenceStartDate": {
            "type": "string",
            "description": "The sentence start date for this sentence (aka court date)",
            "format": "date"
          },
          "sentenceEndDate": {
            "type": "string",
            "description": "The sentence end date for this sentence",
            "format": "date"
          },
          "fineAmount": {
            "type": "number",
            "description": "Fine amount.",
            "format": "double"
          },
          "lineSeq": {
            "type": "integer",
            "description": "Sentence line number",
            "format": "int64",
            "example": 1
          },
          "offences": {
            "type": "array",
            "description": "The offences related to this sentence (will usually only have one offence per sentence)",
            "items": {
              "$ref": "#/components/schemas/OffenderOffence"
            }
          },
          "terms": {
            "type": "array",
            "description": "The terms related to this sentence (will usually only have one term per sentence)",
            "items": {
              "$ref": "#/components/schemas/Terms"
            }
          }
        },
        "description": "Offender sentence and offence details"
      },
      "Terms": {
        "required": [
          "lifeSentence",
          "sentenceTermCode",
          "startDate",
          "termSequence"
        ],
        "type": "object",
        "properties": {
          "termSequence": {
            "type": "integer",
            "description": "Sentence term number within sentence.",
            "format": "int32",
            "example": 1
          },
          "consecutiveTo": {
            "type": "integer",
            "description": "Sentence number which this sentence follows if consecutive, otherwise concurrent.",
            "format": "int32",
            "example": 2
          },
          "sentenceType": {
            "type": "string",
            "description": "Sentence type, using reference data from table SENTENCE_CALC_TYPES.",
            "example": "2"
          },
          "sentenceTermCode": {
            "type": "string",
            "description": "Sentence term code.",
            "example": "IMP"
          },
          "sentenceTypeDescription": {
            "type": "string",
            "description": "Sentence type description.",
            "example": "2"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of sentence term.",
            "format": "date",
            "example": "2018-12-31"
          },
          "years": {
            "type": "integer",
            "description": "Sentence length years.",
            "format": "int32"
          },
          "months": {
            "type": "integer",
            "description": "Sentence length months.",
            "format": "int32"
          },
          "weeks": {
            "type": "integer",
            "description": "Sentence length weeks.",
            "format": "int32"
          },
          "days": {
            "type": "integer",
            "description": "Sentence length days.",
            "format": "int32"
          },
          "lifeSentence": {
            "type": "boolean",
            "description": "Whether this is a life sentence."
          }
        },
        "description": "Offender Sentence terms details for booking id"
      },
      "Belief": {
        "required": [
          "addedByFirstName",
          "addedByLastName",
          "beliefCode",
          "beliefDescription",
          "beliefId",
          "bookingId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Prisoner booking id",
            "format": "int64",
            "example": 1123456
          },
          "beliefId": {
            "type": "integer",
            "description": "Offender belief id",
            "format": "int64",
            "example": 1123456
          },
          "beliefCode": {
            "type": "string",
            "description": "Belief Code",
            "example": "SCIE"
          },
          "beliefDescription": {
            "type": "string",
            "description": "Description associated with the belief code",
            "example": "Scientologist"
          },
          "startDate": {
            "type": "string",
            "description": "Date the belief started",
            "format": "date",
            "example": "2024-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "Date the belief ended",
            "format": "date",
            "example": "2024-12-12"
          },
          "changeReason": {
            "type": "boolean",
            "description": "Was a reason given for change of belief?"
          },
          "comments": {
            "type": "string",
            "description": "Comments describing reason for change of belief"
          },
          "addedByFirstName": {
            "type": "string",
            "description": "First name of staff member that added belief"
          },
          "addedByLastName": {
            "type": "string",
            "description": "Last name of staff member that added belief"
          },
          "updatedByFirstName": {
            "type": "string",
            "description": "First name of staff member that updated belief"
          },
          "updatedByLastName": {
            "type": "string",
            "description": "Last name of staff member that updated belief"
          },
          "updatedDate": {
            "type": "string",
            "description": "Date belief was updated",
            "format": "date"
          },
          "verified": {
            "type": "boolean",
            "description": "Verified flag"
          }
        }
      },
      "BaseSentenceCalcDates": {
        "type": "object",
        "properties": {
          "sentenceExpiryDate": {
            "type": "string",
            "description": "SED - date on which sentence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "automaticReleaseDate": {
            "type": "string",
            "description": "ARD - calculated automatic (unconditional) release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "conditionalReleaseDate": {
            "type": "string",
            "description": "CRD - calculated conditional release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonParoleDate": {
            "type": "string",
            "description": "NPD - calculated non-parole date for offender (relating to the 1991 act).",
            "format": "date",
            "example": "2020-02-03"
          },
          "postRecallReleaseDate": {
            "type": "string",
            "description": "PRRD - calculated post-recall release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryDate": {
            "type": "string",
            "description": "LED - date on which offender licence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewEligibilityDate": {
            "type": "string",
            "description": "HDCED - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityDate": {
            "type": "string",
            "description": "PED - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "homeDetentionCurfewActualDate": {
            "type": "string",
            "description": "HDCAD - the offender's actual home detention curfew date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "actualParoleDate": {
            "type": "string",
            "description": "APD - the offender's actual parole date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "releaseOnTemporaryLicenceDate": {
            "type": "string",
            "description": "ROTL - the date on which offender will be released on temporary licence.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "ERSED - the date on which offender will be eligible for early removal (under the Early Removal Scheme for foreign nationals).",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyTermDate": {
            "type": "string",
            "description": "ETD - early term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "midTermDate": {
            "type": "string",
            "description": "MTD - mid term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "lateTermDate": {
            "type": "string",
            "description": "LTD - late term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryDate": {
            "type": "string",
            "description": "TUSED - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffDate": {
            "type": "string",
            "description": "Date on which minimum term is reached for parole (indeterminate/life sentences).",
            "format": "date",
            "example": "2020-02-03"
          },
          "dtoPostRecallReleaseDate": {
            "type": "string",
            "description": "DPRRD - Detention training order post recall release date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffEarlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "TERSED - Tariff early removal scheme eligibility date",
            "format": "date",
            "example": "2020-02-03"
          },
          "effectiveSentenceEndDate": {
            "type": "string",
            "description": "Effective sentence end date",
            "format": "date",
            "example": "2020-02-03"
          }
        },
        "description": "Base Sentence Calc Dates"
      },
      "OffenderSentenceCalcBaseSentenceCalcDates": {
        "required": [
          "agencyLocationId",
          "bookingId",
          "firstName",
          "lastName",
          "mostRecentActiveBooking",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id.",
            "format": "int64",
            "example": 12341321
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference",
            "example": "A1000AA"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "agencyLocationId": {
            "type": "string",
            "description": "Agency Id",
            "example": "LEI"
          },
          "mostRecentActiveBooking": {
            "type": "boolean",
            "description": "Is this the most recent active booking",
            "example": true
          },
          "sentenceDetail": {
            "$ref": "#/components/schemas/BaseSentenceCalcDates"
          }
        },
        "description": "Offender Sentence Calculation"
      },
      "OffenderCalculatedKeyDates": {
        "required": [
          "effectiveSentenceEndDate",
          "sentenceLength"
        ],
        "type": "object",
        "properties": {
          "homeDetentionCurfewEligibilityDate": {
            "type": "string",
            "description": "HDCED - date on which offender will be eligible for home detention curfew.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyTermDate": {
            "type": "string",
            "description": "ETD - early term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "midTermDate": {
            "type": "string",
            "description": "MTD - mid term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "lateTermDate": {
            "type": "string",
            "description": "LTD - late term date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "dtoPostRecallReleaseDate": {
            "type": "string",
            "description": "DPRRD - Detention training order post recall release date",
            "format": "date",
            "example": "2020-02-03"
          },
          "automaticReleaseDate": {
            "type": "string",
            "description": "ARD - calculated automatic (unconditional) release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "conditionalReleaseDate": {
            "type": "string",
            "description": "CRD - calculated conditional release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "paroleEligibilityDate": {
            "type": "string",
            "description": "PED - date on which offender is eligible for parole.",
            "format": "date",
            "example": "2020-02-03"
          },
          "nonParoleDate": {
            "type": "string",
            "description": "NPD - calculated non-parole date for offender (relating to the 1991 act).",
            "format": "date",
            "example": "2020-02-03"
          },
          "licenceExpiryDate": {
            "type": "string",
            "description": "LED - date on which offender licence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "postRecallReleaseDate": {
            "type": "string",
            "description": "PRRD - calculated post-recall release date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "sentenceExpiryDate": {
            "type": "string",
            "description": "SED - date on which sentence expires.",
            "format": "date",
            "example": "2020-02-03"
          },
          "topupSupervisionExpiryDate": {
            "type": "string",
            "description": "TUSED - top-up supervision expiry date for offender.",
            "format": "date",
            "example": "2020-02-03"
          },
          "earlyRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "ERSED - Early Removal Scheme Eligibility Date",
            "format": "date",
            "example": "2020-02-03"
          },
          "effectiveSentenceEndDate": {
            "type": "string",
            "description": "Effective sentence end date.",
            "format": "date",
            "example": "2020-02-03"
          },
          "sentenceLength": {
            "type": "string",
            "description": "Sentence length in the format 00 years/00 months/00 days.",
            "example": "11/00/00"
          },
          "homeDetentionCurfewApprovedDate": {
            "type": "string",
            "description": "HDCAD - Home Detention Curfew Approved date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffDate": {
            "type": "string",
            "description": "Tarrif - Tarrif date",
            "format": "date",
            "example": "2020-02-03"
          },
          "tariffExpiredRemovalSchemeEligibilityDate": {
            "type": "string",
            "description": "Tarrif Expiry date",
            "format": "date",
            "example": "2020-02-03"
          },
          "approvedParoleDate": {
            "type": "string",
            "description": "APD - Approved Parole date",
            "format": "date",
            "example": "2020-02-03"
          },
          "releaseOnTemporaryLicenceDate": {
            "type": "string",
            "description": "ROTL - Release on Temporary Licence",
            "format": "date",
            "example": "2020-02-03"
          },
          "judiciallyImposedSentenceLength": {
            "type": "string",
            "description": "Judicially imposed length in the format 00 years/00 months/00 days. Will default to 'sentenceLength'",
            "example": "11/00/00"
          },
          "comment": {
            "type": "string",
            "description": "Comments for the given calculation",
            "example": "Calculated for new sentence"
          },
          "reasonCode": {
            "type": "string",
            "description": "The reason code for the calculation",
            "example": "NEW"
          },
          "calculatedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the calculation was recorded",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Offender Calculated Key Dates"
      },
      "LatestTusedData": {
        "type": "object",
        "properties": {
          "latestTused": {
            "type": "string",
            "format": "date"
          },
          "latestOverrideTused": {
            "type": "string",
            "format": "date"
          },
          "comment": {
            "type": "string"
          },
          "offenderNo": {
            "type": "string"
          }
        },
        "description": "Latest TUSED dates and associated info for offender"
      },
      "SentenceCalculationSummary": {
        "required": [
          "agencyDescription",
          "agencyLocationId",
          "bookingId",
          "calculatedByUserId",
          "calculationDate",
          "calculationReason",
          "lastName",
          "offenderNo",
          "offenderSentCalculationId"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "offenderNo": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "agencyLocationId": {
            "type": "string"
          },
          "agencyDescription": {
            "type": "string"
          },
          "offenderSentCalculationId": {
            "type": "integer",
            "format": "int64"
          },
          "calculationDate": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "staffId": {
            "type": "integer",
            "format": "int64"
          },
          "commentText": {
            "type": "string"
          },
          "calculationReason": {
            "type": "string"
          },
          "calculatedByUserId": {
            "type": "string"
          }
        },
        "description": "Offender Sentence Calculation Summary"
      },
      "AssessmentSummary": {
        "required": [
          "assessmentCode",
          "assessmentDate",
          "assessmentSeq",
          "bookingId",
          "cellSharingAlertFlag",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking number",
            "format": "int64",
            "example": 123456
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number of assessment within booking",
            "format": "int32",
            "example": 1
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number).",
            "example": "GV09876N"
          },
          "classificationCode": {
            "type": "string",
            "description": "Classification code. This will not have a value if the assessment is incomplete or pending",
            "example": "STANDARD"
          },
          "assessmentCode": {
            "type": "string",
            "description": "Identifies the type of assessment",
            "example": "CSR"
          },
          "cellSharingAlertFlag": {
            "type": "boolean",
            "description": "Indicates whether this is a CSRA assessment"
          },
          "assessmentDate": {
            "type": "string",
            "description": "Date assessment was created",
            "format": "date",
            "example": "2018-02-11"
          },
          "assessmentAgencyId": {
            "type": "string",
            "description": "The assessment creation agency id",
            "example": "MDI"
          },
          "assessmentComment": {
            "type": "string",
            "description": "Comment from assessor",
            "example": "Comment details"
          },
          "assessorUser": {
            "type": "string",
            "description": "Username who made the assessment",
            "example": "NGK33Y"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Date of next review",
            "format": "date",
            "example": "2018-02-11"
          }
        },
        "description": "AssessmentSummary"
      },
      "AssessmentDetail": {
        "required": [
          "assessmentCode",
          "assessmentDate",
          "assessmentSeq",
          "bookingId",
          "cellSharingAlertFlag",
          "offenderNo",
          "questions"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking number",
            "format": "int64",
            "example": 123456
          },
          "assessmentSeq": {
            "type": "integer",
            "description": "Sequence number of assessment within booking",
            "format": "int32",
            "example": 1
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number (e.g. NOMS Number).",
            "example": "GV09876N"
          },
          "classificationCode": {
            "type": "string",
            "description": "Classification code. This will not have a value if the assessment is incomplete or pending",
            "example": "STANDARD"
          },
          "assessmentCode": {
            "type": "string",
            "description": "Identifies the type of assessment",
            "example": "CSR"
          },
          "cellSharingAlertFlag": {
            "type": "boolean",
            "description": "Indicates whether this is a CSRA assessment"
          },
          "assessmentDate": {
            "type": "string",
            "description": "Date assessment was created",
            "format": "date",
            "example": "2018-02-11"
          },
          "assessmentAgencyId": {
            "type": "string",
            "description": "The assessment creation agency id",
            "example": "MDI"
          },
          "assessmentComment": {
            "type": "string",
            "description": "Comment from assessor",
            "example": "Comment details"
          },
          "assessorUser": {
            "type": "string",
            "description": "Username who made the assessment",
            "example": "NGK33Y"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Date of next review",
            "format": "date",
            "example": "2018-02-11"
          },
          "assessmentCommitteeCode": {
            "type": "string",
            "description": "The code of the committee that conducted the assessment",
            "example": "REVIEW"
          },
          "assessmentCommitteeName": {
            "type": "string",
            "description": "The name of the committee that conducted the assessment",
            "example": "REVIEW"
          },
          "approvalDate": {
            "type": "string",
            "description": "Date of assessment approval",
            "format": "date",
            "example": "2018-02-11"
          },
          "approvalCommitteeCode": {
            "type": "string",
            "description": "The code of the committee that conducted the approval",
            "example": "REVIEW"
          },
          "approvalCommitteeName": {
            "type": "string",
            "description": "The name of the committee that conducted the approval",
            "example": "REVIEW"
          },
          "originalClassificationCode": {
            "type": "string",
            "description": "Classification code before it was reviewed",
            "example": "HI"
          },
          "classificationReviewReason": {
            "type": "string",
            "description": "The reason for the review of the classification",
            "example": "HI"
          },
          "overridingClassificationCode": {
            "type": "string",
            "description": "The classification code entered to override the calculated value prior to approval",
            "example": "HI"
          },
          "calculatedClassificationCode": {
            "type": "string",
            "description": "The classification code originally calculated by NOMIS based on the answers given to the questions when carrying out the initial review",
            "example": "HI"
          },
          "approvedClassificationCode": {
            "type": "string",
            "description": "The classification code that has been approved",
            "example": "HI"
          },
          "approvalComment": {
            "type": "string",
            "description": "Comment added at approval of classification code",
            "example": "Comment"
          },
          "overrideReason": {
            "type": "string",
            "description": "The reason given for overriding the calculated classification code",
            "example": "Overriding comment"
          },
          "questions": {
            "type": "array",
            "description": "Assessment questions and answers, in the order they were asked",
            "items": {
              "$ref": "#/components/schemas/AssessmentQuestion"
            }
          }
        },
        "description": "AssessmentDetail"
      },
      "AssessmentQuestion": {
        "required": [
          "question"
        ],
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "description": "Question"
          },
          "answer": {
            "type": "string",
            "description": "The answer given. More than one answer might have been given, in which case the other answers will be in the additionalAnswers property"
          },
          "additionalAnswers": {
            "type": "array",
            "description": "If a question has more than one answer, all but the first answer will be in this property",
            "items": {
              "type": "string",
              "description": "If a question has more than one answer, all but the first answer will be in this property"
            }
          }
        },
        "description": "AssessmentQuestion"
      },
      "PageOffenceDto": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OffenceDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "OffenderOutTodayDto": {
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName",
          "offenderNo",
          "timeOut"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender Unique Reference"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "reasonDescription": {
            "type": "string",
            "description": "Reason for out movement"
          },
          "timeOut": {
            "type": "string",
            "format": "partial-time"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "description": "Offender out today details"
      },
      "OffenderIn": {
        "required": [
          "bookingId",
          "dateOfBirth",
          "firstName",
          "fromAgencyDescription",
          "fromAgencyId",
          "fromCity",
          "lastName",
          "location",
          "movementDateTime",
          "movementTime",
          "offenderNo",
          "toAgencyDescription",
          "toAgencyId",
          "toCity"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number"
          },
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fromAgencyId": {
            "type": "string",
            "description": "Id for Agency travelling from"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "Description for Agency travelling from"
          },
          "toAgencyId": {
            "type": "string",
            "description": "Id for Agency travelling to"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "Description for Agency travelling to"
          },
          "fromCity": {
            "type": "string",
            "description": "City offender was received from"
          },
          "toCity": {
            "type": "string",
            "description": "City offender was sent to"
          },
          "movementTime": {
            "type": "string",
            "description": "Movement time",
            "format": "partial-time"
          },
          "movementDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Movement date time",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "type": "string",
            "description": "Description of the offender's (internal) location"
          }
        },
        "description": "Summary of an offender counted as Establishment Roll - In"
      },
      "CourtEventBasic": {
        "required": [
          "court",
          "eventSubType",
          "offenderNo",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (NOMS ID)",
            "example": "G3878UK"
          },
          "court": {
            "type": "string",
            "description": "The agency code of the court",
            "example": "LEEDCC"
          },
          "courtDescription": {
            "type": "string",
            "description": "The court description",
            "example": "Leeds Crown Court"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The planned date and time of the start of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "eventSubType": {
            "type": "string",
            "description": "The court event subtype (from MOVE_RSN reference data)",
            "example": "CRT"
          },
          "eventDescription": {
            "type": "string",
            "description": "The event description",
            "example": "Court Appearance"
          },
          "hold": {
            "type": "boolean",
            "description": "Whether hold ordered by the court at this hearing"
          }
        },
        "description": "Basic Summary data for a scheduled court event"
      },
      "CourtEvent": {
        "required": [
          "bookingActiveFlag",
          "bookingInOutStatus",
          "commentText",
          "createDateTime",
          "directionCode",
          "endTime",
          "eventClass",
          "eventDate",
          "eventId",
          "eventStatus",
          "eventSubType",
          "eventType",
          "fromAgency",
          "fromAgencyDescription",
          "judgeName",
          "offenderNo",
          "startTime",
          "toAgency",
          "toAgencyDescription"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (NOMS ID)",
            "example": "G3878UK"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "eventId": {
            "type": "integer",
            "description": "The internal event ID",
            "format": "int64",
            "example": 12343434
          },
          "fromAgency": {
            "type": "string",
            "description": "The agency code ",
            "example": "LEI"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "The from agency description",
            "example": "HMP LEEDS"
          },
          "toAgency": {
            "type": "string",
            "description": "The agency code to which the transfer will be made (if an agency)",
            "example": "LEEDCC"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "The to agency description",
            "example": "Leeds Crown Court"
          },
          "eventDate": {
            "type": "string",
            "description": "The date on which the event is scheduled to occur",
            "format": "date",
            "example": "2019-12-01"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The planned date and time of the start of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The planned date and time of the end of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "eventClass": {
            "type": "string",
            "description": "The event class (from COURT_EVENTS)",
            "example": "EXT_MOV"
          },
          "eventType": {
            "type": "string",
            "description": "The event type",
            "example": "CRT"
          },
          "eventSubType": {
            "type": "string",
            "description": "The event sub-type",
            "example": "DP"
          },
          "eventStatus": {
            "type": "string",
            "description": "The event status - either SCH (scheduled) or COMP (completed)",
            "example": "SCH"
          },
          "judgeName": {
            "type": "string",
            "description": "Judge name, where available",
            "example": "Harris"
          },
          "directionCode": {
            "type": "string",
            "description": "The direction code (IN or OUT)",
            "example": "IN"
          },
          "commentText": {
            "type": "string",
            "description": "The comment text stored against this event",
            "example": "Restricted access to parking level"
          },
          "bookingActiveFlag": {
            "type": "boolean",
            "description": "The booking active flag",
            "example": true
          },
          "bookingInOutStatus": {
            "type": "string",
            "description": "The booking in or out status - either IN or OUT",
            "example": "OUT"
          }
        },
        "description": "Summary data for a scheduled court event"
      },
      "MovementSummary": {
        "required": [
          "createDateTime",
          "directionCode",
          "eventId",
          "fromAgency",
          "fromAgencyDescription",
          "movementReason",
          "movementTime",
          "movementType",
          "movementTypeDescription",
          "offenderNo",
          "toAgency",
          "toAgencyDescription"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (NOMS ID)",
            "example": "G3878UK"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Timestamp when the external movement record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "eventId": {
            "type": "integer",
            "description": "The internal event ID",
            "format": "int64",
            "example": 1223232
          },
          "fromAgency": {
            "type": "string",
            "description": "Agency travelling from",
            "example": "LEI"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "Description of the agency travelling from",
            "example": "HMP LEEDS"
          },
          "toAgency": {
            "type": "string",
            "description": "Agency travelling to",
            "example": "MDI"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "Description of the agency travelling to",
            "example": "HMP MOORLANDS"
          },
          "fromCity": {
            "type": "string",
            "description": "City offender was received from",
            "example": "LEEDS"
          },
          "toCity": {
            "type": "string",
            "description": "City offender was sent to",
            "example": "DONCASTER"
          },
          "arrestAgencyLocId": {
            "type": "string",
            "description": "The arresting agency location ID",
            "example": "SYPOL"
          },
          "internalScheduleType": {
            "type": "string",
            "description": "Internal schedule type"
          },
          "internalScheduleReasonCode": {
            "type": "string",
            "description": "Internal schedule reason code"
          },
          "toProvStatCode": {
            "type": "string",
            "description": "To prov stat code - from offender_external_movements"
          },
          "escortCode": {
            "type": "string",
            "description": "The escort code",
            "example": "PECS123"
          },
          "escortText": {
            "type": "string",
            "description": "The escort text",
            "example": "Secure van"
          },
          "movementType": {
            "type": "string",
            "description": "ADM (admission), CRT (court), REL (release), TAP (temporary absence) or TRN (transfer)",
            "example": "ADM",
            "enum": [
              "ADM",
              "CRT",
              "REL",
              "TAP",
              "TRN"
            ]
          },
          "movementTypeDescription": {
            "type": "string",
            "description": "Description of the movement type",
            "example": "Admission"
          },
          "directionCode": {
            "type": "string",
            "description": "IN or OUT",
            "example": "IN"
          },
          "movementTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Movement date and time in Europe/London local time format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "movementReason": {
            "type": "string",
            "description": "Description of movement reason",
            "example": "Convicted at court"
          },
          "commentText": {
            "type": "string",
            "description": "Comment",
            "example": "This is a free text comment"
          }
        },
        "description": "Summary data for a completed movement"
      },
      "ReleaseEvent": {
        "required": [
          "approvedReleaseDate",
          "bookingActiveFlag",
          "bookingInOutStatus",
          "commentText",
          "createDateTime",
          "eventClass",
          "eventId",
          "eventStatus",
          "fromAgency",
          "fromAgencyDescription",
          "movementReasonCode",
          "movementReasonDescription",
          "movementTypeCode",
          "movementTypeDescription",
          "offenderNo",
          "releaseDate"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (NOMS ID)",
            "example": "G3878UK"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "eventId": {
            "type": "integer",
            "description": "The internal event ID",
            "format": "int64",
            "example": 1234556
          },
          "fromAgency": {
            "type": "string",
            "description": "The agency code from which the release will be made",
            "example": "LEI"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "The agency description",
            "example": "HMP LEEDS"
          },
          "releaseDate": {
            "type": "string",
            "description": "The planned release date",
            "format": "date",
            "example": "2019-12-01"
          },
          "approvedReleaseDate": {
            "type": "string",
            "description": "The approved release date",
            "format": "date",
            "example": "2019-12-01"
          },
          "eventClass": {
            "type": "string",
            "description": "The event class - usually EXT_MOV",
            "example": "EXT_MOV"
          },
          "eventStatus": {
            "type": "string",
            "description": "The event status - either SCH (scheduled) or COMP (completed)",
            "example": "SCH"
          },
          "movementTypeCode": {
            "type": "string",
            "description": "The movement type code - from OFFENDER_IND_SCHEDULE",
            "example": "REL"
          },
          "movementTypeDescription": {
            "type": "string",
            "description": "The movement type description from reference data",
            "example": "Release at end of sentence"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "The movement reason code - from OFFENDER_IND_SCHEDULE",
            "example": "DD"
          },
          "movementReasonDescription": {
            "type": "string",
            "description": "The movement reason description from reference data",
            "example": "Release"
          },
          "commentText": {
            "type": "string",
            "description": "Any comment text entered against this event",
            "example": "Notes relating to this release"
          },
          "bookingActiveFlag": {
            "type": "boolean",
            "description": "The booking active flag",
            "example": true
          },
          "bookingInOutStatus": {
            "type": "string",
            "description": "The booking in or out status - either IN or OUT",
            "example": "OUT"
          }
        },
        "description": "Summary data for a scheduled offender release"
      },
      "TransferEvent": {
        "required": [
          "bookingActiveFlag",
          "bookingInOutStatus",
          "createDateTime",
          "directionCode",
          "endTime",
          "engagementCode",
          "escortCode",
          "eventClass",
          "eventDate",
          "eventId",
          "eventStatus",
          "eventSubType",
          "eventType",
          "fromAgency",
          "fromAgencyDescription",
          "judgeName",
          "offenderNo",
          "outcomeReasonCode",
          "performanceCode",
          "startTime",
          "toAgency",
          "toAgencyDescription",
          "toCity"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number(NOMS ID)",
            "example": "G3878UK"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the record was created in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "eventId": {
            "type": "integer",
            "description": "The internal event ID",
            "format": "int64",
            "example": 1232323
          },
          "fromAgency": {
            "type": "string",
            "description": "The agency code from which the event will start",
            "example": "LEI"
          },
          "fromAgencyDescription": {
            "type": "string",
            "description": "The from agency description",
            "example": "HMP LEEDS"
          },
          "toAgency": {
            "type": "string",
            "description": "The agency code to which the transfer will be made (if an agency)",
            "example": "MDI"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "The to agency description",
            "example": "HMP MOORLANDS"
          },
          "toCity": {
            "type": "string",
            "description": "The destination city when available",
            "example": "DONCASTER"
          },
          "eventStatus": {
            "type": "string",
            "description": "The event status - either SCH or COMP",
            "example": "SCH"
          },
          "eventClass": {
            "type": "string",
            "description": "The event class - from OFFENDER_IND_SCHEDULES",
            "example": "EXT_MOV"
          },
          "eventType": {
            "type": "string",
            "description": "The event type - from OFFENDER_IND_SCHEDULES",
            "example": "TRN"
          },
          "eventSubType": {
            "type": "string",
            "description": "The event sub-type - from OFFENDER_IND_SCHEDULES",
            "example": "PP"
          },
          "eventDate": {
            "type": "string",
            "description": "The date on which the event is scheduled to occur",
            "format": "date",
            "example": "2019-01-01"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The planned date and time of the start of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The planned date and time of the end of the event in Europe/London (ISO 8601) format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "outcomeReasonCode": {
            "type": "string",
            "description": "The outcome reason code - from offender_ind_schedules",
            "example": "CO"
          },
          "judgeName": {
            "type": "string",
            "description": "The name of the judge where known"
          },
          "engagementCode": {
            "type": "string",
            "description": "Engagement code",
            "example": "ENG"
          },
          "escortCode": {
            "type": "string",
            "description": "The escort code",
            "example": "DEF2"
          },
          "performanceCode": {
            "type": "string",
            "description": "The performance code",
            "example": "PERF1"
          },
          "directionCode": {
            "type": "string",
            "description": "The direction code (IN or OUT)",
            "example": "IN"
          },
          "bookingActiveFlag": {
            "type": "boolean",
            "description": "The booking active flag",
            "example": true
          },
          "bookingInOutStatus": {
            "type": "string",
            "description": "The booking in or out status - either IN or OUT from offender bookings",
            "example": "OUT"
          }
        },
        "description": "A scheduled offender movement event"
      },
      "TransferSummary": {
        "type": "object",
        "properties": {
          "courtEvents": {
            "type": "array",
            "description": "List of scheduled or completed court events",
            "items": {
              "$ref": "#/components/schemas/CourtEvent"
            }
          },
          "transferEvents": {
            "type": "array",
            "description": "List of scheduled or completed offender events",
            "items": {
              "$ref": "#/components/schemas/TransferEvent"
            }
          },
          "releaseEvents": {
            "type": "array",
            "description": "List of scheduled or completed release events",
            "items": {
              "$ref": "#/components/schemas/ReleaseEvent"
            }
          },
          "movements": {
            "type": "array",
            "description": "List of confirmed movements",
            "items": {
              "$ref": "#/components/schemas/MovementSummary"
            }
          }
        },
        "description": "The container object for transfer and movement events"
      },
      "MovementCount": {
        "required": [
          "in",
          "out"
        ],
        "type": "object",
        "properties": {
          "in": {
            "type": "integer",
            "description": "Number of prisoners arrived so far on given date",
            "format": "int32"
          },
          "out": {
            "type": "integer",
            "description": "Number of prisoners that have left so far on given date",
            "format": "int32"
          }
        },
        "description": "Establishment roll count in and out numbers"
      },
      "OffenderInReception": {
        "required": [
          "bookingId",
          "dateOfBirth",
          "firstName",
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number"
          },
          "bookingId": {
            "type": "integer",
            "description": "Booking Id",
            "format": "int64"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "description": "Summary of an offender counted as Establishment Roll - Reception"
      },
      "OffenderOut": {
        "required": [
          "bookingId",
          "dateOfBirth",
          "firstName",
          "lastName",
          "location",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Display Prisoner Number"
          },
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "description": "The prisoner's internal location (Cell)"
          }
        },
        "description": "Summary of an offender 'currently out' according to Establishment Roll"
      },
      "OutOnTemporaryAbsenceSummary": {
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName",
          "movementReason",
          "movementReasonCode",
          "movementTime",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Offender number (NOMS ID)",
            "example": "G3878UK"
          },
          "firstName": {
            "type": "string",
            "description": "Prisoner first name.",
            "example": "JOHN"
          },
          "lastName": {
            "type": "string",
            "description": "Prisoner's last name.",
            "example": "SMITH"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Prisoner's date of birth.",
            "format": "date",
            "example": "1980-05-02"
          },
          "movementTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Movement date and time in Europe/London local time format without timezone offset e.g. YYYY-MM-DDTHH:MM:SS.",
            "example": "2021-07-05T10:35:17"
          },
          "toAgency": {
            "type": "string",
            "description": "Agency travelling to",
            "example": "MDI"
          },
          "toAgencyDescription": {
            "type": "string",
            "description": "Description of the agency travelling to",
            "example": "HMP MOORLANDS"
          },
          "toCity": {
            "type": "string",
            "description": "City offender was sent to",
            "example": "DONCASTER"
          },
          "movementReasonCode": {
            "type": "string",
            "description": "The movement reason code",
            "example": "C1"
          },
          "movementReason": {
            "type": "string",
            "description": "Description of movement reason",
            "example": "Convicted at court"
          },
          "commentText": {
            "type": "string",
            "description": "Comment",
            "example": "This is a free text comment"
          }
        },
        "description": "Summary data for a completed movement"
      },
      "Keyworker": {
        "required": [
          "firstName",
          "lastName",
          "numberAllocated",
          "staffId",
          "status"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "description": "Unique identifier for staff member.",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "description": "Staff member's first name."
          },
          "lastName": {
            "type": "string",
            "description": "Staff member's last name."
          },
          "status": {
            "type": "string",
            "description": "Status of staff member."
          },
          "thumbnailId": {
            "type": "integer",
            "description": "Identifier for staff member image.",
            "format": "int64"
          },
          "numberAllocated": {
            "type": "integer",
            "description": "Current number allocated",
            "format": "int32"
          }
        },
        "description": "Keyworker Details"
      },
      "GangMemberDetail": {
        "required": [
          "firstName",
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "Prisoner Number of this gang member",
            "example": "A1234AA"
          },
          "firstName": {
            "type": "string",
            "description": "First name of this gang member",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of this gang member",
            "example": "Smith"
          },
          "prisonId": {
            "type": "string",
            "description": "Prison ID if inside or OUT if not inside",
            "example": "MDI"
          },
          "Moorland": {
            "type": "string",
            "description": "Name of the prison or Outside if not inside"
          },
          "cellLocation": {
            "type": "string",
            "description": "Cell location of the gang member (if inside)",
            "example": "MDI-A-1-001"
          }
        },
        "description": "Gang Member Detail"
      },
      "GangMemberSummary": {
        "required": [
          "currentGangs",
          "gangNonAssociations"
        ],
        "type": "object",
        "properties": {
          "member": {
            "$ref": "#/components/schemas/GangMemberDetail"
          },
          "currentGangs": {
            "type": "array",
            "description": "Current gang involvement",
            "items": {
              "$ref": "#/components/schemas/GangSummary"
            }
          },
          "gangNonAssociations": {
            "type": "array",
            "description": "Non associations with other gangs",
            "items": {
              "$ref": "#/components/schemas/GangNonAssociationSummary"
            }
          }
        },
        "description": "Summary of Gangs for a specified prisoner"
      },
      "GangNonAssociationSummary": {
        "required": [
          "code",
          "members",
          "name",
          "reason"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code assigned for the gang",
            "example": "A_GANG"
          },
          "name": {
            "type": "string",
            "description": "The name of the gang",
            "example": "A New Gang"
          },
          "reason": {
            "type": "string",
            "description": "Reason this gang should not be associated with other gang",
            "example": "Rival Gang"
          },
          "members": {
            "type": "array",
            "description": "List of members of this gang",
            "items": {
              "$ref": "#/components/schemas/GangMemberDetail"
            }
          }
        },
        "description": "Non associations Gang information"
      },
      "GangSummary": {
        "required": [
          "code",
          "name",
          "numberOfMembers"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code assigned for the gang",
            "example": "A_GANG"
          },
          "name": {
            "type": "string",
            "description": "The name of the gang",
            "example": "A New Gang"
          },
          "comment": {
            "type": "string",
            "description": "Information about this member within the gang",
            "example": "Leader of gang"
          },
          "numberOfMembers": {
            "type": "integer",
            "description": "Number of members in this gang",
            "format": "int64",
            "example": 15
          }
        },
        "description": "Gang Summary"
      },
      "PageEducation": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Education"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "CourtEventDetails": {
        "required": [
          "courtEventType",
          "courtLocation",
          "eventId",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "courtLocation": {
            "type": "string"
          },
          "courtEventType": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "caseReference": {
            "type": "string"
          }
        }
      },
      "CourtDateCharge": {
        "type": "object",
        "properties": {
          "chargeId": {
            "type": "integer",
            "description": "The id of the charge",
            "format": "int64"
          },
          "offenceCode": {
            "type": "string",
            "description": "The offence code of the office in the court case"
          },
          "offenceStatue": {
            "type": "string",
            "description": "The offence statute of the office in the court case"
          },
          "offenceDescription": {
            "type": "string",
            "description": "The offence description"
          },
          "offenceDate": {
            "type": "string",
            "description": "The date of the offence",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "description": "The offence end date",
            "format": "date"
          },
          "guilty": {
            "type": "boolean",
            "description": "Was the verdict guilty or not guilty"
          },
          "courtCaseId": {
            "type": "integer",
            "description": "The id of the court case",
            "format": "int64"
          },
          "courtCaseRef": {
            "type": "string",
            "description": "Court case reference"
          },
          "courtLocation": {
            "type": "string",
            "description": "Court case location"
          },
          "sentenceSequence": {
            "type": "integer",
            "description": "The sequence of the sentence from this charge",
            "format": "int32"
          },
          "sentenceDate": {
            "type": "string",
            "description": "The sentence date",
            "format": "date"
          },
          "resultDescription": {
            "type": "string",
            "description": "The result description of the charge"
          },
          "active": {
            "type": "boolean",
            "description": "Is this charge active in NOMIS."
          }
        },
        "description": "A charge linked to a court date"
      },
      "CourtDateResult": {
        "required": [
          "bookNumber",
          "bookingId",
          "charge",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of this court date",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "description": "The date of the court result",
            "format": "date"
          },
          "resultCode": {
            "type": "string",
            "description": "The result code of the court date"
          },
          "resultDescription": {
            "type": "string",
            "description": "The result description of the court date"
          },
          "resultDispositionCode": {
            "type": "string",
            "description": "The disposition code of the result of the court date"
          },
          "charge": {
            "$ref": "#/components/schemas/CourtDateCharge"
          },
          "bookingId": {
            "type": "integer",
            "description": "The id of the booking this court date was linked to",
            "format": "int64"
          },
          "bookNumber": {
            "type": "string",
            "description": "The user readable ID for a booking"
          }
        },
        "description": "Represents a court date and its outcome"
      },
      "CourtDateChargeAndOutcomes": {
        "required": [
          "active",
          "bookNumber",
          "bookingId",
          "guilty",
          "outcomes"
        ],
        "type": "object",
        "properties": {
          "chargeId": {
            "type": "integer",
            "description": "The id of the charge",
            "format": "int64"
          },
          "offenceCode": {
            "type": "string",
            "description": "The offence code of the office in the court case"
          },
          "offenceStatue": {
            "type": "string",
            "description": "The offence statute of the office in the court case"
          },
          "offenceDescription": {
            "type": "string",
            "description": "The offence description"
          },
          "offenceDate": {
            "type": "string",
            "description": "The date of the offence",
            "format": "date"
          },
          "offenceEndDate": {
            "type": "string",
            "description": "The offence end date",
            "format": "date"
          },
          "guilty": {
            "type": "boolean",
            "description": "Was the verdict guilty or not guilty"
          },
          "courtCaseId": {
            "type": "integer",
            "description": "The id of the court case",
            "format": "int64"
          },
          "courtCaseRef": {
            "type": "string",
            "description": "Court case reference"
          },
          "courtLocation": {
            "type": "string",
            "description": "Court case location"
          },
          "sentenceSequence": {
            "type": "integer",
            "description": "The sequence of the sentence from this charge",
            "format": "int32"
          },
          "sentenceDate": {
            "type": "string",
            "description": "The sentence date",
            "format": "date"
          },
          "resultDescription": {
            "type": "string",
            "description": "The result description of the charge"
          },
          "bookingId": {
            "type": "integer",
            "description": "The id of the booking this court date was linked to",
            "format": "int64"
          },
          "bookNumber": {
            "type": "string",
            "description": "The user readable ID for a booking"
          },
          "active": {
            "type": "boolean",
            "description": "Is this charge active in NOMIS."
          },
          "outcomes": {
            "type": "array",
            "description": "All the court date outcomes for this charge",
            "items": {
              "$ref": "#/components/schemas/CourtDateOutcome"
            }
          }
        },
        "description": "A charge and all its court date outcomes"
      },
      "CourtDateOutcome": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of this court date",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "description": "The date of the court result",
            "format": "date"
          },
          "resultCode": {
            "type": "string",
            "description": "The result code of the court date"
          },
          "resultDescription": {
            "type": "string",
            "description": "The result description of the court date"
          },
          "resultDispositionCode": {
            "type": "string",
            "description": "The disposition code of the result of the court date"
          }
        },
        "description": "Represents the outcome for a court date of a given charge"
      },
      "BedAssignment": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Unique, numeric booking id. Used as a primary key when combined with the bed assignment sequence",
            "format": "int64",
            "example": 1234134
          },
          "livingUnitId": {
            "type": "integer",
            "description": "Identifier of living unit (e.g. cell) that offender is assigned to.",
            "format": "int64",
            "example": 123123
          },
          "assignmentDate": {
            "type": "string",
            "description": "Date the offender was assigned to a living unit.",
            "format": "date",
            "example": "2020-10-12"
          },
          "assignmentDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time the offender was moved to a living unit.",
            "example": "2021-07-05T10:35:17"
          },
          "assignmentReason": {
            "type": "string",
            "description": "Assignment reason code",
            "example": "ADM"
          },
          "assignmentEndDate": {
            "type": "string",
            "description": "Date an offender was moved out of the living unit",
            "format": "date",
            "example": "2020-11-12"
          },
          "assignmentEndDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time an offender was moved out of the living unit",
            "example": "2021-07-05T10:35:17"
          },
          "agencyId": {
            "type": "string",
            "description": "Agency of living unit",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Description of living unit (e.g. cell) ",
            "example": "MDI-1-1-2"
          },
          "bedAssignmentHistorySequence": {
            "type": "integer",
            "description": "Bed assignment sequence. Used as a primary key when combined with the booking id",
            "format": "int32",
            "example": 2
          },
          "movementMadeBy": {
            "type": "string",
            "description": "the staff member responsible for the movement of a prisoner",
            "example": "KQJ74F"
          },
          "offenderNo": {
            "type": "string",
            "description": "Offender number",
            "example": "A1234AA"
          }
        },
        "description": "Bed assignment history entry"
      },
      "OffenderCell": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The case identifier",
            "format": "int64",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "LEI-1-1"
          },
          "userDescription": {
            "type": "string",
            "description": "Description",
            "example": "LEI-1-1"
          },
          "capacity": {
            "type": "integer",
            "description": "Capacity",
            "format": "int32",
            "example": 2
          },
          "noOfOccupants": {
            "type": "integer",
            "description": "Number of occupants",
            "format": "int32",
            "example": 2
          },
          "attributes": {
            "type": "array",
            "description": "List of attributes",
            "items": {
              "$ref": "#/components/schemas/OffenderCellAttribute"
            }
          }
        },
        "description": "Offender cell details"
      },
      "OffenderCellAttribute": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute code",
            "example": "LC"
          },
          "description": {
            "type": "string",
            "description": "Attribute description",
            "example": "Listener Cell"
          }
        },
        "description": "Offender cell details"
      },
      "VisitSummary": {
        "required": [
          "hasVisits"
        ],
        "type": "object",
        "properties": {
          "startDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which next scheduled (i.e. not cancelled) event starts (if any)",
            "example": "2021-07-05T10:35:17"
          },
          "hasVisits": {
            "type": "boolean",
            "description": "Whether the prisoner has any visits (previous or next)"
          }
        },
        "description": "Visit summary"
      },
      "PageVisitWithVisitors": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisitWithVisitors"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "VisitDetails": {
        "required": [
          "attended",
          "completionStatus",
          "eventOutcome",
          "eventStatus",
          "startTime",
          "visitType"
        ],
        "type": "object",
        "properties": {
          "relationship": {
            "type": "string",
            "description": "Relationship of lead visitor to offender"
          },
          "location": {
            "type": "string",
            "description": "Location at which event takes place (could be an internal location, agency or external address)."
          },
          "prison": {
            "type": "string",
            "description": "Prison at which event takes place"
          },
          "attended": {
            "type": "boolean",
            "description": "Whether the visit was attended. Translation of eventOutcome into boolean. Defaults in NOMIS to true when the visit is created"
          },
          "eventStatus": {
            "type": "string",
            "description": "Status of event (EVENT_STS reference code)",
            "enum": [
              "EXP",
              "SCH",
              "COMP",
              "CANC"
            ]
          },
          "eventStatusDescription": {
            "type": "string",
            "description": "Description of eventStatus code"
          },
          "completionStatus": {
            "type": "string",
            "description": "Completion status of visit (VIS_COMPLETE reference code)",
            "enum": [
              "NORM",
              "SCH",
              "VDE",
              "OFFEND",
              "VISITOR",
              "CANC",
              "HMPOP"
            ]
          },
          "completionStatusDescription": {
            "type": "string",
            "description": "Description of completionStatus code"
          },
          "visitType": {
            "type": "string",
            "description": "Code for social (SCON) or official (OFFI) type of visit (VISIT_TYPE reference code)",
            "enum": [
              "OFFI",
              "SCON"
            ]
          },
          "visitTypeDescription": {
            "type": "string",
            "description": "Description of social or official visit",
            "enum": [
              "Official Visit",
              "Social Contact"
            ]
          },
          "leadVisitor": {
            "type": "string",
            "description": "Name of lead visitor (blank if there was no visiting order for this visit)"
          },
          "relationshipDescription": {
            "type": "string",
            "description": "Description of relationship code"
          },
          "startTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event starts",
            "example": "2021-07-05T10:35:17"
          },
          "endTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date and time at which event ends",
            "example": "2021-07-05T10:35:17"
          },
          "eventOutcome": {
            "type": "string",
            "description": "Whether attended (ATT) or not (ABS) (OUTCOMES reference code)",
            "enum": [
              "ATT",
              "ABS"
            ]
          },
          "eventOutcomeDescription": {
            "type": "string",
            "description": "Description of eventOutcome code"
          },
          "cancellationReason": {
            "type": "string",
            "description": "Reason for cancellation if not attended (MOVE_CANC_RS reference code)"
          },
          "cancelReasonDescription": {
            "type": "string",
            "description": "Description of cancellationReason code"
          },
          "visitors": {
            "type": "array",
            "description": "List of visitors on visit",
            "items": {
              "$ref": "#/components/schemas/Visitor"
            }
          },
          "searchType": {
            "type": "string",
            "description": "Type of search performed - mandatory if visit completed (SEARCH_LEVEL reference code)",
            "example": "FULL"
          },
          "searchTypeDescription": {
            "type": "string",
            "description": "Description of searchType code"
          }
        },
        "description": "Visit details"
      },
      "VisitWithVisitors": {
        "required": [
          "visitDetails",
          "visitors"
        ],
        "type": "object",
        "properties": {
          "visitors": {
            "type": "array",
            "description": "List of visitors on visit",
            "items": {
              "$ref": "#/components/schemas/Visitor"
            }
          },
          "visitDetails": {
            "$ref": "#/components/schemas/VisitDetails"
          }
        },
        "description": "List of visitors for a visit"
      },
      "Visitor": {
        "required": [
          "attended",
          "dateOfBirth",
          "firstName",
          "lastName",
          "leadVisitor",
          "personId",
          "relationship"
        ],
        "type": "object",
        "properties": {
          "relationship": {
            "type": "string",
            "description": "Relationship of visitor to offender"
          },
          "attended": {
            "type": "boolean",
            "description": "Whether the visitor attended.  Defaults in NOMIS to true when the visit is created so of limited value."
          },
          "personId": {
            "type": "integer",
            "description": "Person id of visitor",
            "format": "int64"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of visitor"
          },
          "firstName": {
            "type": "string",
            "description": "First name of visitor"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth of visitor",
            "format": "date"
          },
          "leadVisitor": {
            "type": "boolean",
            "description": "Flag marking the visitor as lead visitor or not (only set for visit orders)",
            "example": true
          }
        },
        "description": "Visitor"
      },
      "SecondaryLanguage": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Booking id",
            "format": "int64",
            "example": 10000
          },
          "code": {
            "type": "string",
            "description": "Language code",
            "example": "ENG"
          },
          "description": {
            "type": "string",
            "description": "Language description",
            "example": "English"
          },
          "canRead": {
            "type": "boolean",
            "description": "Reading proficiency"
          },
          "canWrite": {
            "type": "boolean",
            "description": "Writing proficiency"
          },
          "canSpeak": {
            "type": "boolean",
            "description": "Speaking proficiency"
          }
        },
        "description": "Secondary language"
      },
      "ReasonableAdjustment": {
        "type": "object",
        "properties": {
          "treatmentCode": {
            "type": "string",
            "description": "Treatment Code",
            "example": "WHEELCHR_ACC"
          },
          "commentText": {
            "type": "string",
            "description": "Comment Text",
            "example": "abcd"
          },
          "startDate": {
            "type": "string",
            "description": "Start Date",
            "format": "date",
            "example": "2010-06-21"
          },
          "endDate": {
            "type": "string",
            "description": "End Date",
            "format": "date",
            "example": "2010-06-21"
          },
          "agencyId": {
            "type": "string",
            "description": "The agency id where the adjustment was created",
            "example": "LEI"
          },
          "agencyDescription": {
            "type": "string",
            "description": "The formatted agency description where the adjustment was created",
            "example": "Moorland (HMP)"
          },
          "treatmentDescription": {
            "type": "string",
            "description": "Treatment Description",
            "example": "Wheelchair accessibility"
          },
          "personalCareNeedId": {
            "type": "integer",
            "description": "Personal care need ID",
            "format": "int64",
            "example": 1
          }
        },
        "description": "Reasonable Adjustment"
      },
      "ReasonableAdjustments": {
        "type": "object",
        "properties": {
          "reasonableAdjustments": {
            "type": "array",
            "description": "Reasonable Adjustments",
            "items": {
              "$ref": "#/components/schemas/ReasonableAdjustment"
            }
          }
        },
        "description": "Reasonable Adjustments"
      },
      "PropertyContainer": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "sealMark": {
            "type": "string",
            "description": "The case sequence number for the offender",
            "example": "MDI10"
          },
          "containerType": {
            "type": "string",
            "description": "The type of container",
            "example": "Valuables"
          }
        },
        "description": "Offender property container details"
      },
      "CourtHearings": {
        "type": "object",
        "properties": {
          "hearings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourtHearing"
            }
          }
        },
        "description": "Represents court hearings for an offender booking."
      },
      "CourtCase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The case identifier",
            "format": "int64",
            "example": 1
          },
          "caseSeq": {
            "type": "integer",
            "description": "The case sequence number for the offender",
            "format": "int32",
            "example": 1
          },
          "beginDate": {
            "type": "string",
            "description": "The begin date",
            "format": "date",
            "example": "2019-12-01"
          },
          "agency": {
            "$ref": "#/components/schemas/Agency"
          },
          "caseType": {
            "type": "string",
            "description": "The case type",
            "example": "Adult"
          },
          "caseInfoPrefix": {
            "type": "string",
            "description": "The prefix of the case number"
          },
          "caseInfoNumber": {
            "type": "string",
            "description": "The case information number",
            "example": "TD20177010"
          },
          "caseStatus": {
            "type": "string",
            "description": "The case status",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "CLOSED",
              "INACTIVE"
            ]
          },
          "courtHearings": {
            "type": "array",
            "description": "Court hearings associated with the court case",
            "items": {
              "$ref": "#/components/schemas/CourtHearing"
            }
          }
        },
        "description": "Offender court case details"
      },
      "Contact": {
        "required": [
          "activeFlag",
          "approvedVisitorFlag",
          "awareOfChargesFlag",
          "bookingId",
          "canBeContactedFlag",
          "contactType",
          "createDateTime",
          "emergencyContact",
          "firstName",
          "lastName",
          "nextOfKin",
          "relationship"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "description": "Last name of the contact",
            "example": "SMITH"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "JOHN"
          },
          "middleName": {
            "type": "string",
            "description": "Middle Names",
            "example": "MARK"
          },
          "contactType": {
            "type": "string",
            "description": "Contact type",
            "example": "O"
          },
          "contactTypeDescription": {
            "type": "string",
            "description": "Contact type text",
            "example": "Official"
          },
          "relationship": {
            "type": "string",
            "description": "Relationship to prisoner",
            "example": "RO"
          },
          "relationshipDescription": {
            "type": "string",
            "description": "Relationship text",
            "example": "Responsible Officer"
          },
          "commentText": {
            "type": "string",
            "description": "Comments",
            "example": "Some additional information"
          },
          "emergencyContact": {
            "type": "boolean",
            "description": "Is an emergency contact",
            "example": true
          },
          "nextOfKin": {
            "type": "boolean",
            "description": "Indicates that the contact is Next of Kin Type",
            "example": false
          },
          "relationshipId": {
            "type": "integer",
            "description": "ID of the relationship (internal)",
            "format": "int64",
            "example": 10466277
          },
          "personId": {
            "type": "integer",
            "description": "id of the person contact",
            "format": "int64",
            "example": 5871791
          },
          "activeFlag": {
            "type": "boolean",
            "description": "Active indicator flag.",
            "example": true
          },
          "expiryDate": {
            "type": "string",
            "description": "Date made inactive",
            "format": "date",
            "example": "2019-01-31"
          },
          "approvedVisitorFlag": {
            "type": "boolean",
            "description": "Approved Visitor",
            "example": true
          },
          "canBeContactedFlag": {
            "type": "boolean",
            "description": "Can be contacted",
            "example": false
          },
          "awareOfChargesFlag": {
            "type": "boolean",
            "description": "Aware of charges against prisoner",
            "example": true
          },
          "contactRootOffenderId": {
            "type": "integer",
            "description": "Link to root offender ID",
            "format": "int64",
            "example": 5871791
          },
          "bookingId": {
            "type": "integer",
            "description": "Offender Booking Id for this contact",
            "format": "int64",
            "example": 2468081
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date time the contact was created",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Contact"
      },
      "ContactDetail": {
        "required": [
          "bookingId",
          "nextOfKin",
          "otherContacts"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int64"
          },
          "nextOfKin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "otherContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        },
        "description": "Contacts Details for offender"
      },
      "PageBedAssignment": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BedAssignment"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "CaseNoteCount": {
        "required": [
          "bookingId",
          "count",
          "subType",
          "type"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Offender booking id",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "Case note type."
          },
          "subType": {
            "type": "string",
            "description": "Case note sub-type."
          },
          "count": {
            "type": "integer",
            "description": "Number of case notes of defined type and subType for offender.",
            "format": "int64"
          },
          "fromDate": {
            "type": "string",
            "description": "Count includes case notes occurring on or after this date (in YYYY-MM-DD format).",
            "format": "date"
          },
          "toDate": {
            "type": "string",
            "description": "Count includes case notes occurring on or before this date (in YYYY-MM-DD format).",
            "format": "date"
          }
        },
        "description": "Case Note Count Detail"
      },
      "Account": {
        "required": [
          "cash",
          "currency",
          "damageObligations",
          "savings",
          "spends"
        ],
        "type": "object",
        "properties": {
          "spends": {
            "type": "number",
            "description": "Spends sub account balance."
          },
          "cash": {
            "type": "number",
            "description": "Cash sub account balance."
          },
          "savings": {
            "type": "number",
            "description": "Saves sub account balance."
          },
          "damageObligations": {
            "type": "number",
            "description": "Damage obligation balance."
          },
          "currency": {
            "type": "string",
            "description": "Currency of these balances."
          }
        },
        "description": "Prisoner Account Balance"
      },
      "PageAlert": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PagePrisonerBookingSummary": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrisonerBookingSummary"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PrisonerBookingSummary": {
        "required": [
          "age",
          "agencyId",
          "bookingId",
          "dateOfBirth",
          "firstName",
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "description": "Unique, numeric booking id.",
            "format": "int64",
            "example": 1234134
          },
          "bookingNo": {
            "type": "string",
            "description": "Book number.",
            "example": "A12121"
          },
          "offenderNo": {
            "type": "string",
            "description": "Prisoner number (e.g. NOMS Number).",
            "example": "A1234AA"
          },
          "firstName": {
            "type": "string",
            "description": "Prisoner first name.",
            "example": "JOHN"
          },
          "middleName": {
            "type": "string",
            "description": "Prisoner's middle name.",
            "example": "ASHLEY"
          },
          "lastName": {
            "type": "string",
            "description": "Prisoner's last name.",
            "example": "SMITH"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Prisoner's date of birth.",
            "format": "date",
            "example": "1980-05-02"
          },
          "age": {
            "type": "integer",
            "description": "Prisoner's current age.",
            "format": "int32",
            "example": 32
          },
          "agencyId": {
            "type": "string",
            "description": "Identifier of agency that prisoner is associated with.",
            "example": "MDI"
          },
          "assignedLivingUnitId": {
            "type": "integer",
            "description": "Identifier of living unit (e.g. cell) that prisoner is assigned to.",
            "format": "int64",
            "example": 123123
          },
          "facialImageId": {
            "type": "integer",
            "description": "Identifier of facial image of prisoner.",
            "format": "int64",
            "example": 1241241
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "The imprisonment status of the prisoner",
            "example": "SENT"
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status",
            "example": "REMAND",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "convictedStatus": {
            "type": "string",
            "description": "Convicted Status",
            "example": "Convicted",
            "enum": [
              "Convicted",
              "Remand"
            ]
          },
          "assignedLivingUnitDesc": {
            "type": "string",
            "description": "Description of living unit (e.g. cell) that prisoner is assigned to.",
            "example": "MDI-1-1-3"
          }
        },
        "description": "Prisoner Booking Summary"
      },
      "VisitBalances": {
        "required": [
          "remainingPvo",
          "remainingVo"
        ],
        "type": "object",
        "properties": {
          "remainingVo": {
            "type": "integer",
            "description": "Balance of visit orders remaining",
            "format": "int32"
          },
          "remainingPvo": {
            "type": "integer",
            "description": "Balance of privilege visit orders remaining",
            "format": "int32"
          },
          "latestIepAdjustDate": {
            "type": "string",
            "description": "Date of last IEP adjustment for Visit orders",
            "format": "date"
          },
          "latestPrivIepAdjustDate": {
            "type": "string",
            "description": "Date of last IEP adjustment for Privilege Visit orders",
            "format": "date"
          }
        },
        "description": "Balances of visit orders and privilege visit orders"
      },
      "AgencyPrisonerPayProfile": {
        "required": [
          "agencyId",
          "autoPayFlag",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency identifier",
            "example": "MDI"
          },
          "startDate": {
            "type": "string",
            "description": "The start date when this pay profile took effect",
            "format": "date",
            "example": "2022-10-01"
          },
          "endDate": {
            "type": "string",
            "description": "The end date when this pay profile will stop taking effect",
            "format": "date",
            "example": "2027-10-01"
          },
          "autoPayFlag": {
            "type": "boolean",
            "description": "Whether automatic payments are enabled",
            "example": true
          },
          "payFrequency": {
            "type": "integer",
            "description": "The frequency that payroll runs for this agency (usually 1)",
            "format": "int32",
            "example": 1
          },
          "weeklyAbsenceLimit": {
            "type": "integer",
            "description": "The number of absences that are acceptable within one week",
            "format": "int32",
            "example": 5
          },
          "minHalfDayRate": {
            "type": "number",
            "description": "The minimum value for a half-day rate",
            "example": 1.25
          },
          "maxHalfDayRate": {
            "type": "number",
            "description": "The maximum value for a half-day rate",
            "example": 5.0
          },
          "maxPieceWorkRate": {
            "type": "number",
            "description": "The maximum value for piece work earnings",
            "example": 6.0
          },
          "maxBonusRate": {
            "type": "number",
            "description": "The maximum value for a bonus award",
            "example": 3.0
          },
          "backdateDays": {
            "type": "integer",
            "description": "The number of days allowed to backdate attendance before it locks.",
            "format": "int32",
            "example": 7
          },
          "defaultPayBandCode": {
            "type": "string",
            "description": "The default pay band to use when allocating offenders to paid activities.",
            "example": "1"
          }
        },
        "description": "Agency prisoner pay profile"
      },
      "LocationGroup": {
        "required": [
          "children",
          "key",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the group"
          },
          "key": {
            "type": "string",
            "description": "A key for the group"
          },
          "children": {
            "type": "array",
            "description": "The child groups of this group",
            "items": {
              "$ref": "#/components/schemas/LocationGroup"
            }
          }
        },
        "description": "Cell Locations are grouped for unlock lists as a 2 level tree. The two levels are referred to as Location and Sub-Location in the digital prison services UI. Each (location/sub-location) group has a name that is understood by prison officers and also serves as a key to retrieve the corresponding Cell Locations and information about their occupants."
      },
      "LocationSummary": {
        "required": [
          "description",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "description": "Location identifier.",
            "format": "int64"
          },
          "userDescription": {
            "type": "string",
            "description": "User-friendly location description."
          },
          "description": {
            "type": "string",
            "description": "Location description."
          }
        },
        "description": "Location Summary Details"
      },
      "AgencyEstablishmentType": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code.",
            "example": "IM"
          },
          "description": {
            "type": "string",
            "description": "Description.",
            "example": "Closed Young Offender Institute (Male)"
          }
        },
        "description": "Agency Establishment Type"
      },
      "AgencyEstablishmentTypes": {
        "required": [
          "agencyId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency id",
            "example": "MDI"
          },
          "establishmentTypes": {
            "type": "array",
            "description": "The establishment types for the agency.",
            "items": {
              "$ref": "#/components/schemas/AgencyEstablishmentType"
            }
          }
        },
        "description": "Agency Establishment Types"
      },
      "Prison": {
        "required": [
          "active",
          "agencyId",
          "agencyType",
          "description"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Agency identifier.",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Agency description.",
            "example": "Moorland (HMP & YOI)"
          },
          "longDescription": {
            "type": "string",
            "description": "Long description of the agency",
            "example": "Moorland (HMP & YOI)"
          },
          "agencyType": {
            "type": "string",
            "description": "Agency type.  Reference domain is AGY_LOC_TYPE.  Will be INST for a prison.",
            "example": "INST",
            "enum": [
              "CRC",
              "POLSTN",
              "INST",
              "COMM",
              "APPR",
              "CRT",
              "POLICE",
              "IMDC",
              "TRN",
              "OUT",
              "YOT",
              "SCH",
              "STC",
              "HOST",
              "AIRPORT",
              "HSHOSP",
              "HOSPITAL",
              "PECS",
              "PAR",
              "PNP",
              "PSY"
            ]
          },
          "active": {
            "type": "boolean",
            "description": "Indicates the Agency is active",
            "example": true
          }
        }
      },
      "PrisonContactDetail": {
        "required": [
          "addressType",
          "addresses",
          "agencyId",
          "agencyType",
          "city",
          "country",
          "description",
          "formattedDescription",
          "locality",
          "phones",
          "postCode",
          "premise"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "string",
            "description": "Identifier of agency/prison.",
            "example": "MDI"
          },
          "description": {
            "type": "string",
            "description": "Agency description.",
            "example": "MOORLAND (HMP & YOI)"
          },
          "formattedDescription": {
            "type": "string",
            "description": "Formatted agency description.",
            "example": "Moorland (HMP & YOI)"
          },
          "agencyType": {
            "type": "string",
            "description": "Type of agency.",
            "example": "INST"
          },
          "addressType": {
            "type": "string",
            "description": "Type of address."
          },
          "premise": {
            "type": "string",
            "description": "The Prison name."
          },
          "locality": {
            "type": "string",
            "description": "Describes the geographic location."
          },
          "city": {
            "type": "string",
            "description": "Address city."
          },
          "country": {
            "type": "string",
            "description": "Address country."
          },
          "postCode": {
            "type": "string",
            "description": "Address postcode."
          },
          "phones": {
            "type": "array",
            "description": "List of Telephone details",
            "items": {
              "$ref": "#/components/schemas/Telephone"
            }
          },
          "addresses": {
            "type": "array",
            "description": "List of Address details",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        },
        "description": "Contacts details for agency"
      },
      "BookingAndSentenceAdjustments": {
        "type": "object",
        "properties": {
          "sentenceAdjustments": {
            "type": "array",
            "description": "Adjustments associated at a sentence level (of type RECALL_SENTENCE_REMAND, TAGGED_BAIL, RECALL_SENTENCE_TAGGED_BAIL, REMAND or UNUSED_REMAND)",
            "items": {
              "$ref": "#/components/schemas/SentenceAdjustmentValues"
            }
          },
          "bookingAdjustments": {
            "type": "array",
            "description": "Adjustments associated at a booking level (of type SPECIAL_REMISSION, ADDITIONAL_DAYS_AWARDED, RESTORED_ADDITIONAL_DAYS_AWARDED, UNLAWFULLY_AT_LARGE, LAWFULLY_AT_LARGE)",
            "items": {
              "$ref": "#/components/schemas/BookingAdjustment"
            }
          }
        },
        "description": "Adjustments associated at a booking level and a sentence level"
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
