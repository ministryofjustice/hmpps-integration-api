{
  "openapi": "3.0.1",
  "info": {
    "title": "Prisoner Search",
    "description": "<div>\n  <h2 id=\"overview\">Overview</h2>\n  <p>This service provides a number of endpoints for searching and reading prisoners that have been registered with the\n    HMPPS prison service. This may be current or previous prisoners or other people that might be in secure\n    hospitals.</p>\n  <h2 id=\"data-provided\">Data provided</h2>\n  <p>The vast majority of the data is sourced from the NOMIS system though in the future this is likely to change as\n    more HMPPS prison data is held outside NOMIS.</p>\n  <p>The data for a person is stored in Elastic Search and is updated after a record in NOMIS is changed. This is\n    typically about a minute after the data is changed in NOMIS. In the unlikely circumstance that your service needs\n    data that is 100% up to date with NOMIS then the\n    <a href=\"https://prison-api-dev.prison.service.justice.gov.uk/swagger-ui/index.html\">prison-api</a>\n    might be a better service to use.\n    One use case this might be appropriate for is if you need up-to-date data at the point a NOMIS prisoner event\n    is received; this service also updates its records as a result of NOMIS prisoner events, so you might encounter a\n    race\n    condition if your read is triggered from the same event.\n  </p>\n  <div>The data returned for each prisoner record is essentially a snapshot of key prisoner data. This includes the\n    following:\n    <ul>\n      <li>Identifiers from both NOMIS and those held in other systems</li>\n      <li>Personal details such as name and date of birth (including aliases)</li>\n      <li>Current prison status such as the current location (including cell)</li>\n      <li>Latest sentence details</li>\n      <li>Alerts</li>\n    </ul>\n    See the schema definition for the API for full details.\n  </div>\n  <h2 id=\"role-restrictions\">Role restrictions</h2>\n  <p>\n    Role restrictions in this service are applied by a `@PreAuthorize` annotation at either resource or service level.\n    Furthermore the annotation can be applied at individual method level or class level.\n  </p>\n  <p>\n    Each endpoint in this API documentation should normally include what restrictions are applied. If there is any doubt\n    then it is worth looking at the github repository at\n    https://github.com/ministryofjustice/hmpps-prisoner-search/ and looking at the endpoint in question.\n  </p>\n\n  The following roles are currently in use in this service:\n  <ul>\n    <li>\n      ROLE_PRISONER_SEARCH. This role grants access to all of the search endpoints.\n    </li>\n    <li>\n      ROLE_PRISONER_IN_PRISON_SEARCH. This role is limited to protect the \"/prison/{prisonId}/prisoners\" endpoint for\n      clients that only need access to this endpoint in prisoner offender search. For more general access the\n      ROLE_PRISONER_SEARCH would be more suitable.\n    </li>\n    <li>\n      ROLE_VIEW_PRISONER_DATA. This role is only needed at present for the \"/prisoner/{id}\" endpoint to retrieve\n      detailed information about a particular prisoner, as opposed to the rest of the search endpoints in this service\n      that can return multiple matches.\n    </li>\n    <li>\n      ROLE_GLOBAL_SEARCH. This role is deprecated and replaced by the ROLE_PRISONER_SEARCH. All of the endpoints in\n      this service that accept this role also accept ROLE_PRISONER_SEARCH so the latter should be used in preference.\n      It was originally created for Prison API and is still in use there.\n    </li>\n    <li>\n      ROLE_EVENTS_ADMIN. This role is only needed for the \"/events/prisoner/received/{prisonerNumber}\" endpoint\n      and is only required in the event that a prisoner event wasn't raised by the service when their data in the\n      service\n      had changed.\n    </li>\n  </ul>\n  <h2 id=\"types-of-endpoints\">Types of endpoints</h2>\n  <h3>Searching for a specific prisoner based on criteria</h3>\n  <p>\n    These are endpoints that use the core Elastic Search features to locate a prisoner record based on a set of\n    criteria;\n    for instance name, date of birth or unique identifier (such as the Police National Computer PNC number).\n    Typically, they return many results and a summary of those results would be presented to an end user.\n  </p>\n  <h3>Matching records</h3>\n  <p>\n    Similar to searching but typically using a criteria from a different system; for instance, key data from a probation\n    record or court record.\n    These will use an algorithm that matches based on data that is likely to be most reliable for matching; for\n    instance,\n    PNC number or name with date of birth.\n  </p>\n  <h3>Retrieving a specific record</h3>\n  <p>\n    Retrieving a specific record typically by a unique identifier; for instance, prisoner number (aka NOMS number). This\n    is a convenient way of viewing a summary of a prisoner record and is typically quicker than using the equivalent API\n    in <b>prison-api</b>.\n  </p>\n  <h3>Retrieving batches of records</h3>\n  <p>\n    Retrieving a batch of records either by supplying a list of identifiers or a criteria that will a match many\n    records;\n    for instance, all people in a prison wing or people to be released on a specific date.\n  </p>\n</div>\n",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2024-07-12.5912.1704335"
  },
  "servers": [
    {
      "url": "https://prisoner-search-dev.prison.service.justice.gov.uk/",
      "description": "Development"
    },
    {
      "url": "https://prisoner-search-preprod.prison.service.justice.gov.uk/",
      "description": "Pre-Production"
    },
    {
      "url": "https://prisoner-search.prison.service.justice.gov.uk/",
      "description": "Production"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local"
    }
  ],
  "security": [
    {
      "view-prisoner-data-role": [
        "read"
      ]
    },
    {
      "prisoner-search-role": [
        "read"
      ]
    },
    {
      "global-search-role": [
        "read"
      ]
    },
    {
      "prisoner-in-prison-search-role": [
        "read"
      ]
    },
    {
      "prisoner-search--prisoner--ro": [
        "read"
      ]
    }
  ],
  "tags": [
    {
      "name": "Popular",
      "description": "The most popular endpoints. Look here first when deciding which endpoint to use."
    },
    {
      "name": "Establishment search",
      "description": "Endpoints for searching for a prisoner within a prison"
    },
    {
      "name": "Global search",
      "description": "Endpoints for searching for a prisoner across the entire prison estate, including people that have previously been released"
    },
    {
      "name": "Batch",
      "description": "Endpoints designed to find a large number of prisoners with a single call"
    },
    {
      "name": "Matching",
      "description": "Endpoints designed for matching a prisoner with data from other sources"
    },
    {
      "name": "Deprecated",
      "description": "Endpoints that should no longer be used and will be removed in a future release"
    },
    {
      "name": "Specific use case",
      "description": "Endpoints that were designed for a specific use case and are unlikely to fit for general use"
    },
    {
      "name": "Experimental",
      "description": "Endpoints that have not been tried and tested in a production environment"
    }
  ],
  "paths": {
    "/prisoner/{id}": {
      "get": {
        "tags": [
          "Popular"
        ],
        "summary": "Get prisoner by prisoner number (AKA NOMS number)",
        "description": "Requires  ROLE_PRISONER_SEARCH or ROLE_VIEW_PRISONER_DATA role or PRISONER_SEARCH__PRISONER__RO",
        "operationId": "findByPrisonNumber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prisoner"
                }
              }
            }
          }
        },
        "security": [
          {
            "view-prisoner-data-role": []
          },
          {
            "prisoner-search-role": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "RestrictedPatientSearchCriteria": {
        "type": "object",
        "properties": {
          "prisonerIdentifier": {
            "type": "string",
            "description": "Prisoner identifier, one of prisoner number, book number, booking ID or PNC",
            "example": "A1234AA,"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "supportingPrisonIds": {
            "type": "array",
            "description": "List of supporting Prison Ids to restrict the search by. Unrestricted if not supplied or null",
            "example": [
              "MDI"
            ],
            "items": {
              "type": "string",
              "description": "List of supporting Prison Ids to restrict the search by. Unrestricted if not supplied or null",
              "example": "[\"MDI\"]"
            }
          }
        },
        "description": "Search Criteria for Prisoner Search"
      },
      "Address": {
        "required": [
          "fullAddress",
          "primaryAddress"
        ],
        "type": "object",
        "properties": {
          "fullAddress": {
            "type": "string",
            "description": "The full address on a single line",
            "example": "1 Main Street, Crookes, Sheffield, South Yorkshire, S10 1BP, England"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code",
            "example": "S10 1BP"
          },
          "startDate": {
            "type": "string",
            "description": "The date the address became active according to NOMIS",
            "format": "date",
            "example": "2020-07-17"
          },
          "primaryAddress": {
            "type": "boolean",
            "description": "Whether the address is currently marked as the primary address",
            "example": true
          },
          "phoneNumbers": {
            "type": "array",
            "description": "Phone numbers linked to the address. Note the phone number contains only numbers, no whitespace. Therefore searching on 'addresses.phoneNumbers.number' should not pass any non-numeric characters.",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          }
        },
        "description": "Addresses"
      },
      "BodyPartDetail": {
        "type": "object",
        "properties": {
          "bodyPart": {
            "type": "string",
            "description": "Part of the body that has the mark. From REFERENCE_CODES table where DOMAIN = BODY_PART. Allowable values extracted 08/02/2023.",
            "example": "Head",
            "enum": [
              "Ankle",
              "Arm",
              "Ear",
              "Elbow",
              "Face",
              "Finger",
              "Foot",
              "Hand",
              "Head",
              "Knee",
              "Leg",
              "Lip",
              "Neck",
              "Nose",
              "Shoulder",
              "Thigh",
              "Toe",
              "Torso"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional free text comment describing the mark",
            "example": "Skull and crossbones covering chest"
          }
        },
        "description": "List of parts of the body that have marks. This includes NOMIS physical details of type 'marks' and 'otherMarks'. If we find a comment with either 'tattoo' or 'scar' we also add to the list of tattoos or scars. From REFERENCE_CODES table where DOMAIN = BODY_PART. Allowable values extracted 08/02/2023."
      },
      "CurrentIncentive": {
        "required": [
          "dateTime",
          "level",
          "nextReviewDate"
        ],
        "type": "object",
        "properties": {
          "level": {
            "$ref": "#/components/schemas/IncentiveLevel"
          },
          "dateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "Date time of the incentive",
            "example": "2021-07-05T10:35:17"
          },
          "nextReviewDate": {
            "type": "string",
            "description": "Schedule new review date",
            "format": "date",
            "example": "2022-11-10"
          }
        },
        "description": "Incentive level"
      },
      "EmailAddress": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address",
            "example": "john.smith@gmail.com"
          }
        },
        "description": "Email addresses"
      },
      "Identifier": {
        "required": [
          "createdDateTime",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of identifier",
            "example": "PNC, CRO, DL, NINO"
          },
          "value": {
            "type": "string",
            "description": "The identifier value",
            "example": "12/394773H"
          },
          "issuedDate": {
            "type": "string",
            "description": "The date the identifier was issued according to NOMIS",
            "format": "date",
            "example": "2020-07-17"
          },
          "issuedAuthorityText": {
            "type": "string",
            "description": "Free text entered into NOMIS when the identifier was recorded."
          },
          "createdDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date/time the identifier was created in the system",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "All identifiers for the prisoner including those recorded against aliases. Currently supports only PNC, CRO, NINO and DL."
      },
      "IncentiveLevel": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code",
            "example": "STD"
          },
          "description": {
            "type": "string",
            "description": "description",
            "example": "Standard"
          }
        },
        "description": "Incentive level"
      },
      "Offence": {
        "required": [
          "latestBooking",
          "offenceCode",
          "offenceDescription",
          "statuteCode"
        ],
        "type": "object",
        "properties": {
          "statuteCode": {
            "type": "string",
            "description": "The statue code",
            "example": "TH68"
          },
          "offenceCode": {
            "type": "string",
            "description": "The offence code",
            "example": "TH68010"
          },
          "offenceDescription": {
            "type": "string",
            "description": "The offence description",
            "example": "Theft from a shop"
          },
          "offenceDate": {
            "type": "string",
            "description": "The date of the offence",
            "format": "date",
            "example": "2024-05-23"
          },
          "latestBooking": {
            "type": "boolean",
            "description": "Indicates this offence is for the latest NOMIS booking"
          }
        },
        "description": "All historical convicted offences"
      },
      "PagePrisoner": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prisoner"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "PhoneNumber": {
        "required": [
          "number",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the phone number",
            "example": "HOME, MOB"
          },
          "number": {
            "type": "string",
            "description": "The phone number. Numeric characters only (no whitespace).",
            "example": "01141234567"
          }
        },
        "description": "Telephone numbers. Note that the number will contain only numeric characters [0-9] (including no break between area code and number). Therefore if searching on 'phoneNumbers.number' you should not pass any non-numeric characters."
      },
      "Prisoner": {
        "required": [
          "dateOfBirth",
          "ethnicity",
          "firstName",
          "gender",
          "lastName",
          "maritalStatus",
          "mostSeriousOffence",
          "nationality",
          "prisonerNumber",
          "religion",
          "restrictedPatient",
          "status",
          "youthOffender"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner Number",
            "example": "A1234AA"
          },
          "pncNumber": {
            "type": "string",
            "description": "PNC Number",
            "example": "12/394773H"
          },
          "pncNumberCanonicalShort": {
            "type": "string",
            "description": "PNC Number",
            "example": "12/394773H"
          },
          "pncNumberCanonicalLong": {
            "type": "string",
            "description": "PNC Number",
            "example": "2012/394773H"
          },
          "croNumber": {
            "type": "string",
            "description": "CRO Number",
            "example": "29906/12J"
          },
          "bookingId": {
            "type": "string",
            "description": "Booking No.",
            "example": "0001200924"
          },
          "bookNumber": {
            "type": "string",
            "description": "Book Number",
            "example": "38412A"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Ms"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "Robert"
          },
          "middleNames": {
            "type": "string",
            "description": "Middle Names",
            "example": "John James"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "example": "Larsen"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of Birth",
            "format": "date",
            "example": "1975-04-02"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "example": "Female"
          },
          "ethnicity": {
            "type": "string",
            "description": "Ethnicity",
            "example": "White: Eng./Welsh/Scot./N.Irish/British"
          },
          "youthOffender": {
            "type": "boolean",
            "description": "Youth Offender?",
            "example": true
          },
          "maritalStatus": {
            "type": "string",
            "description": "Marital Status",
            "example": "Widowed"
          },
          "religion": {
            "type": "string",
            "description": "Religion",
            "example": "Church of England (Anglican)"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality",
            "example": "Egyptian"
          },
          "status": {
            "type": "string",
            "description": "Status of the prisoner",
            "example": "ACTIVE IN"
          },
          "lastMovementTypeCode": {
            "type": "string",
            "description": "Last Movement Type Code of prisoner",
            "example": "CRT"
          },
          "lastMovementReasonCode": {
            "type": "string",
            "description": "Last Movement Reason of prisoner",
            "example": "CA"
          },
          "inOutStatus": {
            "type": "string",
            "description": "In/Out Status",
            "example": "IN",
            "enum": [
              "IN",
              "OUT",
              "TRN"
            ]
          },
          "prisonId": {
            "type": "string",
            "description": "Prison ID",
            "example": "MDI"
          },
          "lastPrisonId": {
            "type": "string",
            "description": "The last prison for the prisoner (which is the same as the prisonId if they are still inside prison)",
            "example": "MDI"
          },
          "prisonName": {
            "type": "string",
            "description": "Prison Name",
            "example": "HMP Leeds"
          },
          "cellLocation": {
            "type": "string",
            "description": "In prison cell location",
            "example": "A-1-002"
          },
          "aliases": {
            "type": "array",
            "description": "Aliases Names and Details",
            "items": {
              "$ref": "#/components/schemas/PrisonerAlias"
            }
          },
          "alerts": {
            "type": "array",
            "description": "Alerts",
            "items": {
              "$ref": "#/components/schemas/PrisonerAlert"
            }
          },
          "csra": {
            "type": "string",
            "description": "Cell Sharing Risk Assessment",
            "example": "HIGH"
          },
          "category": {
            "type": "string",
            "description": "Prisoner Category",
            "example": "C"
          },
          "legalStatus": {
            "type": "string",
            "description": "Legal Status",
            "example": "SENTENCED",
            "enum": [
              "RECALL",
              "DEAD",
              "INDETERMINATE_SENTENCE",
              "SENTENCED",
              "CONVICTED_UNSENTENCED",
              "CIVIL_PRISONER",
              "IMMIGRATION_DETAINEE",
              "REMAND",
              "UNKNOWN",
              "OTHER"
            ]
          },
          "imprisonmentStatus": {
            "type": "string",
            "description": "The prisoner's imprisonment status code.",
            "example": "LIFE"
          },
          "imprisonmentStatusDescription": {
            "type": "string",
            "description": "The prisoner's imprisonment status description.",
            "example": "Serving Life Imprisonment"
          },
          "mostSeriousOffence": {
            "type": "string",
            "description": "Most serious offence for this sentence",
            "example": "Robbery"
          },
          "recall": {
            "type": "boolean",
            "description": "Indicates that the prisoner has been recalled",
            "example": false
          },
          "indeterminateSentence": {
            "type": "boolean",
            "description": "Indicates that the prisoner has an indeterminate sentence",
            "example": true
          },
          "sentenceStartDate": {
            "type": "string",
            "description": "Start Date for this sentence",
            "format": "date",
            "example": "2020-04-03"
          },
          "releaseDate": {
            "type": "string",
            "description": "Actual of most likely Release Date",
            "format": "date",
            "example": "2023-05-02"
          },
          "confirmedReleaseDate": {
            "type": "string",
            "description": "Release Date Confirmed",
            "format": "date",
            "example": "2023-05-01"
          },
          "sentenceExpiryDate": {
            "type": "string",
            "description": "Sentence Expiry Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "licenceExpiryDate": {
            "type": "string",
            "description": "Licence Expiry Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "homeDetentionCurfewEligibilityDate": {
            "type": "string",
            "description": "HDC Eligibility Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "homeDetentionCurfewActualDate": {
            "type": "string",
            "description": "HDC Actual Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "homeDetentionCurfewEndDate": {
            "type": "string",
            "description": "HDC End Date",
            "format": "date",
            "example": "2023-05-02"
          },
          "topupSupervisionStartDate": {
            "type": "string",
            "description": "Top-up supervision start date",
            "format": "date",
            "example": "2023-04-29"
          },
          "topupSupervisionExpiryDate": {
            "type": "string",
            "description": "Top-up supervision expiry date",
            "format": "date",
            "example": "2023-05-01"
          },
          "additionalDaysAwarded": {
            "type": "integer",
            "description": "Days added to sentence term due to adjustments.",
            "format": "int32",
            "example": 10
          },
          "nonDtoReleaseDate": {
            "type": "string",
            "description": "Release date for Non determinant sentence (if applicable). This will be based on one of ARD, CRD, NPD or PRRD.",
            "format": "date",
            "example": "2023-05-01"
          },
          "nonDtoReleaseDateType": {
            "type": "string",
            "description": "Indicates which type of non-DTO release date is the effective release date. One of 'ARD’, 'CRD’, ‘NPD’ or 'PRRD’.",
            "example": "ARD",
            "enum": [
              "ARD",
              "CRD",
              "NPD",
              "PRRD"
            ]
          },
          "receptionDate": {
            "type": "string",
            "description": "Date prisoner was received into the prison",
            "format": "date",
            "example": "2023-05-01"
          },
          "paroleEligibilityDate": {
            "type": "string",
            "description": "Parole  Eligibility Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "automaticReleaseDate": {
            "type": "string",
            "description": "Automatic Release Date. If automaticReleaseOverrideDate is available then it will be set as automaticReleaseDate",
            "format": "date",
            "example": "2023-05-01"
          },
          "postRecallReleaseDate": {
            "type": "string",
            "description": "Post Recall Release Date. if postRecallReleaseOverrideDate is available then it will be set as postRecallReleaseDate",
            "format": "date",
            "example": "2023-05-01"
          },
          "conditionalReleaseDate": {
            "type": "string",
            "description": "Conditional Release Date. If conditionalReleaseOverrideDate is available then it will be set as conditionalReleaseDate",
            "format": "date",
            "example": "2023-05-01"
          },
          "actualParoleDate": {
            "type": "string",
            "description": "Actual Parole Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "tariffDate": {
            "type": "string",
            "description": "Tariff Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "releaseOnTemporaryLicenceDate": {
            "type": "string",
            "description": "Release on Temporary Licence Date",
            "format": "date",
            "example": "2023-05-01"
          },
          "locationDescription": {
            "type": "string",
            "description": "current prison or outside with last movement information.",
            "example": "Outside - released from Leeds"
          },
          "restrictedPatient": {
            "type": "boolean",
            "description": "Indicates a restricted patient",
            "example": true
          },
          "supportingPrisonId": {
            "type": "string",
            "description": "Supporting prison ID for POM",
            "example": "LEI"
          },
          "dischargedHospitalId": {
            "type": "string",
            "description": "Which hospital the prisoner has been discharged to",
            "example": "HAZLWD"
          },
          "dischargedHospitalDescription": {
            "type": "string",
            "description": "Hospital name to which the prisoner was discharged",
            "example": "Hazelwood House"
          },
          "dischargeDate": {
            "type": "string",
            "description": "Date of discharge",
            "format": "date",
            "example": "2020-05-01"
          },
          "dischargeDetails": {
            "type": "string",
            "description": "Any additional discharge details",
            "example": "Psychiatric Hospital Discharge to Hazelwood House"
          },
          "currentIncentive": {
            "$ref": "#/components/schemas/CurrentIncentive"
          },
          "heightCentimetres": {
            "type": "integer",
            "description": "Height in centimetres of the prisoner",
            "format": "int32",
            "example": 200
          },
          "weightKilograms": {
            "type": "integer",
            "description": "Weight in kilograms of the prisoner",
            "format": "int32",
            "example": 102
          },
          "hairColour": {
            "type": "string",
            "description": "Hair colour. From PROFILE_CODES table where PROFILE_TYPE = HAIR. Allowable values extracted 07/02/2023.",
            "example": "Blonde",
            "enum": [
              "Bald",
              "Balding",
              "Black",
              "Blonde",
              "Brown",
              "Brunette",
              "Dark",
              "Dyed",
              "Ginger",
              "Grey",
              "Light",
              "Mouse",
              "Multi-coloured",
              "Red",
              "White"
            ]
          },
          "rightEyeColour": {
            "type": "string",
            "description": "Right eye colour. From PROFILE_CODES table where PROFILE_TYPE = R_EYE_C. Allowable values extracted 07/02/2023.",
            "example": "Green",
            "enum": [
              "Blue",
              "Brown",
              "Clouded",
              "Green",
              "Grey",
              "Hazel",
              "Missing",
              "Pink",
              "White"
            ]
          },
          "leftEyeColour": {
            "type": "string",
            "description": "Left eye colour. From PROFILE_CODES table where PROFILE_TYPE = L_EYE_C. Allowable values extracted 07/02/2023.",
            "example": "Hazel",
            "enum": [
              "Blue",
              "Brown",
              "Clouded",
              "Green",
              "Grey",
              "Hazel",
              "Missing",
              "Pink",
              "White"
            ]
          },
          "facialHair": {
            "type": "string",
            "description": "Facial hair. From PROFILE_CODES table where PROFILE_TYPE = FACIAL_HAIR. Allowable values extracted 07/02/2023.",
            "example": "Clean Shaven",
            "enum": [
              "Full Beard",
              "Clean Shaven",
              "Goatee Beard",
              "Moustache Only",
              "Not Applicable (Female Offender)",
              "No Facial Hair",
              "Sideburns"
            ]
          },
          "shapeOfFace": {
            "type": "string",
            "description": "Shape of face. From PROFILE_CODES table where PROFILE_TYPE = FACE. Allowable values extracted 07/02/2023.",
            "example": "Round",
            "enum": [
              "Angular",
              "Bullet",
              "Oval",
              "Round",
              "Square",
              "Triangular"
            ]
          },
          "build": {
            "type": "string",
            "description": "Build. From PROFILE_CODES table where PROFILE_TYPE = BUILD. Allowable values extracted 07/02/2023.",
            "example": "Muscular",
            "enum": [
              "Fat",
              "Frail",
              "Heavy",
              "Medium",
              "Muscular",
              "Obese",
              "Proportional",
              "Slight",
              "Small",
              "Stocky",
              "Stooped",
              "Thin"
            ]
          },
          "shoeSize": {
            "type": "integer",
            "description": "UK shoe size",
            "format": "int32",
            "example": 10
          },
          "tattoos": {
            "type": "array",
            "description": "List of parts of the body that have tattoos. This includes marks and other marks whose comment contains 'tattoo'. 'From REFERENCE_CODES table where DOMAIN = BODY_PART. Allowable values extracted 08/02/2023.",
            "items": {
              "$ref": "#/components/schemas/BodyPartDetail"
            }
          },
          "scars": {
            "type": "array",
            "description": "List of parts of the body that have scars. This includes marks and other marks whose comment contains 'scar'. From REFERENCE_CODES table where DOMAIN = BODY_PART. Allowable values extracted 08/02/2023.",
            "items": {
              "$ref": "#/components/schemas/BodyPartDetail"
            }
          },
          "marks": {
            "type": "array",
            "description": "List of parts of the body that have marks. This includes NOMIS physical details of type 'marks' and 'otherMarks'. If we find a comment with either 'tattoo' or 'scar' we also add to the list of tattoos or scars. From REFERENCE_CODES table where DOMAIN = BODY_PART. Allowable values extracted 08/02/2023.",
            "items": {
              "$ref": "#/components/schemas/BodyPartDetail"
            }
          },
          "addresses": {
            "type": "array",
            "description": "Addresses",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "emailAddresses": {
            "type": "array",
            "description": "Email addresses",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          },
          "phoneNumbers": {
            "type": "array",
            "description": "Telephone numbers. Note that the number will contain only numeric characters [0-9] (including no break between area code and number). Therefore if searching on 'phoneNumbers.number' you should not pass any non-numeric characters.",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "identifiers": {
            "type": "array",
            "description": "All identifiers for the prisoner including those recorded against aliases. Currently supports only PNC, CRO, NINO and DL.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "allConvictedOffences": {
            "type": "array",
            "description": "All historical convicted offences",
            "items": {
              "$ref": "#/components/schemas/Offence"
            }
          }
        }
      },
      "PrisonerAlert": {
        "required": [
          "active",
          "alertCode",
          "alertType",
          "expired"
        ],
        "type": "object",
        "properties": {
          "alertType": {
            "type": "string",
            "description": "Alert Type",
            "example": "H"
          },
          "alertCode": {
            "type": "string",
            "description": "Alert Code",
            "example": "HA"
          },
          "active": {
            "type": "boolean",
            "description": "Active",
            "example": true
          },
          "expired": {
            "type": "boolean",
            "description": "Expired",
            "example": true
          }
        },
        "description": "Alerts"
      },
      "PrisonerAlias": {
        "required": [
          "dateOfBirth",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Ms"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "Robert"
          },
          "middleNames": {
            "type": "string",
            "description": "Middle names",
            "example": "Trevor"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "example": "Lorsen"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1975-04-02"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "example": "Male"
          },
          "ethnicity": {
            "type": "string",
            "description": "Ethnicity",
            "example": "White : Irish"
          }
        },
        "description": "Aliases Names and Details"
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string"
          },
          "nullHandling": {
            "type": "string"
          },
          "ascending": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "ignoreCase": {
            "type": "boolean"
          }
        }
      },
      "ReleaseDateSearch": {
        "required": [
          "latestReleaseDate"
        ],
        "type": "object",
        "properties": {
          "earliestReleaseDate": {
            "type": "string",
            "description": "The lower bound for the release date range of which to search - defaults to today if not provided",
            "format": "date",
            "example": "2022-04-20"
          },
          "latestReleaseDate": {
            "type": "string",
            "description": "The upper bound for the release date range of which to search. A required field.",
            "format": "date",
            "example": "2022-05-20"
          },
          "prisonIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null",
            "example": [
              "MDI"
            ],
            "items": {
              "type": "string",
              "description": "List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null",
              "example": "[\"MDI\"]"
            }
          }
        },
        "description": "Search Criteria for Release Date Search"
      },
      "PrisonerNumbers": {
        "required": [
          "prisonerNumbers"
        ],
        "type": "object",
        "properties": {
          "prisonerNumbers": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "description": "List of prisoner numbers to search by",
            "example": [
              "A1234AA"
            ],
            "items": {
              "type": "string",
              "description": "List of prisoner numbers to search by",
              "example": "[\"A1234AA\"]"
            }
          }
        }
      },
      "PossibleMatchCriteria": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Prisoner first name",
            "example": "john"
          },
          "lastName": {
            "type": "string",
            "description": "Prisoner last Name",
            "example": "smith"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Prisoner date of birth",
            "format": "date",
            "example": "1996-02-10"
          },
          "pncNumber": {
            "type": "string",
            "description": "Police National Computer (PNC) number (This will match both long and short PNC formats)",
            "example": "2018/0123456X"
          },
          "nomsNumber": {
            "type": "string",
            "description": "The Prisoner NOMIS Id (aka prison number/offender no in DPS)",
            "example": "A1234AB"
          }
        },
        "description": "Search Criteria for possible match"
      },
      "PrisonSearch": {
        "type": "object",
        "properties": {
          "prisonerIdentifier": {
            "type": "string",
            "description": "Prisoner identifier, one of prisoner number, book number, booking ID or PNC",
            "example": "A1234AA,"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "prisonId": {
            "type": "string",
            "description": "Prison Id, Prison Id or OUT or TRN",
            "example": "MDI"
          },
          "includeAliases": {
            "type": "boolean",
            "description": "Include aliases in search",
            "example": false,
            "default": false
          }
        },
        "description": "Search Criteria for Prisoner Search"
      },
      "SearchCriteria": {
        "type": "object",
        "properties": {
          "prisonerIdentifier": {
            "type": "string",
            "description": "Prisoner identifier, one of prisoner number, book number, booking ID or PNC",
            "example": "A1234AA,"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "prisonIds": {
            "type": "array",
            "description": "List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null",
            "example": [
              "MDI"
            ],
            "items": {
              "type": "string",
              "description": "List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null",
              "example": "[\"MDI\"]"
            }
          },
          "includeAliases": {
            "type": "boolean",
            "description": "Include aliases in search",
            "example": false,
            "default": false
          }
        },
        "description": "Search Criteria for Prisoner Search"
      },
      "BookingIds": {
        "required": [
          "bookingIds"
        ],
        "type": "object",
        "properties": {
          "bookingIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "description": "List of bookingIds to search by",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "integer",
              "description": "List of bookingIds to search by",
              "format": "int64"
            }
          }
        }
      },
      "PaginationRequest": {
        "required": [
          "page",
          "size"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page number required in the paginated response",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "The number of results to return for paginated response",
            "format": "int32",
            "example": 10
          }
        },
        "description": "Pagination options. Will default to the first page if omitted."
      },
      "PrisonerDetailRequest": {
        "required": [
          "pagination",
          "prisonIds"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Prisoner first name",
            "example": "john"
          },
          "lastName": {
            "type": "string",
            "description": "Prisoner last name",
            "example": "smith"
          },
          "nomsNumber": {
            "type": "string",
            "description": "Prisoner number (aka. offenderId, nomisId)",
            "example": "A1234AA"
          },
          "pncNumber": {
            "type": "string",
            "description": "Police National Computer (PNC) number",
            "example": "2018/0123456X"
          },
          "croNumber": {
            "type": "string",
            "description": "Criminal Records Office (CRO) number",
            "example": "SF80/655108T"
          },
          "fuzzyMatch": {
            "type": "boolean",
            "description": "Fuzzy matching. Allow a one character difference in spelling in word lengths below five and two differences above.",
            "example": false
          },
          "prisonIds": {
            "type": "array",
            "description": "List of prison codes to filter results by",
            "example": "['LEI', 'MDI']",
            "items": {
              "type": "string",
              "description": "List of prison codes to filter results by",
              "example": "['LEI', 'MDI']"
            }
          },
          "includeAliases": {
            "type": "boolean",
            "description": "Include aliases in search",
            "example": true,
            "default": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationRequest"
          }
        }
      },
      "PrisonerDetailResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prisoner"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "errorCode",
          "status",
          "userMessage"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of Error Code",
            "format": "int32",
            "example": 400
          },
          "developerMessage": {
            "type": "string",
            "description": "Developer Information message",
            "example": "System is down"
          },
          "errorCode": {
            "type": "integer",
            "description": "Internal Error Code",
            "format": "int32",
            "example": 20012
          },
          "userMessage": {
            "type": "string",
            "description": "Error message information",
            "example": "Prisoner Not Found"
          },
          "moreInfo": {
            "type": "string",
            "description": "Additional information about the error",
            "example": "Hard disk failure"
          }
        }
      },
      "BodyPart": {
        "type": "object",
        "properties": {
          "bodyPart": {
            "type": "string",
            "description": "Body part that has the physical mark, searching on the description in the type BODY_PART in the REFERENCE_CODES table. Allowable values extracted 08/02/2023.",
            "example": "Arm",
            "enum": [
              "Ankle",
              "Arm",
              "Ear",
              "Elbow",
              "Face",
              "Finger",
              "Foot",
              "Hand",
              "Head",
              "Knee",
              "Leg",
              "Lip",
              "Neck",
              "Nose",
              "Shoulder",
              "Thigh",
              "Toe",
              "Torso"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Comment on the physical mark.",
            "example": "dragon"
          }
        },
        "description": "List of body parts that have scars"
      },
      "PhysicalDetailRequest": {
        "required": [
          "lenient",
          "pagination",
          "prisonIds"
        ],
        "type": "object",
        "properties": {
          "prisonIds": {
            "type": "array",
            "description": "List of prison codes to filter results by",
            "example": "['LEI', 'MDI']",
            "items": {
              "type": "string",
              "description": "List of prison codes to filter results by",
              "example": "['LEI', 'MDI']"
            }
          },
          "cellLocationPrefix": {
            "type": "string",
            "description": "Filter for the prisoners cell location. A block wing or cell can be specified. With prison id can be included or absent so HEI-3-1 and 3-1 are equivalent when the prison id is HEI",
            "example": "3-1"
          },
          "gender": {
            "type": "string",
            "description": "Gender, searching on the description in the domain SEX in the REFERENCE_CODES table.",
            "example": "Male",
            "enum": [
              "Female",
              "Male",
              "Not Known / Not Recorded",
              "Not Specified (Indeterminate)",
              "Refused"
            ]
          },
          "ethnicity": {
            "type": "string",
            "description": "Ethnicity, searching on the description in the domain ETHNICITY in the REFERENCE_CODES table.",
            "example": "White : Irish",
            "enum": [
              "Asian/Asian British: Indian",
              "Asian/Asian British: Pakistani",
              "Asian/Asian British: Bangladeshi",
              "Asian/Asian British: Chinese",
              "Asian/Asian British: Any other backgr'nd",
              "Black/Black British: Caribbean",
              "Black/Black British: African",
              "Black/Black British: Any other Backgr'nd",
              "Mixed: White and Black Caribbean",
              "Mixed: White and Black African",
              "Mixed: White and Asian",
              "Mixed: Any other background",
              "Needs to be confirmed following Merge",
              "Prefer not to say",
              "Chinese",
              "Other: Arab",
              "Other: Any other background",
              "White: Eng./Welsh/Scot./N.Irish/British",
              "White : Irish",
              "White: Gypsy or Irish Traveller",
              "White : Irish Traveller/Gypsy",
              "White: Any other background"
            ]
          },
          "minHeight": {
            "type": "integer",
            "description": "Minimum height of the prisoner in centimetres",
            "format": "int32",
            "example": 170
          },
          "maxHeight": {
            "type": "integer",
            "description": "Maximum height of the prisoner in centimetres",
            "format": "int32",
            "example": 198
          },
          "minWeight": {
            "type": "integer",
            "description": "Minimum weight of the prisoner in kilograms",
            "format": "int32",
            "example": 80
          },
          "maxWeight": {
            "type": "integer",
            "description": "Maximum weight of the prisoner in kilograms",
            "format": "int32",
            "example": 90
          },
          "hairColour": {
            "type": "string",
            "description": "Hair colour, searching on the description in the type HAIR in the PROFILE_CODES table. Allowable values extracted 07/02/2023.",
            "example": "Brunette",
            "enum": [
              "Bald",
              "Balding",
              "Black",
              "Blonde",
              "Brown",
              "Brunette",
              "Dark",
              "Dyed",
              "Ginger",
              "Grey",
              "Light",
              "Mouse",
              "Multi-coloured",
              "Red",
              "White"
            ]
          },
          "rightEyeColour": {
            "type": "string",
            "description": "Right eye colour, searching on the description in the type R_EYE_C in the PROFILE_CODES table. Allowable values extracted 07/02/2023.",
            "example": "Green",
            "enum": [
              "Blue",
              "Brown",
              "Clouded",
              "Green",
              "Grey",
              "Hazel",
              "Missing",
              "Pink",
              "White"
            ]
          },
          "leftEyeColour": {
            "type": "string",
            "description": "Left eye colour, searching on the description in the type L_EYE_C in the PROFILE_CODES table. Allowable values extracted 07/02/2023.",
            "example": "Hazel",
            "enum": [
              "Blue",
              "Brown",
              "Clouded",
              "Green",
              "Grey",
              "Hazel",
              "Missing",
              "Pink",
              "White"
            ]
          },
          "facialHair": {
            "type": "string",
            "description": "Facial hair, searching on the description in the type FACIAL_HAIR in the PROFILE_CODES table. Allowable values extracted 07/02/2023.",
            "example": "Goatee Beard",
            "enum": [
              "Full Beard",
              "Clean Shaven",
              "Goatee Beard",
              "Moustache Only",
              "Not Applicable (Female Offender)",
              "No Facial Hair",
              "Sideburns"
            ]
          },
          "shapeOfFace": {
            "type": "string",
            "description": "Shape of face, searching on the description in the type FACE in the PROFILE_CODES table. Allowable values extracted 07/02/2023.",
            "example": "Bullet",
            "enum": [
              "Angular",
              "Bullet",
              "Oval",
              "Round",
              "Square",
              "Triangular"
            ]
          },
          "build": {
            "type": "string",
            "description": "Physical build, searching on the description in the type BUILD in the PROFILE_CODES table. Allowable values extracted 07/02/2023.",
            "example": "Medium",
            "enum": [
              "Fat",
              "Frail",
              "Heavy",
              "Medium",
              "Muscular",
              "Obese",
              "Proportional",
              "Slight",
              "Small",
              "Stocky",
              "Stooped",
              "Thin"
            ]
          },
          "minShoeSize": {
            "type": "integer",
            "description": "Minimum UK shoe size of the prisoner",
            "format": "int32",
            "example": 5
          },
          "maxShoeSize": {
            "type": "integer",
            "description": "Maximum UK shoe size of the prisoner",
            "format": "int32",
            "example": 10
          },
          "tattoos": {
            "type": "array",
            "description": "List of body parts that have tattoos",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "marks": {
            "type": "array",
            "description": "List of body parts that have marks",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "scars": {
            "type": "array",
            "description": "List of body parts that have scars",
            "items": {
              "$ref": "#/components/schemas/BodyPart"
            }
          },
          "lenient": {
            "type": "boolean",
            "description": "\n        Whether all terms are required to match. If set to true then only matches on all fields will return a result.\n        If set to false then matches will return a higher score than non matches, but all will be returned.\n        Prison and cell location will always be required to match.",
            "example": false
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationRequest"
          }
        }
      },
      "PhysicalDetailResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prisoner"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "MatchRequest": {
        "required": [
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Prisoner first name",
            "example": "john"
          },
          "lastName": {
            "type": "string",
            "description": "Prisoner last Name",
            "example": "smith"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Prisoner date of birth",
            "format": "date",
            "example": "1996-02-10"
          },
          "pncNumber": {
            "type": "string",
            "description": "Police National Computer (PNC) number",
            "example": "2018/0123456X"
          },
          "croNumber": {
            "type": "string",
            "description": "Criminal Records Office (CRO) number",
            "example": "SF80/655108T"
          },
          "nomsNumber": {
            "type": "string",
            "description": "The Prisoner NOMIS Id (aka prison number/offender no in DPS)",
            "example": "A1234AB"
          }
        }
      },
      "PrisonerMatch": {
        "required": [
          "prisoner"
        ],
        "type": "object",
        "properties": {
          "prisoner": {
            "$ref": "#/components/schemas/Prisoner"
          }
        },
        "description": "List of prisoners that share the same possibility of being the match"
      },
      "PrisonerMatches": {
        "required": [
          "matchedBy",
          "matches"
        ],
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "description": "List of prisoners that share the same possibility of being the match",
            "items": {
              "$ref": "#/components/schemas/PrisonerMatch"
            }
          },
          "matchedBy": {
            "type": "string",
            "description": "How the match was performed",
            "enum": [
              "ALL_SUPPLIED",
              "ALL_SUPPLIED_ALIAS",
              "HMPPS_KEY",
              "EXTERNAL_KEY",
              "NAME",
              "PARTIAL_NAME",
              "PARTIAL_NAME_DOB_LENIENT",
              "NOTHING"
            ]
          }
        }
      },
      "KeywordRequest": {
        "required": [
          "pagination",
          "prisonIds",
          "type"
        ],
        "type": "object",
        "properties": {
          "orWords": {
            "type": "string",
            "description": "Match where any of the keywords are present in any text field",
            "example": "smith james john"
          },
          "andWords": {
            "type": "string",
            "description": "Match where all keywords are present in any text field",
            "example": "smith james"
          },
          "notWords": {
            "type": "string",
            "description": "Filter results where any of these words are present in any text field",
            "example": "jonas"
          },
          "exactPhrase": {
            "type": "string",
            "description": "Match only prisoners where the full phrase is present in any text field",
            "example": "John Smith"
          },
          "fuzzyMatch": {
            "type": "boolean",
            "description": "Fuzzy matching. Allow a one character difference in spelling in word lengths below five and two differences above.",
            "example": false
          },
          "prisonIds": {
            "type": "array",
            "description": "List of prison codes to filter results",
            "example": [
              "LEI",
              "MDI"
            ],
            "items": {
              "type": "string",
              "description": "List of prison codes to filter results",
              "example": "[\"LEI\",\"MDI\"]"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationRequest"
          },
          "type": {
            "type": "string",
            "description": "The type of search. When set to DEFAULT (which is the default when not provided) search order is by calculated relevance (AKA score). An ESTABLISHMENT type will order results by name and is designed for using this API for a single quick search field for prisoners within a specific prison",
            "enum": [
              "DEFAULT",
              "ESTABLISHMENT"
            ]
          }
        }
      },
      "KeywordResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prisoner"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "GlobalSearchCriteria": {
        "type": "object",
        "properties": {
          "prisonerIdentifier": {
            "type": "string",
            "description": "Prisoner identifier, one of prisoner number, book number, booking ID or PNC",
            "example": "A1234AA"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "gender": {
            "type": "string",
            "description": "Gender, F - Female, M - Male, NK - Not Known / Not Recorded or NS - Not Specified (Indeterminate)",
            "example": "M",
            "enum": [
              "M",
              "F",
              "NK",
              "NS",
              "ALL"
            ]
          },
          "location": {
            "type": "string",
            "description": "Location, All or Inside or Outside",
            "example": "IN"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1970-02-28"
          },
          "includeAliases": {
            "type": "boolean",
            "description": "Include aliases in search",
            "example": false,
            "default": false
          }
        },
        "description": "Search Criteria for Global Prisoner Search"
      },
      "AttributeSearchRequest": {
        "required": [
          "pagination",
          "queries"
        ],
        "type": "object",
        "properties": {
          "joinType": {
            "type": "string",
            "description": "The type of join to use when combining matchers or subQueries. Defaults to AND if not included in the request.",
            "example": "AND",
            "default": "AND",
            "enum": [
              "AND",
              "OR"
            ]
          },
          "queries": {
            "type": "array",
            "description": "A list of queries of type Query that will be combined with the matchers in this query",
            "items": {
              "$ref": "#/components/schemas/Query"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationRequest"
          }
        },
        "description": "A request to search for prisoners by attributes"
      },
      "BooleanMatcher": {
        "required": [
          "attribute",
          "condition",
          "type"
        ],
        "type": "object",
        "description": "A matcher for a boolean attribute from the Prisoner record",
        "allOf": [
          {
            "$ref": "#/components/schemas/Matcher"
          },
          {
            "type": "object",
            "properties": {
              "attribute": {
                "type": "string",
                "description": "The attribute to match",
                "example": "recall"
              },
              "condition": {
                "type": "boolean",
                "description": "Whether the attribute must be true or false",
                "example": true
              },
              "type": {
                "type": "string",
                "description": "Must be Boolean",
                "example": "Boolean"
              }
            }
          }
        ]
      },
      "DateMatcher": {
        "required": [
          "attribute",
          "type"
        ],
        "type": "object",
        "description": "A matcher for a date attribute from the Prisoner record.\n  \n  For a between clause use both min value and max value. By default the range is inclusive, but can be adjusted with minInclusive and maxInclusive.\n  \n  For <= enter only a max value, and for < set max inclusive to false.\n   \n  For >= enter only a min value, and for > set min inclusive to false.\n  \n  For equals enter the same date in both the min value and max value and leave min/max inclusive as true.\n  ",
        "allOf": [
          {
            "$ref": "#/components/schemas/Matcher"
          },
          {
            "type": "object",
            "properties": {
              "attribute": {
                "type": "string",
                "description": "The attribute to match",
                "example": "releaseDate"
              },
              "minValue": {
                "type": "string",
                "description": "The minimum value to match",
                "format": "date",
                "example": "2024-01-01"
              },
              "minInclusive": {
                "type": "boolean",
                "description": "Whether the minimum value is inclusive or exclusive",
                "default": true
              },
              "maxValue": {
                "type": "string",
                "description": "The maximum value to match",
                "format": "date",
                "example": "2024-01-31"
              },
              "maxInclusive": {
                "type": "boolean",
                "description": "Whether the maximum value is inclusive or exclusive",
                "default": true
              },
              "type": {
                "type": "string",
                "description": "Must be Date",
                "example": "Date"
              }
            }
          }
        ]
      },
      "DateTimeMatcher": {
        "required": [
          "attribute",
          "type"
        ],
        "type": "object",
        "description": "A matcher for a date time attribute from the Prisoner record.\n  \n  For a between clause use both the min and max values.\n  \n  For < enter only the max value.\n  \n  For > enter only the min value.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/Matcher"
          },
          {
            "type": "object",
            "properties": {
              "attribute": {
                "type": "string",
                "description": "The attribute to search on",
                "example": "currentIncentive.dateTime"
              },
              "minValue": {
                "type": "string",
                "description": "The minimum value to match",
                "format": "date-time",
                "example": "2024-01-01T09:00:00Z"
              },
              "maxValue": {
                "type": "string",
                "description": "The maximum value to match",
                "format": "date-time",
                "example": "2024-01-31T21:00:00Z"
              },
              "type": {
                "type": "string",
                "description": "Must be DateTime",
                "example": "DateTime"
              }
            }
          }
        ]
      },
      "IntMatcher": {
        "required": [
          "attribute",
          "type"
        ],
        "type": "object",
        "description": "A matcher for an integer attribute from the Prisoner record.\n  \n  For a between clause use both min value and max value. By default the range is inclusive, but can be adjusted with minInclusive and maxInclusive.\n  \n  For <= enter only a max value, and for < set max inclusive to false.\n   \n  For >= enter only a min value, and for > set min inclusive to false.\n  \n  For equals enter the same integer in both the min value and max value and leave min/max inclusive as true.\n  ",
        "allOf": [
          {
            "$ref": "#/components/schemas/Matcher"
          },
          {
            "type": "object",
            "properties": {
              "attribute": {
                "type": "string",
                "description": "The attribute to match on",
                "example": "heightCentimetres"
              },
              "minValue": {
                "type": "integer",
                "description": "The minimum value to match on",
                "format": "int32",
                "example": 150
              },
              "minInclusive": {
                "type": "boolean",
                "description": "Whether the minimum value is inclusive",
                "default": true
              },
              "maxValue": {
                "type": "integer",
                "description": "The maximum value to match on",
                "format": "int32",
                "example": 180
              },
              "maxInclusive": {
                "type": "boolean",
                "description": "Whether the maximum value is inclusive",
                "default": true
              },
              "type": {
                "type": "string",
                "description": "Must be Int",
                "example": "Int"
              }
            }
          }
        ]
      },
      "Matcher": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "description": "Matchers that will be applied to this query",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "PncMatcher": {
        "required": [
          "pncNumber",
          "type"
        ],
        "type": "object",
        "description": "A matcher for PNC numbers.\n  \n    This is required because PNC numbers come in various formats with 2/4 long years and with/without leading zeroes.\n     \n    This matcher will find the matching PNC regardless of which format is used. \n  ",
        "allOf": [
          {
            "$ref": "#/components/schemas/Matcher"
          },
          {
            "type": "object",
            "properties": {
              "pncNumber": {
                "type": "string",
                "description": "The PNC number match",
                "example": "24/123456H"
              },
              "type": {
                "type": "string",
                "description": "Must be PNC",
                "example": "PNC"
              }
            }
          }
        ]
      },
      "Query": {
        "type": "object",
        "properties": {
          "joinType": {
            "type": "string",
            "description": "The type of join to use when combining matchers or subQueries. Defaults to AND if not included in the request.",
            "example": "AND",
            "default": "AND",
            "enum": [
              "AND",
              "OR"
            ]
          },
          "matchers": {
            "type": "array",
            "description": "Matchers that will be applied to this query",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BooleanMatcher"
                },
                {
                  "$ref": "#/components/schemas/DateMatcher"
                },
                {
                  "$ref": "#/components/schemas/DateTimeMatcher"
                },
                {
                  "$ref": "#/components/schemas/IntMatcher"
                },
                {
                  "$ref": "#/components/schemas/PncMatcher"
                },
                {
                  "$ref": "#/components/schemas/StringMatcher"
                }
              ]
            }
          },
          "subQueries": {
            "type": "array",
            "description": "A list of sub-queries of type Query that will be combined with the matchers in this query",
            "items": {
              "$ref": "#/components/schemas/Query"
            }
          }
        },
        "description": "A query to search for prisoners by attributes"
      },
      "StringMatcher": {
        "required": [
          "attribute",
          "condition",
          "searchTerm",
          "type"
        ],
        "type": "object",
        "description": "A matcher for a string attribute from the prisoner record",
        "allOf": [
          {
            "$ref": "#/components/schemas/Matcher"
          },
          {
            "type": "object",
            "properties": {
              "attribute": {
                "type": "string",
                "description": "The attribute to match on",
                "example": "aliases.lastName"
              },
              "condition": {
                "type": "string",
                "description": "The condition to apply to the attribute value. \n    \n  All String searches are case-insensitive.\n  \n  IS and IS_NOT require an exact match (wildcards ? and * will not work).\n  \n  For IS and CONTAINS some attributes support fuzzy matching e.g. they allow spelling mistakes. Call endpoint `/attribute-search/attributes` to see which attributes support fuzzy matching.\n  \n  CONTAINS without wildcards (? and *) for a non-fuzzy attribute looks for the exact search term anywhere in the attribute value.\n  \n  CONTAINS with wildcards ? (single character) and * (zero to many characters) perform a wildcard match which must match the entire attribute value.\n  \n  STARTSWITH checks only the prefix of the attribute value and does not support fuzzy matching or wildcards.\n  \n  IN checks a list of values for an exact match and does not support fuzzy matching, wildcards or case insensitive searching.\n  ",
                "example": "IS",
                "enum": [
                  "IS",
                  "IS_NOT",
                  "CONTAINS",
                  "STARTSWITH",
                  "IN"
                ]
              },
              "searchTerm": {
                "type": "string",
                "description": "The search term to apply to the attribute. Search terms are not case-sensitive.",
                "example": "Smith"
              },
              "type": {
                "type": "string",
                "description": "Must be String",
                "example": "String"
              }
            }
          }
        ]
      },
      "ReferenceData": {
        "required": [
          "label",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "ReferenceDataResponse": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceData"
            }
          }
        }
      },
      "Attribute": {
        "required": [
          "fuzzySearch",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute to be used when searching",
            "example": "firstName"
          },
          "type": {
            "type": "string",
            "description": "The type of the attribute (used to determine which matcher to use)",
            "example": "String"
          },
          "fuzzySearch": {
            "type": "boolean",
            "description": "Whether the attribute search will be fuzzy. Generally applicable to String attributes containing free text such as names.",
            "example": true
          }
        },
        "description": "An attribute that can be searched for in a query"
      }
    },
    "securitySchemes": {
      "view-prisoner-data-role": {
        "type": "http",
        "description": "A HMPPS Auth access token with the `ROLE_VIEW_PRISONER_DATA` role.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "prisoner-search-role": {
        "type": "http",
        "description": "A HMPPS Auth access token with the `ROLE_PRISONER_SEARCH` role.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "global-search-role": {
        "type": "http",
        "description": "A HMPPS Auth access token with the `ROLE_GLOBAL_SEARCH` role.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "prisoner-in-prison-search-role": {
        "type": "http",
        "description": "A HMPPS Auth access token with the `ROLE_PRISONER_IN_PRISON_SEARCH` role.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "prisoner-search--prisoner--ro": {
        "type": "http",
        "description": "A HMPPS Auth access token with the `PRISONER_SEARCH__PRISONER__RO` role.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
