{
  "openapi": "3.0.1",
  "info": {
    "title": "HMPPS Risks and Needs API",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2023-10-03.4364.1e3149c"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/risks/crn/{crn}": {
      "get": {
        "tags": [
          "risks-controller"
        ],
        "description": "Gets ROSH risks for crn. Only returns freeform text concerns for risk to self where answer to corresponding risk question is Yes. Returns only assessments completed within the last year",
        "operationId": "getRoshRisksByCrn",
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "D1974X"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllRoshRiskDto_AllRisksView"
                }
              }
            }
          }
        }
      }
    },
    "/risks/crn/{crn}/predictors/all": {
      "get": {
        "tags": [
          "risk-predictors-controller"
        ],
        "description": "Gets risk predictors scores for all latest completed assessments from the last 1 year",
        "operationId": "getAllRiskScores",
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskScoresDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/needs/crn/{crn}": {
      "get": {
        "tags": [
          "assessment-controller"
        ],
        "description": "Gets criminogenic needs for crn",
        "operationId": "getCriminogenicNeedsByCrn",
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "D1974X"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentNeedsDto"
                }
              }
            }
          }
        }
      }
    },
    "/risks/crn/{crn}/risk-management-plan": {
      "get": {
        "tags": [
          "risks-controller"
        ],
        "description": "Gets Risk Management Plan from latest complete assessments for crn",
        "operationId": "getRiskManagementPlan",
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "D1974X"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskManagementPlansDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "User does not have permission to access offender with provided CRN",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User does not exist in Delius for provided user name",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementaryRiskDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "required": [
          "errorCode",
          "status",
          "userMessage"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Status of Error Code",
            "format": "int32",
            "example": 400
          },
          "developerMessage": {
            "type": "string",
            "description": "Developer Information message",
            "example": "System is down"
          },
          "errorCode": {
            "type": "integer",
            "description": "Internal Error Code",
            "format": "int32",
            "example": 20012
          },
          "userMessage": {
            "type": "string",
            "description": "Error message information",
            "example": "Prisoner Not Found"
          },
          "moreInfo": {
            "type": "string",
            "description": "Additional information about the error",
            "example": "Hard disk failure"
          }
        }
      },
      "RiskManagementPlanDto": {
        "required": [
          "assessmentId",
          "assessmentStatus",
          "assessmentType"
        ],
        "type": "object",
        "properties": {
          "assessmentId": {
            "type": "integer",
            "format": "int64"
          },
          "dateCompleted": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          },
          "partcompStatus": {
            "type": "string"
          },
          "initiationDate": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          },
          "assessmentStatus": {
            "type": "string"
          },
          "assessmentType": {
            "type": "string"
          },
          "superStatus": {
            "type": "string"
          },
          "keyInformationCurrentSituation": {
            "type": "string"
          },
          "furtherConsiderationsCurrentSituation": {
            "type": "string"
          },
          "supervision": {
            "type": "string"
          },
          "monitoringAndControl": {
            "type": "string"
          },
          "interventionsAndTreatment": {
            "type": "string"
          },
          "victimSafetyPlanning": {
            "type": "string"
          },
          "contingencyPlans": {
            "type": "string"
          },
          "laterWIPAssessmentExists": {
            "type": "boolean"
          },
          "latestWIPDate": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          },
          "laterSignLockAssessmentExists": {
            "type": "boolean"
          },
          "latestSignLockDate": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          },
          "laterPartCompUnsignedAssessmentExists": {
            "type": "boolean"
          },
          "latestPartCompUnsignedDate": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          },
          "laterPartCompSignedAssessmentExists": {
            "type": "boolean"
          },
          "latestPartCompSignedDate": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          },
          "laterCompleteAssessmentExists": {
            "type": "boolean"
          },
          "latestCompleteDate": {
            "type": "string",
            "example": "2024-05-08T23:11:23"
          }
        }
      },
      "RiskManagementPlansDto": {
        "required": [
          "crn",
          "limitedAccessOffender",
          "riskManagementPlan"
        ],
        "type": "object",
        "properties": {
          "crn": {
            "type": "string"
          },
          "limitedAccessOffender": {
            "type": "string"
          },
          "riskManagementPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RiskManagementPlanDto"
            }
          }
        }
      },
      "SupplementaryRiskDto": {
        "required": [
          "createdByUserType",
          "createdDate",
          "crn",
          "riskSummaryComments",
          "source",
          "sourceId"
        ],
        "type": "object",
        "properties": {
          "supplementaryRiskId": {
            "type": "string",
            "description": "Supplementary Risk ID",
            "format": "uuid",
            "example": "78beac68-884c-4784-9bea-fd8088f52a47"
          },
          "source": {
            "type": "string",
            "description": "Source of Risk",
            "example": "INTERVENTION_REFERRAL",
            "enum": [
              "INTERVENTION_REFERRAL"
            ]
          },
          "sourceId": {
            "type": "string",
            "description": "Source Id",
            "example": "78beac68-884c-4784-9bea-fd8088f52a47 or 1989823"
          },
          "crn": {
            "type": "string",
            "description": "Offender CRN",
            "example": "DX12340A"
          },
          "createdByUser": {
            "type": "string",
            "description": "Created By User",
            "example": "Paul Newman"
          },
          "createdByUserType": {
            "type": "string",
            "description": "Created By User Type",
            "example": "delius"
          },
          "createdDate": {
            "type": "object",
            "example": "2024-05-08T23:11:23"
          },
          "redactedRisk": {
            "$ref": "#/components/schemas/RedactedOasysRiskDto"
          },
          "riskSummaryComments": {
            "type": "string",
            "description": "Risk Summary Comments",
            "example": "Free text up to 4000 characters"
          }
        }
      },
      "RedactedOasysRiskDto": {
        "type": "object",
        "properties": {
          "riskWho": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 10.1, 'Who is at risk'",
            "example": "Free text up to 4000 characters"
          },
          "riskWhen": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 10.3, 'When is the risk likely to be greatest'",
            "example": "Free text up to 4000 characters"
          },
          "riskNature": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 10.2, 'What is the nature of the risk'",
            "example": "Free text up to 4000 characters"
          },
          "concernsSelfHarm": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 3.2, 'Concerns in relation to self harm'",
            "example": "Free text up to 4000 characters"
          },
          "concernsSuicide": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 3.1, 'Concerns in relation to suicide'",
            "example": "Free text up to 4000 characters"
          },
          "concernsHostel": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 3.3, 'Concerns in relation to coping in a hostel setting'",
            "example": "Free text up to 4000 characters"
          },
          "concernsVulnerability": {
            "type": "string",
            "description": "Question corresponding to OASys ROSH 3.4, 'Concerns in relation to vulnerability'",
            "example": "Free text up to 4000 characters"
          }
        },
        "description": "Redacted risk answers"
      },
      "AllRoshRiskDto_AllRisksView": {
        "required": [
          "otherRisks",
          "riskToSelf",
          "summary"
        ],
        "type": "object",
        "properties": {
          "riskToSelf": {
            "$ref": "#/components/schemas/RoshRiskToSelfDto_AllRisksView"
          },
          "otherRisks": {
            "$ref": "#/components/schemas/OtherRoshRisksDto_AllRisksView"
          },
          "summary": {
            "$ref": "#/components/schemas/RiskRoshSummaryDto_AllRisksView"
          },
          "assessedOn": {
            "type": "object",
            "example": "2023-10-04T07:06:43"
          }
        }
      },
      "OtherRoshRisksDto_AllRisksView": {
        "type": "object",
        "properties": {
          "escapeOrAbscond": {
            "type": "string",
            "description": "Escape / abscond",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          },
          "controlIssuesDisruptiveBehaviour": {
            "type": "string",
            "description": "Control issues / disruptive behaviour",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          },
          "breachOfTrust": {
            "type": "string",
            "description": "Concerns in respect of breach of trust",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          },
          "riskToOtherPrisoners": {
            "type": "string",
            "description": "Risks to other prisoners",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          }
        }
      },
      "RiskDto_AllRisksView": {
        "type": "object",
        "properties": {
          "risk": {
            "type": "string",
            "description": "is there any risk",
            "example": "YES",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          },
          "previous": {
            "type": "string",
            "description": "Previous concerns",
            "example": "YES",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          },
          "previousConcernsText": {
            "type": "string",
            "description": "Previous concerns supporting comments",
            "example": "Risk of self harms concerns due to ..."
          },
          "current": {
            "type": "string",
            "description": "Current concerns",
            "example": "YES",
            "enum": [
              "YES",
              "NO",
              "DK",
              "NA"
            ]
          },
          "currentConcernsText": {
            "type": "string",
            "description": "Current concerns supporting comments",
            "example": "Risk of self harms concerns due to ..."
          }
        },
        "description": "Vulnerability"
      },
      "RiskRoshSummaryDto_AllRisksView": {
        "required": [
          "riskInCommunity",
          "riskInCustody"
        ],
        "type": "object",
        "properties": {
          "whoIsAtRisk": {
            "type": "string",
            "description": "Who is at risk?",
            "example": "X, Y and Z are at risk"
          },
          "natureOfRisk": {
            "type": "string",
            "description": "What is the nature of the risk?",
            "example": "The nature of the risk is X"
          },
          "riskImminence": {
            "type": "string",
            "description": "When is the risk likely to be greatest. Consider the timescale and indicate whether risk is immediate or not. Consider the risks in custody as well as on release.",
            "example": "the risk is imminent and more probably in X situation"
          },
          "riskIncreaseFactors": {
            "type": "string",
            "description": "What circumstances are likely to increase risk. Describe factors, actions, events which might increase level of risk, now and in the future.",
            "example": "If offender in situation X the risk can be higher"
          },
          "riskMitigationFactors": {
            "type": "string",
            "description": "What factors are likely to reduce the risk. Describe factors, actions, and events which may reduce or contain the level of risk. What has previously stopped him / her?",
            "example": "Giving offender therapy in X will reduce the risk"
          },
          "riskInCommunity": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Assess the risk of serious harm the offender poses in the community",
              "example": {
                "HIGH ": [
                  "Children",
                  "Public",
                  "Know adult"
                ],
                "MEDIUM": [
                  "Staff"
                ],
                "LOW": [
                  "Prisoners"
                ]
              },
              "items": {
                "type": "string",
                "description": "Assess the risk of serious harm the offender poses in the community",
                "example": "{\"HIGH \":[\"Children\",\"Public\",\"Know adult\"],\"MEDIUM\":[\"Staff\"],\"LOW\":[\"Prisoners\"]}"
              }
            },
            "description": "Assess the risk of serious harm the offender poses in the community",
            "example": {
              "HIGH ": [
                "Children",
                "Public",
                "Know adult"
              ],
              "MEDIUM": [
                "Staff"
              ],
              "LOW": [
                "Prisoners"
              ]
            }
          },
          "riskInCustody": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "description": "Assess the risk of serious harm the offender poses on the basis that they could be released imminently back into the community.Assess both the risk of serious harm the offender presents now, in custody, and the risk they could present to others whilst in a custodial setting.",
              "example": {
                "HIGH ": [
                  "Know adult"
                ],
                "VERY_HIGH": [
                  "Staff",
                  "Prisoners"
                ],
                "LOW": [
                  "Children",
                  "Public"
                ]
              },
              "items": {
                "type": "string",
                "description": "Assess the risk of serious harm the offender poses on the basis that they could be released imminently back into the community.Assess both the risk of serious harm the offender presents now, in custody, and the risk they could present to others whilst in a custodial setting.",
                "example": "{\"HIGH \":[\"Know adult\"],\"VERY_HIGH\":[\"Staff\",\"Prisoners\"],\"LOW\":[\"Children\",\"Public\"]}"
              }
            },
            "description": "Assess the risk of serious harm the offender poses on the basis that they could be released imminently back into the community.Assess both the risk of serious harm the offender presents now, in custody, and the risk they could present to others whilst in a custodial setting.",
            "example": {
              "HIGH ": [
                "Know adult"
              ],
              "VERY_HIGH": [
                "Staff",
                "Prisoners"
              ],
              "LOW": [
                "Children",
                "Public"
              ]
            }
          },
          "overallRiskLevel": {
            "type": "string",
            "description": "Overall Risk Level",
            "example": "HIGH",
            "enum": [
              "VERY_HIGH",
              "HIGH",
              "MEDIUM",
              "LOW"
            ]
          }
        }
      },
      "RoshRiskToSelfDto_AllRisksView": {
        "type": "object",
        "properties": {
          "suicide": {
            "$ref": "#/components/schemas/RiskDto_AllRisksView"
          },
          "selfHarm": {
            "$ref": "#/components/schemas/RiskDto_AllRisksView"
          },
          "custody": {
            "$ref": "#/components/schemas/RiskDto_AllRisksView"
          },
          "hostelSetting": {
            "$ref": "#/components/schemas/RiskDto_AllRisksView"
          },
          "vulnerability": {
            "$ref": "#/components/schemas/RiskDto_AllRisksView"
          }
        }
      },
      "OgpScoreDto": {
        "type": "object",
        "properties": {
          "ogpStaticWeightedScore": {
            "type": "number"
          },
          "ogpDynamicWeightedScore": {
            "type": "number"
          },
          "ogpTotalWeightedScore": {
            "type": "number"
          },
          "ogp1Year": {
            "type": "number"
          },
          "ogp2Year": {
            "type": "number"
          },
          "ogpRisk": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "VERY_HIGH",
              "NOT_APPLICABLE"
            ]
          }
        }
      },
      "OgrScoreDto": {
        "type": "object",
        "properties": {
          "oneYear": {
            "type": "number"
          },
          "twoYears": {
            "type": "number"
          },
          "scoreLevel": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "VERY_HIGH",
              "NOT_APPLICABLE"
            ]
          }
        }
      },
      "OspScoreDto": {
        "type": "object",
        "properties": {
          "ospIndecentPercentageScore": {
            "type": "number"
          },
          "ospContactPercentageScore": {
            "type": "number"
          },
          "ospIndecentScoreLevel": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "VERY_HIGH",
              "NOT_APPLICABLE"
            ]
          },
          "ospContactScoreLevel": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "VERY_HIGH",
              "NOT_APPLICABLE"
            ]
          }
        }
      },
      "OvpScoreDto": {
        "type": "object",
        "properties": {
          "ovpStaticWeightedScore": {
            "type": "number"
          },
          "ovpDynamicWeightedScore": {
            "type": "number"
          },
          "ovpTotalWeightedScore": {
            "type": "number"
          },
          "oneYear": {
            "type": "number"
          },
          "twoYears": {
            "type": "number"
          },
          "ovpRisk": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "VERY_HIGH",
              "NOT_APPLICABLE"
            ]
          }
        }
      },
      "RiskScoresDto": {
        "type": "object",
        "properties": {
          "completedDate": {
            "type": "string",
            "example": "2023-10-04T07:06:43"
          },
          "assessmentStatus": {
            "type": "string"
          },
          "groupReconvictionScore": {
            "$ref": "#/components/schemas/OgrScoreDto"
          },
          "violencePredictorScore": {
            "$ref": "#/components/schemas/OvpScoreDto"
          },
          "generalPredictorScore": {
            "$ref": "#/components/schemas/OgpScoreDto"
          },
          "riskOfSeriousRecidivismScore": {
            "$ref": "#/components/schemas/RsrScoreDto"
          },
          "sexualPredictorScore": {
            "$ref": "#/components/schemas/OspScoreDto"
          }
        }
      },
      "RsrScoreDto": {
        "required": [
          "source"
        ],
        "type": "object",
        "properties": {
          "percentageScore": {
            "type": "number"
          },
          "staticOrDynamic": {
            "type": "string",
            "enum": [
              "STATIC",
              "DYNAMIC"
            ]
          },
          "source": {
            "type": "string",
            "enum": [
              "ASSESSMENTS_API",
              "OASYS",
              "DELIUS"
            ]
          },
          "algorithmVersion": {
            "type": "string"
          },
          "scoreLevel": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "VERY_HIGH",
              "NOT_APPLICABLE"
            ]
          }
        }
      },
      "AssessmentNeedDto": {
        "type": "object",
        "properties": {
          "section": {
            "type": "string",
            "description": "The section of the need in oasys",
            "example": "DRUG_MISUSE"
          },
          "name": {
            "type": "string",
            "description": "The name of the section need",
            "example": "Drug misuse"
          },
          "overThreshold": {
            "type": "boolean",
            "description": "Represents whether the weighted score of the section is over the threshold",
            "example": true
          },
          "riskOfHarm": {
            "type": "boolean",
            "description": "Whether the section answers indicate a risk of harm",
            "example": false
          },
          "riskOfReoffending": {
            "type": "boolean",
            "description": "Whether the section answers indicate a risk of reoffending",
            "example": false
          },
          "flaggedAsNeed": {
            "type": "boolean",
            "description": "Whether the section has been flagged as a low scoring need",
            "example": true
          },
          "severity": {
            "type": "string",
            "description": "The calculated severity of the need",
            "example": "SEVERE",
            "enum": [
              "NO_NEED",
              "STANDARD",
              "SEVERE"
            ]
          },
          "identifiedAsNeed": {
            "type": "boolean",
            "description": "Whether the section questions indicate that this section is a need",
            "example": true
          },
          "needScore": {
            "type": "integer",
            "description": "The weighted score for the section",
            "format": "int64",
            "example": 4
          }
        },
        "description": "Collection of assessment need sections which have not been answered"
      },
      "AssessmentNeedsDto": {
        "required": [
          "assessedOn",
          "identifiedNeeds",
          "notIdentifiedNeeds",
          "unansweredNeeds"
        ],
        "type": "object",
        "properties": {
          "identifiedNeeds": {
            "type": "array",
            "description": "Collection of assessment need sections which have been answered and identified as needs",
            "items": {
              "$ref": "#/components/schemas/AssessmentNeedDto"
            }
          },
          "notIdentifiedNeeds": {
            "type": "array",
            "description": "Collection of assessment need sections which have been answered but are not identified as needs",
            "items": {
              "$ref": "#/components/schemas/AssessmentNeedDto"
            }
          },
          "unansweredNeeds": {
            "type": "array",
            "description": "Collection of assessment need sections which have not been answered",
            "items": {
              "$ref": "#/components/schemas/AssessmentNeedDto"
            }
          },
          "assessedOn": {
            "type": "object",
            "example": "2023-10-04T07:06:43"
          }
        }
      }
    }
  }
}
