package uk.gov.justice.digital.hmpps.hmppsintegrationapi.models.locationsInsidePrison

import uk.gov.justice.digital.hmpps.hmppsintegrationapi.models.hmpps.Location
import java.time.LocalDateTime

data class LIPLocation(
  val id: String,
  val prisonId: String,
  val code: String,
  val pathHierarchy: String,
  val locationType: String,
  val localName: String? = null,
  val comments: String? = null,
  val permanentlyInactive: Boolean,
  val permanentlyInactiveReason: String? = null,
  val capacity: LIPLocationCapacity? = null,
  val oldWorkingCapacity: Int? = null,
  val certification: LIPLocationCertification? = null,
  val usage: List<LIPLocationUsageItem>? = null,
  val accommodationTypes: List<String>? = null,
  val specialistCellTypes: List<String>? = null,
  val usedFor: List<String>? = null,
  val status: String?,
  val convertedCellType: String? = null,
  val otherConvertedCellType: String? = null,
  val active: Boolean,
  val deactivatedByParent: Boolean,
  val deactivatedDate: String? = null,
  val deactivatedReason: String? = null,
  val deactivationReasonDescription: String? = null,
  val deactivatedBy: String? = null,
  val proposedReactivationDate: String? = null,
  val planetFmReference: String? = null,
  val topLevelId: String,
  val level: Int,
  val leafLevel: Boolean,
  val parentId: String? = null,
  val parentLocation: LIPLocation? = null,
  val inactiveCells: Int? = null,
  val numberOfCellLocations: Int? = null,
  val childLocations: List<LIPLocation>? = null,
  val changeHistory: List<LIPChangeHistoryItem>? = null,
  val transactionHistory: List<LIPTransactionHistoryItem>? = null,
  val lastModifiedBy: String,
  val lastModifiedDate: LocalDateTime,
  val key: String,
  val isResidential: Boolean,
) {
  fun toLocation(): Location =
    Location(
      key = this.key,
      code = this.code,
      pathHierarchy = this.pathHierarchy,
      locationType = this.locationType,
      localName = this.localName,
      comments = this.comments,
      capacity = this.capacity?.toLocationCapacity(),
      oldWorkingCapacity = this.oldWorkingCapacity,
      certification = this.certification?.toLocationCertification(),
      usage = this.usage?.map { it.toLocationUsageItem() },
      accommodationTypes = this.accommodationTypes,
      specialistCellTypes = this.specialistCellTypes,
      usedFor = this.usedFor,
      status = this.status,
      convertedCellType = this.convertedCellType,
      otherConvertedCellType = this.otherConvertedCellType,
      active = this.active,
      deactivatedByParent = this.deactivatedByParent,
      deactivatedDate = this.deactivatedDate,
      deactivatedReason = this.deactivatedReason,
      deactivationReasonDescription = this.deactivationReasonDescription,
      deactivatedBy = this.deactivatedBy,
      proposedReactivationDate = this.proposedReactivationDate,
      planetFmReference = this.planetFmReference,
      level = this.level,
      parentLocationKey = this.parentLocation?.key,
      inactiveCells = this.inactiveCells,
      numberOfCellLocations = this.numberOfCellLocations,
      isResidential = this.isResidential,
    )
}
