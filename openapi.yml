openapi: 3.0.0
info:
  title: HMPPS Integration API
  description:
    A long-lived API that exposes data from HMPPS systems such as the National Offender Management Information
    System (NOMIS), nDelius (probation system) and Offender Assessment System (OASys), providing a single point
    of entry for consumers.
  version: 0.0.1

paths:
  /v1/persons:
    get:
      tags:
        - persons
      summary: Returns person(s) by search criteria. At least one query parameter must be specified.
      parameters:
        - in: query
          name: first_name
          schema:
            type: string
          required: false
          description: The first name of the person
        - in: query
          name: last_name
          schema:
            type: string
          required: false
          description: The last name of the person
        - in: query
          name: page
          schema:
            type: number
            minimum: 1
            default: 1
          required: false
          description: The page number (starting from 1)
        - in: query
          name: per_page
          schema:
            type: number
            minimum: 1
            default: 10
          required: false
          description: The maximum number of results for a page
      responses:
        "200":
          description: Successfully performed the query on upstream APIs. An empty list is returned when no results are found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Person"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "400":
          description: There were no query parameters passed in. At least one must be specified.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                NoQueryParametersBadRequestError:
                  $ref: "#/components/examples/NoQueryParametersBadRequestError"

  /v1/persons/{encodedPncId}:
    get:
      tags:
        - persons
      summary: Returns a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
      responses:
        "200":
          description: Successfully found a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  prisonerOffenderSearch:
                    $ref: "#/components/schemas/Person"
                  probationOffenderSearch:
                    $ref: "#/components/schemas/Person"
        "404":
          description: Failed to find a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/persons/{encodedPncId}/images:
    get:
      tags:
        - persons
      summary: Returns metadata of images associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
        - in: query
          name: page
          schema:
            type: number
            minimum: 0
            default: 1
          required: false
          description: The page number (starting from 1)
        - in: query
          name: per_page
          schema:
            type: number
            minimum: 1
            default: 10
          required: false
          description: The maximum number of results for a page
      responses:
        "200":
          description: Successfully found a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Image"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: Failed to find a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/persons/{encodedPncId}/addresses:
    get:
      tags:
        - persons
      summary: Returns addresses associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
      responses:
        "200":
          description: Successfully found a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Address"
        "404":
          description: Failed to find a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/images/{id}:
    get:
      tags:
        - images
      summary: Returns an image in bytes as a JPEG.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully found an image with the provided ID.
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
        "404":
          description: Failed to find an image with the provided ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                ImageNotFoundError:
                  $ref: "#/components/examples/ImageNotFoundError"

  /{TBC}/v1/persons/{Id}/accommodations:
    get:
      summary: FUTURE ENDPOINT - Returns accommodation and referral information associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/adjudications:
    get:
      summary: FUTURE ENDPOINT - Returns adjudications associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/interventions:
    get:
      summary: FUTURE ENDPOINT - Returns activities and Non-Statutory Interventions (NSIs) associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/key-workers:
    get:
      summary: FUTURE ENDPOINT - Returns responsible officer history, transfer history and consolidated transfer review associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/licenses:
    get:
      summary: FUTURE ENDPOINT - Returns license conditions associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/offences:
    get:
      summary: FUTURE ENDPOINT -  Returns offences associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/prisoner-visits:
    get:
      summary: FUTURE ENDPOINT -  Returns prisoner visits associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/probation-contact-events:
    get:
      summary: FUTURE ENDPOINT - Returns probation contact events associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/release-information:
    get:
      summary: FUTURE ENDPOINT - Returns release dates and information associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/risks:
    get:
      summary: FUTURE ENDPOINT - Returns prisoner risks, alerts, personal circumstances, prisoner category, person assessments, risk of re-offending, OASys General Predictor (OGP) scores, OASys Violence Predictor (OVP) scores, likelihood of serious harm to others, concerns, RoSH (Risk of serious harm) summary, registration summary associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/sentences:
    get:
      summary: FUTURE ENDPOINT - Returns prisoner sentences, bookings / incarceration associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/security:
    get:
      summary: FUTURE ENDPOINT - Returns security information such as prisoner non-associations and prisoner incidents for a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/special-needs:
    get:
      summary: FUTURE ENDPOINT -  Returns special needs such as drugs test summaries, drug history and drugs test lists associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

components:
  parameters:
    EncodedPncId:
      name: encodedPncId
      description: A URL-encoded Police National Computer (PNC) identifier.
      example: 2008%2F0545166T
      in: path
      required: true
      schema:
        type: string
    Id:
      name: Id
      description: An Id (TBC), potentially Case Reference Number (CRN)
      example: X00001
      in: path
      required: true
      schema:
        type: string
  schemas:
    Address:
      type: object
      properties:
        country:
          type: string
          example: England
        county:
          type: string
          example: Greater London
        endDate:
          type: string
          example: 20 May 2023
        locality:
          type: string
          example: London Bridge
        name:
          type: string
        number:
          type: string
          example: 1
        postcode:
          type: string
          example: SE1 1TE
        startDate:
          type: string
          example: 1 January 2023
        street:
          type: string
          example: O'Meara Street
        town:
          type: string
          example: London
        type:
          type: string
          example: Type?
    Alias:
      type: object
      properties:
        firstName:
          type: string
          example: John
          description: first name
        middleName:
          type: string
          example: Michael
          nullable: true
          description: middle name
        lastName:
          type: string
          example: Marston
          description: last name
        dateOfBirth:
          type: string
          format: date
          example: 1965-12-01
          description: date of birth
    Error:
      type: object
      properties:
        status:
          type: integer
          enum: [ 400, 404, 500 ]
        errorCode:
          type: integer
          nullable: true
          example: null
        userMessage:
          type: string
        developerMessage:
          type: string
        moreInfo:
          type: string
          nullable: true
          example: null
    Image:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          format: int64
          example: 2461788
          description: The Image ID, in reference to a unique identifier.
        active:
          type: boolean
          example: true
          description: A flag to indicate whether an image is in active use. It is no guarantee that the latest uploaded image will be the active one.
        captureDateTime:
          type: string
          format: date-time
          example: 2015-05-27T17:13:59
          description: The Date and Time of when the image was captured.
        view:
          type: string
          example: FACE
          description: The view describes the "close-up" - primary foci, subject, or inner focus of the image. In practise this is the interior foci of what is captured in the 'orientation' field.
        orientation:
          type: string
          example: FRONT
          description: The orientation describes the secondary foci, scope, or outer focus of the image, which is to be the anatomical body part or angle of an image. In practise this is the exterior foci of what is captured in the 'view' field.
        type:
          type: string
          example: OFF_BKG
          description: The type describes the contextual foci, context or scenario within which the image was taken. It could be for a particular purpose or capturing the results of a particular type of incident.
    Pagination:
      type: object
      properties:
        isLastPage:
          type: boolean
          example: true
          description: Is the current page the last one?
        count:
          type: integer
          example: 1
          description: The number of results in `data` for the current page
        page:
          type: integer
          example: 1
          description: The current page number
        perPage:
          type: integer
          example: 10
          description: The maximum number of results in `data` for a page
        totalCount:
          type: integer
          example: 1
          description: The total number of results in `data` across all pages
        totalPages:
          type: integer
          example: 1
          description: The total number of pages
    Person:
      type: object
      properties:
        firstName:
          type: string
          example: Arthur
          description: first name
        middleName:
          type: string
          example: John
          nullable: true
          description: middle name
        lastName:
          type: string
          example: Morgan
          description: last name
        dateOfBirth:
          type: string
          format: date
          example: 1965-12-01
          description: date of birth
        aliases:
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/Alias"
          description: list of aliases
        prisonerId:
          type: string
          example: A1234AA
          description: A prisoner identifier from Prison API (NOMIS)
        pncId:
          type: string
          example: 2008/0545166T
          description: An identifier from the Police National Computer (PNC)
  examples:
    PersonNotFoundError:
      value:
        status: 404
        errorCode: null
        userMessage: "404 Not found error: Could not find person with PNC id: 2003/0011991D"
        developerMessage: "Could not find person with PNC id: 2003/0011991D"
        moreInfo: null
    ImageNotFoundError:
      value:
        status: 404
        errorCode: null
        userMessage: "404 Not found error: Could not find an image with id: 123456"
        developerMessage: "Could not find an image with id: 123456"
        moreInfo: null
    NoQueryParametersBadRequestError:
      value:
        status: 400,
        errorCode: null,
        userMessage: "Validation failure: No query parameters specified."
        developerMessage: "No query parameters specified."
        moreInfo: null
