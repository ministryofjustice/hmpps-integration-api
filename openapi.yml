openapi: 3.0.0
info:
  title: HMPPS Integration API
  description:
    A long-lived API that exposes data from HMPPS systems such as the National Offender Management Information
    System (NOMIS), nDelius (probation system) and Offender Assessment System (OASys), providing a single point
    of entry for consumers.
  version: 0.0.1

paths:
  /v1/persons:
    get:
      tags:
        - persons
      summary: Returns person(s) by search criteria. At least one query parameter must be specified.
      parameters:
        - in: query
          name: first_name
          schema:
            type: string
          required: false
          description: The first name of the person
        - in: query
          name: last_name
          schema:
            type: string
          required: false
          description: The last name of the person
        - in: query
          name: search_within_aliases
          schema:
            type: boolean
            default: false
          required: false
          description: Whether to return results that match the search criteria within the aliases of a person
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      responses:
        "200":
          description: Successfully performed the query on upstream APIs. An empty list is returned when no results are found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Person"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "400":
          description: There were no query parameters passed in. At least one must be specified.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                NoQueryParametersBadRequestError:
                  $ref: "#/components/examples/NoQueryParametersBadRequestError"

  /v1/persons/{encodedPncId}:
    get:
      tags:
        - persons
      summary: Returns a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
      responses:
        "200":
          description: Successfully found a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  prisonerOffenderSearch:
                    $ref: "#/components/schemas/Person"
                  probationOffenderSearch:
                    $ref: "#/components/schemas/Person"
        "404":
          description: Failed to find a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/persons/{encodedPncId}/images:
    get:
      tags:
        - persons
      summary: Returns metadata of images associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      responses:
        "200":
          description: Successfully found a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Image"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: Failed to find a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/images/{id}:
    get:
      tags:
        - images
      summary: Returns an image in bytes as a JPEG.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully found an image with the provided ID.
          content:
            image/jpeg:
              schema:
                type: string
                format: byte
        "404":
          description: Failed to find an image with the provided ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                ImageNotFoundError:
                  $ref: "#/components/examples/ImageNotFoundError"

  /v1/persons/{encodedPncId}/addresses:
    get:
      tags:
        - persons
      summary: Returns addresses associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      responses:
        "200":
          description: Successfully found a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Address"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: Failed to find a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/persons/{encodedPncId}/offences:
    get:
      tags:
        - persons
      summary: Returns offences associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      responses:
        "200":
          description: Successfully found offences for a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Offence"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: Failed to find offences a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/persons/{encodedPncId}/alerts:
    get:
      tags:
        - persons
        - alerts
      summary: Returns alerts associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      responses:
        "200":
          description: Successfully found alerts for a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Alert"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: Failed to find alerts a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /v1/persons/{Id}/sentences:
    get:
      tags:
        - persons
      summary: Returns sentences associated with a person.
      parameters:
        - $ref: "#/components/parameters/EncodedPncId"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      responses:
        "200":
          description: Successfully found sentences for a person with the provided PNC ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: "#/components/schemas/Sentence"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "404":
          description: Failed to find sentences a person with the provided PNC ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                PersonNotFoundError:
                  $ref: "#/components/examples/PersonNotFoundError"

  /{TBC}/v1/persons/{Id}/accommodations:
    get:
      summary: FUTURE ENDPOINT - Returns accommodation and referral information associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/adjudications:
    get:
      summary: FUTURE ENDPOINT - Returns adjudications associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/interventions:
    get:
      summary: FUTURE ENDPOINT - Returns activities and Non-Statutory Interventions (NSIs) associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/key-workers:
    get:
      summary: FUTURE ENDPOINT - Returns responsible officer history, transfer history and consolidated transfer review associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/licenses:
    get:
      summary: FUTURE ENDPOINT - Returns license conditions associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/prisoner-visits:
    get:
      summary: FUTURE ENDPOINT -  Returns prisoner visits associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/probation-contact-events:
    get:
      summary: FUTURE ENDPOINT - Returns probation contact events associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/release-information:
    get:
      summary: FUTURE ENDPOINT - Returns release dates and information associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/risks:
    get:
      summary: FUTURE ENDPOINT - Returns prisoner risks, alerts, personal circumstances, prisoner category, person assessments, risk of re-offending, OASys General Predictor (OGP) scores, OASys Violence Predictor (OVP) scores, likelihood of serious harm to others, concerns, RoSH (Risk of serious harm) summary, registration summary associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.


  /{TBC}/v1/persons/{Id}/security:
    get:
      summary: FUTURE ENDPOINT - Returns security information such as prisoner non-associations and prisoner incidents for a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

  /{TBC}/v1/persons/{Id}/special-needs:
    get:
      summary: FUTURE ENDPOINT -  Returns special needs such as drugs test summaries, drug history and drugs test lists associated with a person.
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Success.

components:
  parameters:
    EncodedPncId:
      name: encodedPncId
      description: A URL-encoded Police National Computer (PNC) identifier.
      example: 2008%2F0545166T
      in: path
      required: true
      schema:
        type: string
    Id:
      name: Id
      description: An Id (TBC), potentially Case Reference Number (CRN)
      example: X00001
      in: path
      required: true
      schema:
        type: string
    Page:
      name: page
      in: query
      schema:
        type: number
        minimum: 0
        default: 1
      required: false
      description: The page number (starting from 1)
    PerPage:
      name: per_page
      in: query
      schema:
        type: number
        minimum: 1
        default: 10
      required: false
      description: The maximum number of results for a page
  schemas:
    Address:
      type: object
      properties:
        country:
          type: string
          example: England
        county:
          type: string
          example: Greater London
        endDate:
          type: string
          example: 20 May 2023
          format: date
        locality:
          type: string
          example: London Bridge
        name:
          type: string
          description: Name of the building of residence
        noFixedAddress:
          type: boolean
          example: true
          description: Indicates whether the person has a permanent place of residence
        number:
          type: string
          example: 1
        postcode:
          type: string
          example: SE1 1TE
        startDate:
          type: string
          example: 1 January 2023
          format: date
        street:
          type: string
          example: O'Meara Street
        town:
          type: string
          example: London
        types:
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/AddressType"
          description: Type or usage of address
        notes:
          type: string
          example: This is their partner's address.
    AddressType:
      type: object
      properties:
        code:
          type: string
          example: BUS
          description: Address type code
        description:
          type: string
          example: Business Address
          description: Description of address type
    Alert:
      type: object
      properties:
        offenderNo:
          type: string
          example: Z1234ZZ
          description: Offender unique reference
        type:
          type: string
          example: X
          description: Alert type
        typeDescription:
          type: string
          example: Security
          description: Alert type description
        code:
          type: string
          example: PO
          description: Alert code
        codeDescription:
          type: string
          example: MAPPA Nominal
          description: Alert code description
        comment:
          type: string
          example: Professional lock pick
          description: Alert comment
        dateCreated:
          type: string
          format: date
          example: 2014-09-23
          description: Date of the alert, which might differ from the date it was created
        dateExpired:
          type: string
          format: date
          example: 2015-09-23
          description: Date that the alert expires
        expired:
          type: boolean
          example: true
          description: Whether the alert has expired
        active:
          type: boolean
          example: false
          description: Whether the alert is active
    Alias:
      type: object
      properties:
        firstName:
          type: string
          example: John
          description: first name
        middleName:
          type: string
          example: Michael
          nullable: true
          description: middle name
        lastName:
          type: string
          example: Marston
          description: last name
        dateOfBirth:
          type: string
          format: date
          example: 1965-12-01
          description: date of birth
        gender:
          type: string
          example: Male
          description: gender
        ethnicity:
          type: string
          example: Prefer not to say
          description: ethnicity
    Error:
      type: object
      properties:
        status:
          type: integer
          enum: [ 400, 404, 500 ]
        errorCode:
          type: integer
          nullable: true
          example: null
        userMessage:
          type: string
        developerMessage:
          type: string
        moreInfo:
          type: string
          nullable: true
          example: null
    Identifiers:
      type: object
      description: Other unique identifiers for a person.
      properties:
        nomisNumber:
          type: string
          example: A1234AA
          description: A prisoner identifier from NOMIS.
        croNumber:
          type: string
          example: SF80/655108T
          description: A Criminal Records Office identifier from National Identification Service (NIS) or National Automated Fingerprint Identification System (NAFIS).
        deliusCrn:
          type: string
          example: X00001
          description: A Case Reference Number from Delius.
    Image:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          format: int64
          example: 2461788
          description: The Image ID, in reference to a unique identifier.
        active:
          type: boolean
          example: true
          description: A flag to indicate whether an image is in active use. It is no guarantee that the latest uploaded image will be the active one.
        captureDateTime:
          type: string
          format: date-time
          example: 2015-05-27T17:13:59
          description: The Date and Time of when the image was captured.
        view:
          type: string
          example: FACE
          enum: [FACE, TAT, OTH, SCAR, MARK, OIC]
          description: >
            View is the subject focus; describing the inner focus or subject of the image, normally referring to a marking, tattoo or deeper level focus of the orientation. In practise this is the interior foci of what is captured in the 'orientation' field.
              Options include:
              `FACE` - Facing,
              `TAT` - Tattoo,
              `OTH` - Other,
              `SCAR` - Scar,
              `MARK` - Mark,
              `OIC` - Offence in Custody
        orientation:
          type: string
          example: FRONT
          enum: [ANKLE, ARM, DAMAGE, EAR, ELBOW, FACE, FIGHT, FINGER, FOOT, FRONT, HAND, HEAD, INCIDENT, INJURY, KNEE, LEG, LIP, NECK, NOSE, SHOULDER, THIGH, TOE, TORSO]
          description: >
            Orientation is the scope focus; describing the scope or outer focus of the image, normally referring to the highest level object of interest within the bounds of the photo itself. This is normally a body part or an angle of photography, such as a photo of someone’s facial view (`FRONT`) or arm (`ARM`).
              Options include:
              `ANKLE` - Ankle,
              `ARM` - Arm,
              `DAMAGE` - Damage,
              `EAR` - Ear,
              `ELBOW` - Elbow,
              `FACE` - Face,
              `FIGHT` - Fight,
              `FINGER` - Finger,
              `FOOT` - Foot,
              `FRONT` - Front Facial View,
              `HAND` - Hand,
              `HEAD` - Head,
              `INCIDENT` - Incident,
              `INJURY` - Injury,
              `KNEE` - Knee,
              `LEG` - Leg,
              `LIP` - Lip,
              `NECK` - Neck,
              `NOSE` - Nose,
              `SHOULDER` - Shoulder,
              `THIGH` - Thigh,
              `TOE` - Toe,
              `TORSO` - Torso
        type:
          type: string
          example: OFF_BKG
          enum: [OFF_BKG, OFF_IDM, OIC, PPTY]
          description: >
            Type is the contextual focus; describing the context or scenario the image was taken within. It could be for a particular purpose or capturing the results of a particular type of incident.
              Options include:
              `OFF_BKG` - Offender Booking,
              `OFF_IDM` - Offender Identification Marks,
              `OIC` - Offence In Custody,
              `PPTY` - Property Image
    Offence:
      type: object
      properties:
        cjsCode:
          type: string
          example: RR84170
          description: Criminal Justice System offence code
        # Court dates has been documented as single string, however it's actually a list of strings. This has been done
        # in order to temporarily fix a rendering issue in our API docs whilst we look for a longer term solution for it.
        courtDates:
          type: string
          format: date
          description: Court dates associated with offences
          example:
            - "2018-02-10"
            - "2019-02-10"
        description:
          type: string
          example: Commit an act / series of acts with intent to pervert the course of public justice
          description: Description associated with the CJS offence code
        endDate:
          type: string
          format: date
          example: 2018-03-10
          description: End date of range over which the offence was believed to have taken place
        hoCode:
          type: string
          example: 06601
          description: Home Office code (HO Code)
        startDate:
          type: string
          format: date
          example: 1965-12-01
          description: Date the offence took place or start date if the offence occurred over a period of time
        statuteCode:
          type: string
          example: RR84
          description: Statute code
    Pagination:
      type: object
      properties:
        isLastPage:
          type: boolean
          example: true
          description: Is the current page the last one?
        count:
          type: integer
          example: 1
          description: The number of results in `data` for the current page
        page:
          type: integer
          example: 1
          description: The current page number
        perPage:
          type: integer
          example: 10
          description: The maximum number of results in `data` for a page
        totalCount:
          type: integer
          example: 1
          description: The total number of results in `data` across all pages
        totalPages:
          type: integer
          example: 1
          description: The total number of pages
    Person:
      type: object
      properties:
        firstName:
          type: string
          example: Arthur
          description: first name
        middleName:
          type: string
          example: John
          nullable: true
          description: middle name
        lastName:
          type: string
          example: Morgan
          description: last name
        dateOfBirth:
          type: string
          format: date
          example: 1965-12-01
          description: date of birth
        gender:
          type: string
          example: Male
          description: gender
        ethnicity:
          type: string
          example: "White: Eng./Welsh/Scot./N.Irish/British"
          description: ethnicity
        aliases:
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/Alias"
          description: list of aliases
        identifiers:
          $ref: "#/components/schemas/Identifiers"
        pncId:
          type: string
          example: 2008/0545166T
          description: An identifier from the Police National Computer (PNC)
    Sentence:
      type: object
      properties:
        dataSource:
          type: string
          enum: [NOMIS, NDELIUS]
          example: NOMIS
          description: Which upstream API the sentence originates from
        dateOfSentencing:
          type: string
          format: date
          example: 2009-09-09
          description: Date of sentencing
        description:
          type: string
          example: Young Offender Inst - >=12 mths
          description: Description of the sentence
        isActive:
          type: boolean
          example: true
          description: Whether the sentence is active
        isCustodial:
          type: boolean
          example: true
          description: Whether the sentence is a custodial sentence
        fineAmount:
          type: double
          example: 400.00
          description: The amount of fine related to the sentence and offence
        length:
          $ref: "#/components/schemas/SentenceLength"
    SentenceLength:
      type: object
      properties:
        duration:
          type: integer
          example: 10
          description: Duration of the sentence
        units:
          type: string
          enum: [Hours, Days, Weeks, Months, Years]
          example: Hours
          description: Time unit that is used in combination with the duration field
        terms:
          type: array
          minItems: 0
          items:
            $ref: "#/components/schemas/SentenceTerm"
    SentenceTerm:
      type: object
      properties:
        years:
          type: integer
          example: 5
          description: Number of years in the term
        months:
          type: integer
          example: 4
          description: Number of months in the term
        weeks:
          type: integer
          example: 3
          description: Number of weeks in the term
        days:
          type: integer
          example: 2
          description: Number of days in the term
        prisonTermCode:
          type: string
          enum: [CUR, DEF, DET, HOURS, IMP, LIC, PSYCH, SCUS, SEC104, SEC105, SEC86, SUP, SUSP]
          example: IMP
          description: >
            The sentence term code
              Options include:
              `CUR` - Curfew Period,
              `DEF` - Deferment Period,
              `DET` - Detention,
              `HOURS` - Hours Ordered,
              `IMP` - Imprisonment,
              `LIC` - Licence,
              `PSYCH` - Psychiatric Hospital,
              `SCUS` - Custodial Period,
              `SEC104` - Breach of supervision requirements,
              `SEC105` - Breach due to imprisonable offence,
              `SEC86` - Section 86 of 2000 Act,
              `SUP` - Sentence Length,
              `SUSP` - Suspension Period
  examples:
    PersonNotFoundError:
      value:
        status: 404
        errorCode: null
        userMessage: "404 Not found error: Could not find person with PNC id: 2003/0011991D"
        developerMessage: "Could not find person with PNC id: 2003/0011991D"
        moreInfo: null
    ImageNotFoundError:
      value:
        status: 404
        errorCode: null
        userMessage: "404 Not found error: Could not find an image with id: 123456"
        developerMessage: "Could not find an image with id: 123456"
        moreInfo: null
    NoQueryParametersBadRequestError:
      value:
        status: 400,
        errorCode: null,
        userMessage: "Validation failure: No query parameters specified."
        developerMessage: "No query parameters specified."
        moreInfo: null
